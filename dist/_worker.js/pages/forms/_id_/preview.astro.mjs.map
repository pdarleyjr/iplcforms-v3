{"version":3,"file":"preview.astro.mjs","sources":["../../../../../src/pages/forms/[id]/preview.astro"],"sourcesContent":["---\r\nexport const prerender = false;\r\n\r\nimport Layout from '@/layouts/Layout.astro';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport SurveyRuntime from '@/components/form-builder/SurveyRuntime';\r\nimport { FormTemplateService } from '@/lib/services/form_template';\r\n\r\nconst { id } = Astro.params;\r\n\r\nif (!id) {\r\n  return Astro.redirect('/forms');\r\n}\r\n\r\nconst { DB } = Astro.locals.env || {};\r\nconst formTemplateService = new FormTemplateService(DB);\r\n\r\nlet template;\r\ntry {\r\n  template = await formTemplateService.getById(parseInt(id));\r\n  if (!template) {\r\n    return Astro.redirect('/forms');\r\n  }\r\n} catch (error) {\r\n  console.error('Error loading form template:', error);\r\n  return Astro.redirect('/forms');\r\n}\r\n\r\n// Format dates\r\nconst formatDate = (dateString: string) => {\r\n  return new Date(dateString).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n---\r\n\r\n<Layout title={`Preview: ${template.name}`}>\r\n  <div class=\"space-y-8\">\r\n    <!-- Header -->\r\n    <div class=\"flex items-center justify-between\">\r\n      <div>\r\n        <h1 class=\"text-3xl font-bold tracking-tight\">Form Preview</h1>\r\n        <p class=\"text-muted-foreground\">\r\n          Previewing: <span class=\"font-medium\">{template.name}</span>\r\n        </p>\r\n      </div>\r\n      <div class=\"flex gap-2\">\r\n        <Button variant=\"outline\">\r\n          <a href={`/forms/${id}/analytics`}>View Analytics</a>\r\n        </Button>\r\n        <Button>\r\n          <a href={`/forms/${id}/edit`}>Edit Form</a>\r\n        </Button>\r\n        <Button variant=\"outline\">\r\n          <a href=\"/forms\">‚Üê Back to Forms</a>\r\n        </Button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Form Information -->\r\n    <Card>\r\n      <CardHeader>\r\n        <div class=\"flex items-center justify-between\">\r\n          <div>\r\n            <CardTitle>{template.name}</CardTitle>\r\n            <CardDescription>{template.description}</CardDescription>\r\n          </div>\r\n          <div class=\"flex items-center gap-2\">\r\n            <Badge variant={template.status === 'published' ? 'default' : 'secondary'}>\r\n              {template.status}\r\n            </Badge>\r\n            <Badge variant=\"outline\">Version {template.version}</Badge>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\r\n          <div>\r\n            <strong>Created:</strong> {formatDate(template.created_at)}\r\n          </div>\r\n          <div>\r\n            <strong>Last Updated:</strong> {formatDate(template.updated_at)}\r\n          </div>\r\n          <div>\r\n            <strong>Type:</strong> {template.type}\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <!-- Form Preview -->\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Live Form Preview</CardTitle>\r\n        <CardDescription>\r\n          Preview how this form will appear to users using SurveyJS runtime\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div class=\"bg-gray-50 p-6 rounded-lg\">\r\n          <SurveyRuntime\r\n            client:only=\"react\"\r\n            formSchema={template.schema}\r\n            theme=\"modern\"\r\n            showProgressBar={template.schema?.isMultiPage ? 'top' : 'none'}\r\n            onComplete={(data) => {\r\n              console.log('Form completed with data:', data);\r\n            }}\r\n            onValueChanged={(name, value) => {\r\n              console.log(`Field ${name} changed to:`, value);\r\n            }}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n\r\n    <!-- Form Actions -->\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Form Actions</CardTitle>\r\n        <CardDescription>\r\n          Manage this form template\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        <div class=\"flex flex-wrap gap-4\">\r\n          <Button>\r\n            <a href={`/forms/${id}/edit`}>Edit Form</a>\r\n          </Button>\r\n          <Button variant=\"outline\">\r\n            <a href={`/forms/${id}/analytics`}>View Analytics</a>\r\n          </Button>\r\n          <Button variant=\"outline\">\r\n            Share Form\r\n          </Button>\r\n          <Button variant=\"outline\">\r\n            Export Data\r\n          </Button>\r\n          {template.status === 'draft' ? (\r\n            <Button>\r\n              Publish Form\r\n            </Button>\r\n          ) : (\r\n            <Button variant=\"secondary\">\r\n              Unpublish Form\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n\r\n  <script define:vars={{ template }}>\r\n    // Make template data available to React components\r\n    window.__FORM_TEMPLATE__ = template;\r\n    \r\n    // Handle form actions\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n      // Add event handlers for publish/unpublish actions\r\n      const publishBtn = document.querySelector('[data-action=\"publish\"]');\r\n      const unpublishBtn = document.querySelector('[data-action=\"unpublish\"]');\r\n      \r\n      if (publishBtn) {\r\n        publishBtn.addEventListener('click', async () => {\r\n          try {\r\n            const response = await fetch(`/api/form-templates/${template.id}`, {\r\n              method: 'PUT',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                ...template,\r\n                status: 'published'\r\n              })\r\n            });\r\n            \r\n            if (response.ok) {\r\n              window.location.reload();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error publishing form:', error);\r\n          }\r\n        });\r\n      }\r\n      \r\n      if (unpublishBtn) {\r\n        unpublishBtn.addEventListener('click', async () => {\r\n          try {\r\n            const response = await fetch(`/api/form-templates/${template.id}`, {\r\n              method: 'PUT',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                ...template,\r\n                status: 'draft'\r\n              })\r\n            });\r\n            \r\n            if (response.ok) {\r\n              window.location.reload();\r\n            }\r\n          } catch (error) {\r\n            console.error('Error unpublishing form:', error);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  </script>\r\n</Layout>"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","Layout","$$result","$$maybeRenderHead","$$addAttribute","$$defineScriptVars"],"mappings":";;;;;;;;;;;;;AAAA,MAAA,UAAAA,WAAA,EAAA;AACO,MAAM,SAAA,GAAY,KAAA;AADzB,MAAA,SAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,SAAA;AAUA,EAAA,MAAM,EAAE,EAAA,EAAG,GAAIA,MAAAA,CAAM,MAAA;AAErB,EAAA,IAAI,CAAC,EAAA,EAAI;AACP,IAAA,OAAOA,MAAAA,CAAM,SAAS,QAAQ,CAAA;AAChC,EAAA;AAEA,EAAA,MAAM,EAAE,EAAA,EAAG,GAAIA,MAAAA,CAAM,MAAA,CAAO,OAAO,EAAC;AACpC,EAAA,MAAM,mBAAA,GAAsB,IAAI,mBAAA,CAAoB,EAAE,CAAA;AAEtD,EAAA,IAAI,QAAA;AACJ,EAAA,IAAI;AACF,IAAA,QAAA,GAAW,MAAM,mBAAA,CAAoB,OAAA,CAAQ,QAAA,CAAS,EAAE,CAAC,CAAA;AACzD,IAAA,IAAI,CAAC,QAAA,EAAU;AACb,MAAA,OAAOA,MAAAA,CAAM,SAAS,QAAQ,CAAA;AAChC,IAAA;AACF,EAAA,CAAA,CAAA,OAAS,KAAA,EAAO;AACd,IAAA,OAAA,CAAQ,KAAA,CAAM,gCAAgC,KAAK,CAAA;AACnD,IAAA,OAAOA,MAAAA,CAAM,SAAS,QAAQ,CAAA;AAChC,EAAA;AAGA,EAAA,MAAM,UAAA,GAAa,CAAC,UAAA,KAAuB;AACzC,IAAA,OAAO,IAAI,IAAA,CAAK,UAAU,CAAA,CAAE,mBAAmB,OAAA,EAAS;MACtD,IAAA,EAAM,SAAA;MACN,KAAA,EAAO,MAAA;MACP,GAAA,EAAK,SAAA;MACL,IAAA,EAAM,SAAA;MACN,MAAA,EAAQ;KACT,CAAA;AACH,EAAA,CAAA;AAvCA,EAAA,OAAAC,cAAA,CAAA,EAAAC,eAAA,CAAA,QAAA,EAAA,QAAA,EAAAC,QAAA,EAAA,EA0CQ,OAAA,EA1CR,CAAA,SAAA,EAAA,QAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAC,SAAAA,KAAAH,cAAA,CAAA,EAAA,KAAA,EAAA,GAAA,UAAA,CAAA,CAAA,GAAA,EAAA,yOAAA,EAiD8D,+CAAA,EAMpD,GAAA,EAGA,GAAA,EAGA,2CAAA,EAiCJ,yBAAA,EA0BA,yBAAA,EAmCA,8BAAA,EA3JN,0xDAAA,CAAA,EAAA,CAAA,GAAA,EAAA,yOAAA,EAiD8D,iDAMpD,GAAA,EAGA,GAAA,EAGA,2CAAA,EAiCJ,yBAAA,EA0BA,yBAAA,EAmCA,8BAAA,EA3JN,syDAAA,CAAA,CAAA,CAAA,EAAAI,eAAA,CAAA,CAAA,EAiDiD,QAAA,CAAS,IAAA,EAjD1DH,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAqDgB,SAAA,EArDhB,SAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,GAAA,EAAAK,aAsDmB,CAAA,OAAA,EAAU,EAAE,CAAA,UAAA,CAAA,EAtD/B,MAAA,CAAA,CAAA,oBAAA,CAAA,EAuDU,CAAA,EAvDVJ,gBAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,GAAA,EAAAK,YAAA,CAyDmB,CAAA,OAAA,EAAU,EAAE,CAAA,KAAA,CAAA,EAzD/B,MAAA,CAAA,mBA0DU,CAAA,EA1DVJ,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EA2DgB,SAAA,EA3DhB,WAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,sCAAA,CAAA,EA6DU,CAAA,EA7DVC,gBAAAE,SAAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,uDAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,EAsEwB,QAAA,CAAS,IAtEjC,IAsEwC,CAAA,CAAA,CAAA,EAtExCC,eAAA,CAAAE,SAAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,EAuE8B,QAAA,CAAS,WAvEvC,IAuEqD,CAAA,CAAA,8CAAA,EAvErDC,eAAA,CAAAE,SAAAA,EAAA,OAAA,EAAA,KAAA,EAAA,EA0EmB,SAAA,EA1EnB,QAAA,CAAA,MAAA,KAAA,WAAA,GAAA,SAAA,GAAA,WAAA,EAAA,EAAA,EAAA,WAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,EA2Ee,QAAA,CAAS,MA3ExB,CAAA,CAAA,EA4Ec,CAAA,CAAA,CAAA,EA5EdC,eAAA,CAAAE,SAAAA,EAAA,OAAA,EAAA,KAAA,EAAA,EA6EmB,SAAA,EA7EnB,SAAA,IAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,QAAA,EA6E8C,QAAA,CAAS,OA7EvD,CAAA,CAAA,EA6EiE,CAAA,CAAA,eAAA,CAAA,EAGzD,CAAA,CAAA,CAAA,EAhFRC,eAAA,CAAAE,SAAAA,EAAA,aAAA,EAAA,aAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,6FAAA,EAoFuC,UAAA,CAAW,QAAA,CAAS,UAAU,CAAC,CAAA,6CAAA,EAG1B,UAAA,CAAW,QAAA,CAAS,UAAU,CAAC,wCAGvC,QAAA,CAAS,IAAI,CAAA,eAAA,CAAA,EAGzC,CAAA,CAAA,CAAA,CAAA,EACF,CAAA,EA9FNC,gBAAAE,SAAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,cAAAH,cAAA,CAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,iBAAA,CAAA,EAmGsC,CAAA,IAnGtCC,eAAA,CAAAE,SAAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EAsGU,CAAA,CAAA,CAAA,CAAA,EACF,CAAA,CAAA,CAAA,EAvGRC,gBAAAE,SAAAA,EAAA,aAAA,EAAA,WAAA,EAAA,IAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,0DAAAC,eAAA,CAAAE,SAAAA,EAAA,eAAA,EAAA,IAAA,EAAA,EA2GY,aAAA,EAAa,OAAA,EACb,YAAA,EAAY,QAAA,CAAA,QACZ,OAAA,EAAO,QAAA,EACP,iBAAA,EAAiB,QAAA,CAAA,QAAA,WAAA,GAAA,KAAA,GAAA,MAAA,EACjB,YAAA,EAAY,CAAA,IAAA,KAAA;AAAA,IAAA,OAAA,CAAA,GAAA,CAAA,6BAAA,IAAA,CAAA;EAAA,CAAA,EAGZ,gBAAA,EAAgB,CAAA,IAAA,EAAA,KAAA,KAAA;AAAA,IAAA,OAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,IAAA,CAAA,YAAA,CAAA,EAAA,KAAA,CAAA;EAAA,CAAA,EAlH5B,4BAAA,EAAA,MAAA,EAAA,uBAAA,EAAA,yCAAA,EAAA,yBAAA,EAAA,SAAA,EA0GW,CAAA,CAAA,QAAA,CAAA,EAaH,CAAA,CAAA,CAAA,CAAA,EACF,CAAA,EAxHNF,eAAA,CAAAE,SAAAA,EAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,WAAA,EAAA,SAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,YAAA,CAAA,EA6HiC,CAAA,CAAA,CAAA,EA7HjCC,eAAA,CAAAE,SAAAA,EAAA,iBAAA,EAAA,eAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EAgIU,CAAA,CAAA,CAAA,CAAA,EACF,CAAA,IAjIRC,eAAA,CAAAE,SAAAA,EAAA,aAAA,EAAA,WAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,oCAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,GAAA,EAAAK,aAqIqB,CAAA,OAAA,EAAU,EAAE,CAAA,KAAA,CAAA,EArIjC,MAAA,CAAA,CAAA,eAAA,CAAA,EAsIY,CAAA,CAAA,CAAA,EAtIZJ,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EAuIkB,SAAA,EAvIlB,SAAA,EAAA,EAAA,EAAA,WAAA,OAAAA,SAAAA,KAAAH,cAAA,CAAA,GAAA,EAAAK,YAAA,CAwIqB,UAAU,EAAE,CAAA,UAAA,CAAA,EAxIjC,MAAA,CAAA,CAAA,oBAAA,CAAA,EAyIY,CAAA,CAAA,CAAA,EAzIZJ,gBAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EA0IkB,WA1IlB,SAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EA4IY,CAAA,CAAA,CAAA,EA5IZC,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,MAAA,EAAA,EA6IkB,SAAA,EA7IlB,SAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EA+IY,CAAA,CAAA,CAAA,EACD,QAAA,CAAS,MAAA,KAAW,UAhJ/BA,cAAA,CAAA,EAAAC,eAAA,CAAAE,SAAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAAA,cAAA,CAAA,EAAAC,eAAA,CAAAE,WAAA,QAAA,EAAA,MAAA,EAAA,EAqJoB,SAAA,EArJpB,WAAA,EAAA,EAAA,EAAA,SAAA,EAAA,OAAAA,SAAAA,KAAAH,cAAA;;AAAA,CAAA,EAAA,CAAA,CAAA,CAwJW,CAAA,QAAA,CAAA,EAEH,CAAA,CAAA,CAAA,CAAA,EACF,CAAA,EA3JNM,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,iFAAA,MAAA,CAAA;;;;;;;;;;;;;;;;;"}