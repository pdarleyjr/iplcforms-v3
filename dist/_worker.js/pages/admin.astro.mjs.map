{"version":3,"file":"admin.astro.mjs","sources":["../../../src/components/ui/accordion.tsx","../../../src/lib/api-endpoints.ts","../../../src/components/admin/api-documentation.tsx","../../../src/components/admin/dashboard-tabs.tsx","../../../src/pages/admin/index.astro"],"sourcesContent":["import * as React from \"react\";\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\r\nimport { ChevronDown } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Accordion = AccordionPrimitive.Root;\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAccordionItem.displayName = \"AccordionItem\";\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n));\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n));\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n","interface APIResponse {\r\n  name?: string;\r\n  example: any;\r\n  description?: string;\r\n}\r\n\r\ninterface APIEndpoint {\r\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\";\r\n  path: string;\r\n  description: string;\r\n  parameters?: {\r\n    name: string;\r\n    type: string;\r\n    required: boolean;\r\n    description: string;\r\n  }[];\r\n  requestBody?: {\r\n    example: any;\r\n    description?: string;\r\n  };\r\n  responses: APIResponse[];\r\n}\r\n\r\nconst apiEndpoints: APIEndpoint[] = [\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customers\",\r\n    description: \"Retrieve a list of all customers\",\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          customers: [\r\n            {\r\n              id: 1,\r\n              name: \"John Doe\",\r\n              email: \"john@example.com\",\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Jane Smith\",\r\n              email: \"jane@example.com\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of customer objects\",\r\n      },\r\n      {\r\n        name: \"Response (with subscriptions)\",\r\n        example: {\r\n          customers: [\r\n            {\r\n              id: 1,\r\n              name: \"John Doe\",\r\n              email: \"john@example.com\",\r\n              subscription: {\r\n                id: 1,\r\n                status: \"active\",\r\n              },\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Jane Smith\",\r\n              email: \"jane@example.com\",\r\n            },\r\n          ],\r\n        },\r\n        description:\r\n          \"If subscriptions are active for a customer, some information about the subscription will be included in the response.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customers\",\r\n    description: \"Create a new customer\",\r\n    parameters: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Name of the customer\",\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Email address of the customer\",\r\n      },\r\n      {\r\n        name: \"notes\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"Notes about the customer\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        name: \"John Doe\",\r\n        email: \"john@example.com\",\r\n        notes: \"This is a note\",\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          message: \"Customer created successfully\",\r\n          success: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customers/:id\",\r\n    description: \"Retrieve a single customer\",\r\n    parameters: [\r\n      {\r\n        name: \"id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          customer: {\r\n            id: 1,\r\n            name: \"John Doe\",\r\n            email: \"john@example.com\",\r\n          },\r\n        },\r\n        description: \"Returns a customer object\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/subscriptions\",\r\n    description: \"Retrieve a list of all subscriptions\",\r\n    responses: [\r\n      {\r\n        example: {\r\n          subscriptions: [\r\n            {\r\n              id: 1,\r\n              name: \"Basic\",\r\n              description: \"$9.99 per month\",\r\n              price: 9.99,\r\n              created_at: \"2023-01-01T00:00:00.000Z\",\r\n              updated_at: \"2023-01-01T00:00:00.000Z\",\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Pro\",\r\n              description: \"$19.99 per month\",\r\n              price: 19.99,\r\n              created_at: \"2023-01-01T00:00:00.000Z\",\r\n              updated_at: \"2023-01-01T00:00:00.000Z\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of subscription objects\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/subscriptions\",\r\n    description: \"Create a new subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Name of the subscription\",\r\n      },\r\n      {\r\n        name: \"description\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"Description of the subscription\",\r\n      },\r\n      {\r\n        name: \"price\",\r\n        type: \"number\",\r\n        required: true,\r\n        description: \"Price of the subscription\",\r\n      },\r\n      {\r\n        name: \"features\",\r\n        type: \"array\",\r\n        required: false,\r\n        description: \"Array of feature objects\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        name: \"Basic\",\r\n        description: \"$9.99 per month\",\r\n        price: 9.99,\r\n        features: [\r\n          {\r\n            name: \"Feature 1\",\r\n            description: \"This is a feature description\",\r\n          },\r\n          {\r\n            name: \"Feature 2\",\r\n            description: \"This is another feature description\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          message: \"Customer created successfully\",\r\n          success: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/subscriptions/:id\",\r\n    description: \"Retrieve a single subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the subscription\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          subscription: {\r\n            id: 1,\r\n            name: \"Basic\",\r\n            description: \"$9.99 per month\",\r\n            price: 9.99,\r\n            created_at: \"2023-01-01T00:00:00.000Z\",\r\n            updated_at: \"2023-01-01T00:00:00.000Z\",\r\n          },\r\n        },\r\n        description: \"Returns a subscription object\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customer_subscriptions\",\r\n    description: \"Retrieve a list of all customer subscriptions\",\r\n    responses: [\r\n      {\r\n        example: {\r\n          customer_subscriptions: [\r\n            {\r\n              id: 1,\r\n              customer_id: 1,\r\n              subscription_id: 1,\r\n              status: \"active\",\r\n              subscription_starts_at: \"2024-12-23 21:57:21\",\r\n              subscription_ends_at: 1734993633434,\r\n              created_at: \"2024-12-23 21:57:21\",\r\n              updated_at: \"2024-12-23 21:57:21\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of customer subscription objects\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customer-subscriptions\",\r\n    description: \"Create a new customer subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"customer_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n      {\r\n        name: \"subscription_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the subscription plan\",\r\n      },\r\n      {\r\n        name: \"start_date\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Start date of the subscription (ISO 8601 format)\",\r\n      },\r\n      {\r\n        name: \"end_date\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"End date of the subscription (ISO 8601 format)\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        customer_id: \"456\",\r\n        subscription_id: \"789\",\r\n        start_date: \"2024-01-01\",\r\n        end_date: \"2025-01-01\",\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Success Response\",\r\n        example: {\r\n          message: \"Customer subscription created successfully\",\r\n          success: true,\r\n          customer_subscription: {\r\n            id: \"123\",\r\n            customer_id: \"456\",\r\n            subscription_id: \"789\",\r\n            status: \"active\",\r\n            start_date: \"2024-01-01\",\r\n            end_date: \"2025-01-01\",\r\n            current_period_start: \"2024-01-01\",\r\n            current_period_end: \"2024-02-01\",\r\n            cancel_at_period_end: false,\r\n            created_at: \"2024-01-01T00:00:00Z\",\r\n            updated_at: \"2024-01-01T00:00:00Z\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"Error Response\",\r\n        example: {\r\n          message: \"Couldn't create customer subscription\",\r\n          success: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customer/[:id]/workflow\",\r\n    description: \"Start a workflow for a customer\",\r\n    parameters: [\r\n      {\r\n        name: \"customer_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Success Response\",\r\n        description: \"Empty body with status code 202\",\r\n        example: null,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport { apiEndpoints };\r\n","import {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nimport { apiEndpoints } from \"@/lib/api-endpoints\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst methodStyles = (method: string) =>\r\n  cn(method === \"POST\" ? \"bg-green-700\" : \"\");\r\n\r\nexport const APIDocumentation = () => {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Card className={cn(\"space-y-4\")}>\r\n        <CardHeader>\r\n          <CardTitle>Authentication</CardTitle>\r\n          <CardDescription>\r\n            All requests must be authenticated by passing the API token as a\r\n            request header. The API token is configured using{\" \"}\r\n            <a\r\n              className=\"text-primary underline\"\r\n              href=\"https://developers.cloudflare.com/workers/configuration/secrets/\"\r\n            >\r\n              secrets\r\n            </a>\r\n            .\r\n          </CardDescription>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Supported header styles</Label>\r\n\r\n            <div className=\"space-y-4\">\r\n              <Input value=\"Authorization: Bearer $apiToken\" readOnly />\r\n              <Input value=\"Authorization: Token $apiToken\" readOnly />\r\n              <Input value=\"x-api-token: $apiToken\" readOnly />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div>\r\n        {apiEndpoints.map((endpoint, index) => (\r\n          <Card key={index} className=\"mb-4\">\r\n            <CardHeader>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Badge\r\n                  className={methodStyles(endpoint.method)}\r\n                  variant={\r\n                    endpoint.method === \"GET\"\r\n                      ? \"default\"\r\n                      : endpoint.method === \"POST\"\r\n                        ? \"destructive\"\r\n                        : endpoint.method === \"PUT\"\r\n                          ? \"outline\"\r\n                          : \"secondary\"\r\n                  }\r\n                >\r\n                  {endpoint.method}\r\n                </Badge>\r\n                <code className=\"text-sm font-mono\">{endpoint.path}</code>\r\n              </div>\r\n              <CardDescription>{endpoint.description}</CardDescription>\r\n            </CardHeader>\r\n\r\n            <CardContent>\r\n              <Accordion type=\"single\" collapsible>\r\n                {endpoint.parameters && endpoint.parameters.length > 0 && (\r\n                  <AccordionItem value=\"parameters\">\r\n                    <AccordionTrigger>Parameters</AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <div className=\"space-y-2\">\r\n                        {endpoint.parameters.map((param, paramIndex) => (\r\n                          <div key={paramIndex} className=\"border-b pb-2\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <code className=\"text-sm font-mono\">\r\n                                {param.name}\r\n                              </code>\r\n                              <Badge variant=\"outline\">{param.type}</Badge>\r\n                              {param.required && (\r\n                                <Badge variant=\"destructive\">Required</Badge>\r\n                              )}\r\n                            </div>\r\n                            <p className=\"text-sm text-muted-foreground mt-1\">\r\n                              {param.description}\r\n                            </p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                )}\r\n\r\n                {endpoint.requestBody && (\r\n                  <AccordionItem value=\"request\">\r\n                    <AccordionTrigger>Request Body</AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <pre className=\"bg-muted p-4 rounded-lg overflow-auto\">\r\n                        {JSON.stringify(endpoint.requestBody.example, null, 2)}\r\n                      </pre>\r\n                      {endpoint.requestBody.description && (\r\n                        <p className=\"text-sm text-muted-foreground mt-2\">\r\n                          {endpoint.requestBody.description}\r\n                        </p>\r\n                      )}\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                )}\r\n\r\n                {endpoint.responses.map((response, responseIndex) => (\r\n                  <AccordionItem\r\n                    key={responseIndex}\r\n                    value={`response-${responseIndex}`}\r\n                  >\r\n                    <AccordionTrigger>\r\n                      {endpoint.responses.length === 1\r\n                        ? \"Response\"\r\n                        : response.name}\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <pre className=\"bg-muted p-4 rounded-lg overflow-auto\">\r\n                        {JSON.stringify(response.example, null, 2)}\r\n                      </pre>\r\n                      {response.description && (\r\n                        <p className=\"text-sm text-muted-foreground mt-2\">\r\n                          {response.description}\r\n                        </p>\r\n                      )}\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { APIDocumentation } from '@/components/admin/api-documentation';\r\n\r\ninterface DashboardTabsProps {\r\n  formTemplates: number;\r\n  subscriptions: number;\r\n  customers: number;\r\n  customerSubscriptions: number;\r\n  recentActivity: Array<{\r\n    action: string;\r\n    user: string;\r\n    time: string;\r\n    type: string;\r\n  }>;\r\n}\r\n\r\nexport const DashboardTabs: React.FC<DashboardTabsProps> = ({\r\n  formTemplates = 12,\r\n  subscriptions = 45,\r\n  customers = 38,\r\n  customerSubscriptions = 156,\r\n  recentActivity = [\r\n    {\r\n      action: \"New assessment created\",\r\n      user: \"Dr. Smith\",\r\n      time: \"2 minutes ago\",\r\n      type: \"assessment\"\r\n    },\r\n    {\r\n      action: \"Session completed\",\r\n      user: \"Jane Doe\",\r\n      time: \"15 minutes ago\",\r\n      type: \"session\"\r\n    },\r\n    {\r\n      action: \"Report generated\",\r\n      user: \"Dr. Johnson\",\r\n      time: \"1 hour ago\",\r\n      type: \"report\"\r\n    }\r\n  ]\r\n}) => {\r\n  return (\r\n    <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n      <TabsList className=\"grid w-full grid-cols-4 lg:w-fit lg:grid-cols-4\">\r\n        <TabsTrigger value=\"overview\" className=\"text-sm\">Overview</TabsTrigger>\r\n        <TabsTrigger value=\"analytics\" className=\"text-sm\">Analytics</TabsTrigger>\r\n        <TabsTrigger value=\"clinical\" className=\"text-sm\">Clinical</TabsTrigger>\r\n        <TabsTrigger value=\"api\" className=\"text-sm\">API</TabsTrigger>\r\n      </TabsList>\r\n\r\n      {/* Overview Tab */}\r\n      <TabsContent value=\"overview\" className=\"space-y-6\">\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n          {/* Quick Actions */}\r\n          <Card className=\"lg:col-span-2\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <svg className=\"h-5 w-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n                <span>Clinical Workflow Status</span>\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Current status of clinical operations and assessments\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid gap-4 md:grid-cols-2\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-slate-600\">Active Assessments</span>\r\n                    <span className=\"font-medium\">{formTemplates} forms</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-slate-200 rounded-full h-2\">\r\n                    <div className=\"bg-blue-600 h-2 rounded-full\" style={{ width: '75%' }}></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-slate-600\">Compliance Rate</span>\r\n                    <span className=\"font-medium\">98.5%</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-slate-200 rounded-full h-2\">\r\n                    <div className=\"bg-green-600 h-2 rounded-full\" style={{ width: '98.5%' }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Recent Activity */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Recent Activity</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              {recentActivity.map((activity, index) => (\r\n                <div key={index} className=\"flex items-start space-x-3 text-sm\">\r\n                  <div className={`rounded-full p-1 mt-0.5 ${\r\n                    activity.type === 'assessment' ? 'bg-blue-100' :\r\n                    activity.type === 'session' ? 'bg-green-100' :\r\n                    activity.type === 'report' ? 'bg-purple-100' : 'bg-orange-100'\r\n                  }`}>\r\n                    <div className={`w-2 h-2 rounded-full ${\r\n                      activity.type === 'assessment' ? 'bg-blue-600' :\r\n                      activity.type === 'session' ? 'bg-green-600' :\r\n                      activity.type === 'report' ? 'bg-purple-600' : 'bg-orange-600'\r\n                    }`}></div>\r\n                  </div>\r\n                  <div className=\"flex-1 space-y-1\">\r\n                    <p className=\"font-medium text-slate-900\">{activity.action}</p>\r\n                    <p className=\"text-slate-500\">{activity.user}</p>\r\n                    <p className=\"text-xs text-slate-400\">{activity.time}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </TabsContent>\r\n\r\n      {/* Analytics Tab */}\r\n      <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Platform Subscriptions</CardTitle>\r\n              <CardDescription>Clinical subscription analytics</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Total Subscriptions</span>\r\n                  <span className=\"font-bold\">{subscriptions}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Active Customers</span>\r\n                  <span className=\"font-bold\">{customers}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Customer Subscriptions</span>\r\n                  <span className=\"font-bold\">{customerSubscriptions}</span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>System Health</CardTitle>\r\n              <CardDescription>Platform performance metrics</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <Alert className=\"border-green-200 bg-green-50\">\r\n                  <AlertDescription className=\"text-green-800\">\r\n                    All systems operational\r\n                  </AlertDescription>\r\n                </Alert>\r\n                <div className=\"text-sm space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-slate-600\">API Response Time</span>\r\n                    <span className=\"text-green-600 font-medium\">145ms</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-slate-600\">Database Connection</span>\r\n                    <span className=\"text-green-600 font-medium\">Healthy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </TabsContent>\r\n\r\n      {/* Clinical Tab */}\r\n      <TabsContent value=\"clinical\" className=\"space-y-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <svg className=\"h-5 w-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n              </svg>\r\n              <span>Clinical Compliance Monitoring</span>\r\n            </CardTitle>\r\n            <CardDescription>\r\n              HIPAA, ASHA, and AOTA compliance tracking\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid gap-4 md:grid-cols-3\">\r\n              <div className=\"text-center p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                <div className=\"text-2xl font-bold text-green-700\">100%</div>\r\n                <div className=\"text-sm text-green-600\">HIPAA Compliance</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <div className=\"text-2xl font-bold text-blue-700\">100%</div>\r\n                <div className=\"text-sm text-blue-600\">ASHA Standards</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                <div className=\"text-2xl font-bold text-purple-700\">100%</div>\r\n                <div className=\"text-sm text-purple-600\">AOTA Guidelines</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      {/* API Tab */}\r\n      <TabsContent value=\"api\" className=\"space-y-6\">\r\n        <div>\r\n          <APIDocumentation />\r\n        </div>\r\n      </TabsContent>\r\n    </Tabs>\r\n  );\r\n};","---\nimport AdminLayout from '@/layouts/AdminLayout.astro';\nimport { DashboardTabs } from '@/components/admin/dashboard-tabs';\n\nconst title = 'Dashboard';\n---\n\n<AdminLayout title={title}>\n  <div slot=\"actions\">\n    <h1 class=\"text-3xl font-bold tracking-tight gradient-metallic-primary bg-clip-text text-transparent\">\n      Dashboard\n    </h1>\n  </div>\n  \n  <div class=\"space-y-4\">\n    <DashboardTabs client:load />\n  </div>\n</AdminLayout>"],"names":["AccordionPrimitive.Root","React.forwardRef","jsx","AccordionPrimitive.Item","AccordionPrimitive.Header","jsxs","AccordionPrimitive.Trigger","AccordionPrimitive.Content","$$createComponent","$$render","$$renderComponent","AdminLayout","$$result","$$maybeRenderHead"],"mappings":"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"}