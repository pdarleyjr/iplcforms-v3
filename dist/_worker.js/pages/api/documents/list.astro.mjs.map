{"version":3,"file":"list.astro.mjs","sources":["../../../../../src/pages/api/documents/list.ts"],"sourcesContent":["import type { APIRoute } from 'astro';\r\nimport type { AIEnv } from '../../../lib/ai';\r\n\r\nexport const GET: APIRoute = async ({ url, locals }) => {\r\n  const env = (locals as any).runtime.env as unknown as AIEnv;\r\n  \r\n  try {\r\n    const params = url.searchParams;\r\n    const limit = parseInt(params.get('limit') || '50', 10);\r\n    const cursor = params.get('cursor') || null;\r\n    const search = params.get('search') || null;\r\n    const includeStats = params.get('includeStats') === 'true';\r\n\r\n    // Validate limit\r\n    if (limit < 1 || limit > 100) {\r\n      return new Response(JSON.stringify({ \r\n        error: 'Limit must be between 1 and 100' \r\n      }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Use IPLC_AI service binding\r\n    const iplcAI = (env as any).IPLC_AI;\r\n    if (!iplcAI || typeof iplcAI.fetch !== 'function') {\r\n      return new Response(JSON.stringify({\r\n        error: 'AI service not available',\r\n        details: 'IPLC_AI service binding is not configured'\r\n      }), {\r\n        status: 503,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n\r\n    // Build query parameters\r\n    const queryParams = new URLSearchParams({\r\n      limit: limit.toString(),\r\n      ...(cursor && { cursor }),\r\n      ...(search && { search }),\r\n      ...(includeStats && { includeStats: 'true' })\r\n    });\r\n\r\n    // Call the iplc-ai worker's /documents/list endpoint\r\n    const listResponse = await iplcAI.fetch(`https://iplc-ai.worker/documents/list?${queryParams}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n\r\n    if (!listResponse.ok) {\r\n      const error = await listResponse.text();\r\n      throw new Error(error);\r\n    }\r\n\r\n    const result = await listResponse.json();\r\n\r\n    return new Response(JSON.stringify(result), {\r\n      headers: { \r\n        'Content-Type': 'application/json',\r\n        'Cache-Control': 'max-age=30' // Cache for 30 seconds\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('List documents error:', error);\r\n    return new Response(JSON.stringify({ \r\n      error: 'Failed to list documents',\r\n      details: error instanceof Error ? error.message : 'Unknown error'\r\n    }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n};\r\n\r\n// Example request:\r\n// GET /api/documents/list?limit=10&cursor=abc123&search=report&includeStats=true\r\n\r\n// Example response:\r\n/*\r\n{\r\n  \"documents\": [\r\n    {\r\n      \"id\": \"doc-123\",\r\n      \"name\": \"Annual Report 2024.pdf\",\r\n      \"type\": \"application/pdf\",\r\n      \"size\": 1024000,\r\n      \"uploadedAt\": \"2024-01-01T00:00:00Z\",\r\n      \"chunksCount\": 25,\r\n      \"vectorIds\": [\"vec-1\", \"vec-2\", ...],\r\n      \"metadata\": {\r\n        \"contentHash\": \"sha256:...\",\r\n        \"pageCount\": 10\r\n      }\r\n    },\r\n    ...\r\n  ],\r\n  \"cursor\": \"next-page-cursor\",\r\n  \"hasMore\": true,\r\n  \"stats\": {\r\n    \"documentCount\": 150,\r\n    \"totalVectors\": 3750,\r\n    \"estimatedDimensions\": 1440000,\r\n    \"kvUsage\": {\r\n      \"documentsStored\": 150,\r\n      \"hashesStored\": 150\r\n    }\r\n  }\r\n}\r\n*/"],"names":[],"mappings":"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"}