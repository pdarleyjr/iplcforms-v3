{"version":3,"file":"event.astro.mjs","sources":["../../../../../../src/pages/api/plausible/api/event.ts"],"sourcesContent":["import type { APIContext } from 'astro';\r\n\r\n/**\r\n * Proxy endpoint for Plausible Analytics event tracking\r\n * Routes: POST /api/plausible/api/event\r\n * \r\n * This endpoint proxies event tracking requests to Plausible's API,\r\n * allowing us to track events from our own domain.\r\n */\r\nexport async function POST(context: APIContext): Promise<Response> {\r\n  const { request, locals } = context;\r\n  const env = locals.runtime?.env;\r\n\r\n  // Check if analytics is enabled - use PLAUSIBLE_DOMAIN as the flag\r\n  const plausibleDomain = env?.PLAUSIBLE_DOMAIN;\r\n  \r\n  if (!plausibleDomain) {\r\n    // Return success even if disabled to avoid client errors\r\n    return new Response(null, { \r\n      status: 204,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n      }\r\n    });\r\n  }\r\n\r\n  try {\r\n    // Get the request body\r\n    const body = await request.text();\r\n    \r\n    // Parse the body to modify the domain if needed\r\n    let eventData;\r\n    try {\r\n      eventData = JSON.parse(body);\r\n      // Ensure the domain matches our configured domain\r\n      eventData.domain = plausibleDomain;\r\n    } catch {\r\n      // If parsing fails, forward as-is\r\n      eventData = body;\r\n    }\r\n\r\n    // Forward the request to Plausible's API\r\n    const plausibleResponse = await fetch('https://plausible.io/api/event', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'User-Agent': request.headers.get('User-Agent') || '',\r\n        'X-Forwarded-For': request.headers.get('CF-Connecting-IP') || \r\n                          request.headers.get('X-Forwarded-For') || \r\n                          '',\r\n      },\r\n      body: typeof eventData === 'string' ? eventData : JSON.stringify(eventData),\r\n    });\r\n\r\n    // Return Plausible's response\r\n    return new Response(null, {\r\n      status: plausibleResponse.ok ? 204 : 502,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error('Error proxying Plausible event:', error);\r\n    \r\n    // Return success to avoid breaking the client\r\n    return new Response(null, { \r\n      status: 204,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n        'Access-Control-Allow-Headers': 'Content-Type',\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Handle OPTIONS requests for CORS preflight\r\n */\r\nexport async function OPTIONS(context: APIContext): Promise<Response> {\r\n  return new Response(null, {\r\n    status: 204,\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Access-Control-Max-Age': '86400', // 24 hours\r\n    }\r\n  });\r\n}\r\n\r\n// Support all HTTP methods for compatibility\r\nexport const ALL = POST;"],"names":[],"mappings":";;;AASA,eAAsB,KAAK,OAAA,EAAwC;AACjE,EAAA,MAAM,EAAE,OAAA,EAAS,MAAA,EAAO,GAAI,OAAA;AAC5B,EAAA,MAAM,GAAA,GAAM,OAAO,OAAA,EAAS,GAAA;AAG5B,EAAA,MAAM,kBAAkB,GAAA,EAAK,gBAAA;AAE7B,EAAA,IAAI,CAAC,eAAA,EAAiB;AAEpB,IAAA,OAAO,IAAI,SAAS,IAAA,EAAM;AAAA,MACxB,MAAA,EAAQ,GAAA;AAAA,MACR,OAAA,EAAS;AAAA,QACP,6BAAA,EAA+B,GAAA;AAAA,QAC/B,8BAAA,EAAgC,eAAA;AAAA,QAChC,8BAAA,EAAgC;AAAA;AAClC,KACD,CAAA;AAAA,EACH;AAEA,EAAA,IAAI;AAEF,IAAA,MAAM,IAAA,GAAO,MAAM,OAAA,CAAQ,IAAA,EAAK;AAGhC,IAAA,IAAI,SAAA;AACJ,IAAA,IAAI;AACF,MAAA,SAAA,GAAY,IAAA,CAAK,MAAM,IAAI,CAAA;AAE3B,MAAA,SAAA,CAAU,MAAA,GAAS,eAAA;AAAA,IACrB,CAAA,CAAA,MAAQ;AAEN,MAAA,SAAA,GAAY,IAAA;AAAA,IACd;AAGA,IAAA,MAAM,iBAAA,GAAoB,MAAM,KAAA,CAAM,gCAAA,EAAkC;AAAA,MACtE,MAAA,EAAQ,MAAA;AAAA,MACR,OAAA,EAAS;AAAA,QACP,cAAA,EAAgB,kBAAA;AAAA,QAChB,YAAA,EAAc,OAAA,CAAQ,OAAA,CAAQ,GAAA,CAAI,YAAY,CAAA,IAAK,EAAA;AAAA,QACnD,iBAAA,EAAmB,OAAA,CAAQ,OAAA,CAAQ,GAAA,CAAI,kBAAkB,KACvC,OAAA,CAAQ,OAAA,CAAQ,GAAA,CAAI,iBAAiB,CAAA,IACrC;AAAA,OACpB;AAAA,MACA,MAAM,OAAO,SAAA,KAAc,WAAW,SAAA,GAAY,IAAA,CAAK,UAAU,SAAS;AAAA,KAC3E,CAAA;AAGD,IAAA,OAAO,IAAI,SAAS,IAAA,EAAM;AAAA,MACxB,MAAA,EAAQ,iBAAA,CAAkB,EAAA,GAAK,GAAA,GAAM,GAAA;AAAA,MACrC,OAAA,EAAS;AAAA,QACP,6BAAA,EAA+B,GAAA;AAAA,QAC/B,8BAAA,EAAgC,eAAA;AAAA,QAChC,8BAAA,EAAgC;AAAA;AAClC,KACD,CAAA;AAAA,EACH,SAAS,KAAA,EAAO;AACd,IAAA,OAAA,CAAQ,KAAA,CAAM,mCAAmC,KAAK,CAAA;AAGtD,IAAA,OAAO,IAAI,SAAS,IAAA,EAAM;AAAA,MACxB,MAAA,EAAQ,GAAA;AAAA,MACR,OAAA,EAAS;AAAA,QACP,6BAAA,EAA+B,GAAA;AAAA,QAC/B,8BAAA,EAAgC,eAAA;AAAA,QAChC,8BAAA,EAAgC;AAAA;AAClC,KACD,CAAA;AAAA,EACH;AACF;AAKA,eAAsB,QAAQ,OAAA,EAAwC;AACpE,EAAA,OAAO,IAAI,SAAS,IAAA,EAAM;AAAA,IACxB,MAAA,EAAQ,GAAA;AAAA,IACR,OAAA,EAAS;AAAA,MACP,6BAAA,EAA+B,GAAA;AAAA,MAC/B,8BAAA,EAAgC,eAAA;AAAA,MAChC,8BAAA,EAAgC,cAAA;AAAA,MAChC,wBAAA,EAA0B;AAAA;AAAA;AAC5B,GACD,CAAA;AACH;AAGO,MAAM,GAAA,GAAM,IAAA;;;;;;;;;;;;;"}