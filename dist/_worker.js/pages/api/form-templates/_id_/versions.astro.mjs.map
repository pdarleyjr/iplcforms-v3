{"version":3,"file":"versions.astro.mjs","sources":["../../../../../../src/pages/api/form-templates/[id]/versions.ts"],"sourcesContent":["import { FormTemplateService } from \"@/lib/services/form_template\";\r\nimport { authenticate, authorize } from \"@/lib/middleware/rbac-middleware\";\r\nimport { withPerformanceMonitoring } from '@/lib/utils/performance-wrapper';\r\nimport type { APIContext } from 'astro';\r\n\r\nconst getHandler = async (context: APIContext): Promise<Response> => {\r\n  // Apply authentication middleware\r\n  const authResult = await authenticate(context);\r\n  if (authResult instanceof Response) {\r\n    return authResult;\r\n  }\r\n\r\n  // Apply authorization middleware - READ permission on form_templates\r\n  const authzMiddleware = authorize('read', 'form_templates');\r\n  const authzResult = await authzMiddleware(context);\r\n  if (authzResult instanceof Response) {\r\n    return authzResult;\r\n  }\r\n\r\n  const { id } = context.params;\r\n  \r\n  if (!id) {\r\n    return Response.json(\r\n      { message: \"Template ID is required\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const templateId = Number(id);\r\n  if (isNaN(templateId)) {\r\n    return Response.json(\r\n      { message: \"Invalid template ID format\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const { DB } = (context.locals as any).runtime.env;\r\n\r\n  const formTemplateService = new FormTemplateService(DB);\r\n\r\n  try {\r\n    const versions = await formTemplateService.getVersions(templateId);\r\n    return Response.json({ versions });\r\n  } catch (error) {\r\n    return Response.json(\r\n      {\r\n        message: error instanceof Error ? error.message : \"Failed to get template versions\",\r\n      },\r\n      { status: 500 },\r\n    );\r\n  }\r\n};\r\n\r\nconst postHandler = async (context: APIContext): Promise<Response> => {\r\n  // Apply authentication middleware\r\n  const authResult = await authenticate(context);\r\n  if (authResult instanceof Response) {\r\n    return authResult;\r\n  }\r\n\r\n  // Apply authorization middleware - CREATE permission on form_templates\r\n  const authzMiddleware = authorize('create', 'form_templates');\r\n  const authzResult = await authzMiddleware(context);\r\n  if (authzResult instanceof Response) {\r\n    return authzResult;\r\n  }\r\n\r\n  const { id } = context.params;\r\n  \r\n  if (!id) {\r\n    return Response.json(\r\n      { message: \"Template ID is required\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  const { DB } = (context.locals as any).runtime.env;\r\n\r\n  const formTemplateService = new FormTemplateService(DB);\r\n\r\n  try {\r\n    const body = await context.request.json() as { versionData?: any };\r\n    const { versionData } = body;\r\n\r\n    if (!versionData) {\r\n      return Response.json(\r\n        { message: \"Version data is required\" },\r\n        { status: 400 },\r\n      );\r\n    }\r\n\r\n    // Create a new version by creating a new template with parent_template_id\r\n    const newVersion = await formTemplateService.create({\r\n      ...versionData,\r\n      parent_template_id: Number(id),\r\n      created_by: versionData.created_by || 1 // Default to system user if not provided\r\n    });\r\n    \r\n    return Response.json({\r\n      message: \"Template version created successfully\",\r\n      version: newVersion,\r\n      success: true,\r\n    });\r\n  } catch (error) {\r\n    return Response.json(\r\n      {\r\n        message: error instanceof Error ? error.message : \"Failed to create template version\",\r\n        success: false,\r\n      },\r\n      { status: 500 },\r\n    );\r\n  }\r\n};\r\n\r\nexport const GET = withPerformanceMonitoring(getHandler, 'form-template-versions:list');\r\nexport const POST = withPerformanceMonitoring(postHandler, 'form-template-versions:create');"],"names":[],"mappings":"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"}