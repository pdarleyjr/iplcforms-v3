{"version":3,"file":"_id_.astro.mjs","sources":["../../../../../src/pages/api/customers/[id].ts"],"sourcesContent":["import { CustomerService } from \"@/lib/services/customer\";\r\nimport { authenticate, authorize } from \"@/lib/middleware/rbac-middleware\";\r\nimport { PERMISSIONS } from \"@/lib/utils/rbac\";\r\nimport { withPerformanceMonitoring } from \"@/lib/utils/performance-wrapper\";\r\nimport type { APIContext, APIRoute } from \"astro\";\r\n\r\nconst getHandler: APIRoute = async (context: APIContext) => {\r\n  const { id } = context.params;\r\n  const { DB } = (context.locals as any).runtime.env;\r\n\r\n  // Authenticate request\r\n  const authResult = await authenticate(context);\r\n  if (authResult instanceof Response) return authResult;\r\n\r\n  // Authorize request\r\n  const authzMiddleware = authorize(PERMISSIONS.READ, 'customers');\r\n  const authzResult = await authzMiddleware(authResult);\r\n  if (authzResult instanceof Response) return authzResult;\r\n\r\n  if (!id) {\r\n    return Response.json({ message: \"Customer ID is required\" }, { status: 400 });\r\n  }\r\n\r\n  const customerId = Number(id);\r\n  if (isNaN(customerId)) {\r\n    return Response.json({ message: \"Invalid customer ID\" }, { status: 400 });\r\n  }\r\n\r\n  const customerService = new CustomerService(DB);\r\n  const customer = await customerService.getById(customerId);\r\n\r\n  if (!customer) {\r\n    return Response.json({ message: \"Customer not found\" }, { status: 404 });\r\n  }\r\n\r\n  return Response.json({ customer: customer });\r\n}\r\n\r\nexport const GET = withPerformanceMonitoring(getHandler, 'customers:get');\r\n"],"names":[],"mappings":";;;;;;;AAMA,MAAM,UAAA,GAAuB,OAAO,OAAA,KAAwB;AAC1D,EAAA,MAAM,EAAE,EAAA,EAAG,GAAI,OAAA,CAAQ,MAAA;AACvB,EAAA,MAAM,EAAE,EAAA,EAAG,GAAK,OAAA,CAAQ,OAAe,OAAA,CAAQ,GAAA;AAG/C,EAAA,MAAM,UAAA,GAAa,MAAM,YAAA,CAAa,OAAO,CAAA;AAC7C,EAAA,IAAI,UAAA,YAAsB,UAAU,OAAO,UAAA;AAG3C,EAAA,MAAM,eAAA,GAAkB,SAAA,CAAU,WAAA,CAAY,IAAA,EAAM,WAAW,CAAA;AAC/D,EAAA,MAAM,WAAA,GAAc,MAAM,eAAA,CAAgB,UAAU,CAAA;AACpD,EAAA,IAAI,WAAA,YAAuB,UAAU,OAAO,WAAA;AAE5C,EAAA,IAAI,CAAC,EAAA,EAAI;AACP,IAAA,OAAO,QAAA,CAAS,KAAK,EAAE,OAAA,EAAS,2BAA0B,EAAG,EAAE,MAAA,EAAQ,GAAA,EAAK,CAAA;AAAA,EAC9E;AAEA,EAAA,MAAM,UAAA,GAAa,OAAO,EAAE,CAAA;AAC5B,EAAA,IAAI,KAAA,CAAM,UAAU,CAAA,EAAG;AACrB,IAAA,OAAO,QAAA,CAAS,KAAK,EAAE,OAAA,EAAS,uBAAsB,EAAG,EAAE,MAAA,EAAQ,GAAA,EAAK,CAAA;AAAA,EAC1E;AAEA,EAAA,MAAM,eAAA,GAAkB,IAAI,eAAA,CAAgB,EAAE,CAAA;AAC9C,EAAA,MAAM,QAAA,GAAW,MAAM,eAAA,CAAgB,OAAA,CAAQ,UAAU,CAAA;AAEzD,EAAA,IAAI,CAAC,QAAA,EAAU;AACb,IAAA,OAAO,QAAA,CAAS,KAAK,EAAE,OAAA,EAAS,sBAAqB,EAAG,EAAE,MAAA,EAAQ,GAAA,EAAK,CAAA;AAAA,EACzE;AAEA,EAAA,OAAO,QAAA,CAAS,IAAA,CAAK,EAAE,QAAA,EAAoB,CAAA;AAC7C,CAAA;AAEO,MAAM,GAAA,GAAM,yBAAA,CAA0B,UAAA,EAAY,eAAe,CAAA;;;;;;;;;;;"}