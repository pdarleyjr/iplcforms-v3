{"version":3,"file":"_id_.astro.mjs","sources":["../../../../src/pages/pdf-viewer/[id].astro"],"sourcesContent":["---\r\nimport Layout from '../../layouts/Layout.astro';\r\nimport PDFAnnotator from '../../components/pdf/PDFAnnotator.astro';\r\n\r\nconst { id } = Astro.params;\r\n\r\n// For demo purposes, we'll use the sample PDF\r\n// In production, you'd fetch the PDF URL based on the ID\r\nconst pdfUrl = '/sample.pdf';\r\nconst pdfTitle = `PDF Document ${id}`;\r\n\r\n// You could fetch initial annotations from the database here\r\nlet initialAnnotations = [];\r\ntry {\r\n  const response = await fetch(`${Astro.url.origin}/api/pdf-annotations/${id}`);\r\n  if (response.ok) {\r\n    const data = await response.json();\r\n    initialAnnotations = data.annotations || [];\r\n  }\r\n} catch (error) {\r\n  console.error('Failed to fetch initial annotations:', error);\r\n}\r\n---\r\n\r\n<Layout title={pdfTitle}>\r\n  <div class=\"container mx-auto py-8\">\r\n    <div class=\"mb-6\">\r\n      <h1 class=\"text-3xl font-bold text-gray-900\">{pdfTitle}</h1>\r\n      <p class=\"text-gray-600 mt-2\">Document ID: {id}</p>\r\n    </div>\r\n    \r\n    <div class=\"pdf-viewer-container\">\r\n      <PDFAnnotator \r\n        pdfUrl={pdfUrl}\r\n        pdfId={id}\r\n        initialAnnotations={initialAnnotations}\r\n      />\r\n    </div>\r\n  </div>\r\n</Layout>\r\n\r\n<style>\r\n  .pdf-viewer-container {\r\n    min-height: 800px;\r\n  }\r\n</style>\r\n\r\n<script>\r\n  // Listen for annotation changes and save them\r\n  document.addEventListener('pdf-annotations-change', async (event: any) => {\r\n    const { annotations } = event.detail;\r\n    console.log('Annotations changed:', annotations);\r\n  });\r\n\r\n  document.addEventListener('pdf-annotations-save', async (event: any) => {\r\n    const { annotations } = event.detail;\r\n    const pdfId = window.location.pathname.split('/').pop();\r\n    \r\n    try {\r\n      const response = await fetch(`/api/pdf-annotations/${pdfId}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ annotations }),\r\n      });\r\n      \r\n      if (response.ok) {\r\n        console.log('Annotations saved successfully');\r\n      } else {\r\n        console.error('Failed to save annotations');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving annotations:', error);\r\n    }\r\n  });\r\n</script>"],"names":["$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","Layout","$$result","$$maybeRenderHead","PDFAnnotator","$$renderScript"],"mappings":";;;;;;;AAAA,MAAA,UAAAA,WAAA,EAAA;AAAA,MAAA,IAAA,GAAAC,eAAA,CAAA,OAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,IAAA;AAIA,EAAA,MAAM,EAAE,EAAA,EAAG,GAAIA,MAAAA,CAAM,MAAA;AAIrB,EAAA,MAAM,MAAA,GAAS,aAAA;AACf,EAAA,MAAM,QAAA,GAAW,gBAAgB,EAAE,CAAA,CAAA;AAGnC,EAAA,IAAI,qBAAqB,EAAC;AAC1B,EAAA,IAAI;AACF,IAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,CAAA,EAAGA,OAAM,GAAA,CAAI,MAAM,CAAA,qBAAA,EAAwB,EAAE,CAAA,CAAE,CAAA;AAC5E,IAAA,IAAI,SAAS,EAAA,EAAI;AACf,MAAA,MAAM,IAAA,GAAO,MAAM,QAAA,CAAS,IAAA,EAAK;AACjC,MAAA,kBAAA,GAAqB,IAAA,CAAK,eAAe,EAAC;AAC5C,IAAA;AACF,EAAA,CAAA,CAAA,OAAS,KAAA,EAAO;AACd,IAAA,OAAA,CAAQ,KAAA,CAAM,wCAAwC,KAAK,CAAA;AAC7D,EAAA;AArBA,EAAA,OAAAC,cAAA,CAAA,EAAAC,gBAAA,QAAA,EAAA,QAAA,EAAAC,UAAA,EAwBQ,OAAA,EAAO,UAxBf,yBAAA,EAAA,IAAA,IAAA,EAAA,SAAA,EAAA,OAAAC,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAI,gBAAA,CAAA,CAAA,6KAAA,EA2BoD,QAAQ,CAAA,yEAAA,EACV,EAAE,0EA5BpDH,eAAA,CAAAE,SAAAA,EAAA,gBAAAE,cAAA,EAAA,EAiCQ,UAAQ,MAAA,EACR,OAAA,EAAO,IACP,oBAAA,EAAoB,kBAAA,EAnC5B,2BAAA,IAAA,EAgCO,CAAA,CAAA,eAAA,CAAA,EAOL,CAAA,CAAA,EAAA,EAvCFC,YAAA,CAAA,QAAA,EAAA,8GAAA,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,8EAAA,MAAA,CAAA;;;;;;;;;;;;;;;;"}