{"version":3,"file":"users.astro.mjs","sources":["../../../../src/components/ui/select.tsx","../../../../src/components/admin/RoleManager.tsx","../../../../src/pages/admin/users.astro"],"sourcesContent":["import * as React from \"react\";\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\r\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Select = SelectPrimitive.Root;\r\n\r\nconst SelectGroup = SelectPrimitive.Group;\r\n\r\nconst SelectValue = SelectPrimitive.Value;\r\n\r\nconst SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between gap-2 rounded-md border border-[hsl(var(--iplc-neutral-200))] bg-background px-3 py-2 text-sm shadow-[var(--iplc-shadow-sm)] transition-all duration-200\",\r\n      \"hover:border-[hsl(var(--iplc-primary))] hover:shadow-[var(--iplc-shadow-md)]\",\r\n      \"focus:outline-none focus:ring-2 focus:ring-[hsl(var(--iplc-accent-sky))] focus:ring-offset-2\",\r\n      \"disabled:cursor-not-allowed disabled:opacity-50\",\r\n      \"placeholder:text-muted-foreground [&>span]:line-clamp-1\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <ChevronDown className=\"h-4 w-4 opacity-50 transition-transform duration-200 data-[state=open]:rotate-180\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n));\r\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\r\n\r\nconst SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUp className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollUpButton>\r\n));\r\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\r\n\r\nconst SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDown className=\"h-4 w-4\" />\r\n  </SelectPrimitive.ScrollDownButton>\r\n));\r\nSelectScrollDownButton.displayName =\r\n  SelectPrimitive.ScrollDownButton.displayName;\r\n\r\nconst SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-[hsl(var(--iplc-neutral-200))] bg-popover text-popover-foreground shadow-[var(--iplc-shadow-lg)]\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className,\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n));\r\nSelectContent.displayName = SelectPrimitive.Content.displayName;\r\n\r\nconst SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n));\r\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\r\n\r\nconst SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none transition-colors duration-150\",\r\n      \"focus:bg-[hsl(var(--iplc-accent-sky)_/_0.1)] focus:text-[hsl(var(--iplc-primary))]\",\r\n      \"data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4 text-[hsl(var(--iplc-primary))]\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n));\r\nSelectItem.displayName = SelectPrimitive.Item.displayName;\r\n\r\nconst SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n));\r\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\r\n\r\nexport {\r\n  Select,\r\n  SelectGroup,\r\n  SelectValue,\r\n  SelectTrigger,\r\n  SelectContent,\r\n  SelectLabel,\r\n  SelectItem,\r\n  SelectSeparator,\r\n  SelectScrollUpButton,\r\n  SelectScrollDownButton,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Button } from '../ui/button';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../ui/select';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { Input } from '../ui/input';\r\nimport { Badge } from '../ui/badge';\r\nimport { Alert, AlertDescription } from '../ui/alert';\r\nimport { Loader2, Shield, UserCheck, AlertCircle } from 'lucide-react';\r\nimport { ROLES } from '../../lib/utils/rbac';\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  name: string;\r\n  role: string;\r\n  license_number?: string;\r\n  organization?: string;\r\n  status: string;\r\n  last_login_at?: string;\r\n}\r\n\r\nexport function RoleManager() {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedUser, setSelectedUser] = useState<string | null>(null);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const fetchUsers = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch('/api/admin/users', {\r\n        headers: {\r\n          'X-Customer-ID': localStorage.getItem('customerId') || ''\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch users');\r\n      }\r\n\r\n      const data = await response.json() as { users: User[] };\r\n      setUsers(data.users);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const updateUserRole = async (userId: string, newRole: string) => {\r\n    try {\r\n      setUpdating(true);\r\n      setError(null);\r\n\r\n      const response = await fetch(`/api/admin/users/${userId}/role`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Customer-ID': localStorage.getItem('customerId') || ''\r\n        },\r\n        body: JSON.stringify({ role: newRole })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to update user role');\r\n      }\r\n\r\n      // Update local state\r\n      setUsers(users.map(user => \r\n        user.id === userId ? { ...user, role: newRole } : user\r\n      ));\r\n      \r\n      setSelectedUser(null);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setUpdating(false);\r\n    }\r\n  };\r\n\r\n  const filteredUsers = users.filter(user => {\r\n    const searchLower = searchTerm.toLowerCase();\r\n    return (\r\n      user.email.toLowerCase().includes(searchLower) ||\r\n      user.name.toLowerCase().includes(searchLower) ||\r\n      user.role.toLowerCase().includes(searchLower) ||\r\n      (user.organization && user.organization.toLowerCase().includes(searchLower))\r\n    );\r\n  });\r\n\r\n  const getRoleBadgeColor = (role: string) => {\r\n    switch (role) {\r\n      case 'admin':\r\n        return 'destructive';\r\n      case 'clinician':\r\n        return 'default';\r\n      case 'researcher':\r\n        return 'secondary';\r\n      case 'patient':\r\n        return 'outline';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusBadgeColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'secondary';\r\n      case 'suspended':\r\n        return 'destructive';\r\n      case 'pending':\r\n        return 'outline';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Shield className=\"h-5 w-5\" />\r\n          Role Management\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Manage user roles and permissions across the system\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {error && (\r\n          <Alert variant=\"destructive\" className=\"mb-4\">\r\n            <AlertCircle className=\"h-4 w-4\" />\r\n            <AlertDescription>{error}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        <div className=\"mb-4\">\r\n          <Input\r\n            placeholder=\"Search users by email, name, role, or organization...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"max-w-md\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"border rounded-lg\">\r\n          <Table>\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead>User</TableHead>\r\n                <TableHead>Role</TableHead>\r\n                <TableHead>Organization</TableHead>\r\n                <TableHead>Status</TableHead>\r\n                <TableHead>Last Login</TableHead>\r\n                <TableHead>Actions</TableHead>\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {filteredUsers.length === 0 ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} className=\"text-center text-muted-foreground\">\r\n                    No users found\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                filteredUsers.map((user) => (\r\n                  <TableRow key={user.id}>\r\n                    <TableCell>\r\n                      <div>\r\n                        <div className=\"font-medium\">{user.name}</div>\r\n                        <div className=\"text-sm text-muted-foreground\">{user.email}</div>\r\n                        {user.license_number && (\r\n                          <div className=\"text-xs text-muted-foreground\">\r\n                            License: {user.license_number}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <Badge variant={getRoleBadgeColor(user.role)}>\r\n                        {user.role}\r\n                      </Badge>\r\n                    </TableCell>\r\n                    <TableCell>{user.organization || '-'}</TableCell>\r\n                    <TableCell>\r\n                      <Badge variant={getStatusBadgeColor(user.status)}>\r\n                        {user.status}\r\n                      </Badge>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {user.last_login_at\r\n                        ? new Date(user.last_login_at).toLocaleString()\r\n                        : 'Never'\r\n                      }\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {selectedUser === user.id ? (\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <Select\r\n                            defaultValue={user.role}\r\n                            onValueChange={(value) => updateUserRole(user.id, value)}\r\n                            disabled={updating}\r\n                          >\r\n                            <SelectTrigger className=\"w-32\">\r\n                              <SelectValue />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              {Object.keys(ROLES).map((role) => (\r\n                                <SelectItem key={role} value={role}>\r\n                                  {role}\r\n                                </SelectItem>\r\n                              ))}\r\n                            </SelectContent>\r\n                          </Select>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => setSelectedUser(null)}\r\n                            disabled={updating}\r\n                          >\r\n                            Cancel\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <Button\r\n                          variant=\"ghost\"\r\n                          size=\"sm\"\r\n                          onClick={() => setSelectedUser(user.id)}\r\n                          className=\"flex items-center gap-1\"\r\n                        >\r\n                          <UserCheck className=\"h-4 w-4\" />\r\n                          Change Role\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","---\r\nimport Layout from '../../layouts/Layout.astro';\r\nimport { RoleManager } from '../../components/admin/RoleManager';\r\n\r\n// For SSR: Check authentication and authorization\r\nconst customerId = Astro.cookies.get('customerId');\r\nconst customerRole = Astro.cookies.get('customerRole');\r\n\r\nif (!customerId || customerRole?.value !== 'admin') {\r\n  return Astro.redirect('/login');\r\n}\r\n---\r\n\r\n<Layout title=\"User Management - Admin\">\r\n  <div class=\"container mx-auto py-8\">\r\n    <div class=\"mb-8\">\r\n      <h1 class=\"text-3xl font-bold\">User Management</h1>\r\n      <p class=\"text-muted-foreground mt-2\">\r\n        Manage user roles and permissions\r\n      </p>\r\n    </div>\r\n\r\n    <RoleManager client:load />\r\n  </div>\r\n</Layout>"],"names":["SelectPrimitive.Root","SelectPrimitive.Value","React.forwardRef","jsxs","SelectPrimitive.Trigger","jsx","SelectPrimitive.Icon","SelectPrimitive.ScrollUpButton","SelectPrimitive.ScrollDownButton","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectPrimitive.Label","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectPrimitive.Separator","useState","useEffect","Loader2","AlertCircle","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","Layout","$$result","$$maybeRenderHead"],"mappings":";;;;;;;;;;;;;AAMA,MAAM,SAASA,KAAgB;AAI/B,MAAM,cAAcC,KAAgB;AAEpC,MAAM,aAAA,GAAgBC,uBAAM,CAG1B,CAAC,EAAE,WAAW,QAAA,EAAU,GAAG,KAAA,EAAM,EAAG,GAAA,qBACpCC,sBAAA;AAAA,EAACC,OAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA;AAAA,MACT,uMAAA;AAAA,MACA,8EAAA;AAAA,MACA,8FAAA;AAAA,MACA,iDAAA;AAAA,MACA,yDAAA;AAAA,MACA;AAAA,KACF;AAAA,IACC,GAAG,KAAA;AAAA,IAEH,QAAA,EAAA;AAAA,MAAA,QAAA;AAAA,sBACDC,qBAAA,CAACC,IAAgB,EAAhB,EAAqB,OAAA,EAAO,MAC3B,QAAA,kBAAAD,qBAAA,CAAC,WAAA,EAAA,EAAY,SAAA,EAAU,mFAAA,EAAoF,CAAA,EAC7G;AAAA;AAAA;AACF,CACD,CAAA;AACD,aAAA,CAAc,WAAA,GAAcD,OAAgB,CAAQ,WAAA;AAEpD,MAAM,oBAAA,GAAuBF,uBAAM,CAGjC,CAAC,EAAE,SAAA,EAAW,GAAG,KAAA,EAAM,EAAG,GAAA,qBAC1BG,qBAAA;AAAA,EAACE,cAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA;AAAA,MACT,sDAAA;AAAA,MACA;AAAA,KACF;AAAA,IACC,GAAG,KAAA;AAAA,IAEJ,QAAA,kBAAAF,qBAAA,CAAC,SAAA,EAAA,EAAU,SAAA,EAAU,SAAA,EAAU;AAAA;AACjC,CACD,CAAA;AACD,oBAAA,CAAqB,WAAA,GAAcE,cAAgB,CAAe,WAAA;AAElE,MAAM,sBAAA,GAAyBL,uBAAM,CAGnC,CAAC,EAAE,SAAA,EAAW,GAAG,KAAA,EAAM,EAAG,GAAA,qBAC1BG,qBAAA;AAAA,EAACG,gBAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA;AAAA,MACT,sDAAA;AAAA,MACA;AAAA,KACF;AAAA,IACC,GAAG,KAAA;AAAA,IAEJ,QAAA,kBAAAH,qBAAA,CAAC,WAAA,EAAA,EAAY,SAAA,EAAU,SAAA,EAAU;AAAA;AACnC,CACD,CAAA;AACD,sBAAA,CAAuB,WAAA,GACrBG,gBAAgB,CAAiB,WAAA;AAEnC,MAAM,gBAAgBN,uBAAM,CAG1B,CAAC,EAAE,WAAW,QAAA,EAAU,QAAA,GAAW,QAAA,EAAU,GAAG,OAAM,EAAG,GAAA,qBACzDG,qBAAA,CAACI,QAAA,EACC,QAAA,kBAAAN,sBAAA;AAAA,EAACO,QAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA;AAAA,MACT,+KAAA;AAAA,MACA,kVAAA;AAAA,MACA,aAAa,QAAA,IACX,iIAAA;AAAA,MACF;AAAA,KACF;AAAA,IACA,QAAA;AAAA,IACC,GAAG,KAAA;AAAA,IAEJ,QAAA,EAAA;AAAA,sBAAAL,qBAAA,CAAC,oBAAA,EAAA,EAAqB,CAAA;AAAA,sBACtBA,qBAAA;AAAA,QAACM,QAAgB;AAAA,QAAhB;AAAA,UACC,SAAA,EAAW,EAAA;AAAA,YACT,KAAA;AAAA,YACA,aAAa,QAAA,IACX;AAAA,WACJ;AAAA,UAEC;AAAA;AAAA,OACH;AAAA,4CACC,sBAAA,EAAA,EAAuB;AAAA;AAAA;AAC1B,CAAA,EACF,CACD,CAAA;AACD,aAAA,CAAc,WAAA,GAAcD,QAAgB,CAAQ,WAAA;AAEpD,MAAM,WAAA,GAAcR,uBAAM,CAGxB,CAAC,EAAE,SAAA,EAAW,GAAG,KAAA,EAAM,EAAG,GAAA,qBAC1BG,qBAAA;AAAA,EAACO,KAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA,CAAG,mCAAA,EAAqC,SAAS,CAAA;AAAA,IAC3D,GAAG;AAAA;AACN,CACD,CAAA;AACD,WAAA,CAAY,WAAA,GAAcA,KAAgB,CAAM,WAAA;AAEhD,MAAM,UAAA,GAAaV,uBAAM,CAGvB,CAAC,EAAE,WAAW,QAAA,EAAU,GAAG,KAAA,EAAM,EAAG,GAAA,qBACpCC,sBAAA;AAAA,EAACU,IAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA;AAAA,MACT,8IAAA;AAAA,MACA,oFAAA;AAAA,MACA,gEAAA;AAAA,MACA;AAAA,KACF;AAAA,IACC,GAAG,KAAA;AAAA,IAEJ,QAAA,EAAA;AAAA,sBAAAR,qBAAA,CAAC,MAAA,EAAA,EAAK,SAAA,EAAU,+DAAA,EACd,QAAA,kBAAAA,qBAAA,CAACS,aAAgB,EAAhB,EACC,QAAA,kBAAAT,qBAAA,CAAC,KAAA,EAAA,EAAM,SAAA,EAAU,yCAAA,EAA0C,CAAA,EAC7D,CAAA,EACF,CAAA;AAAA,sBACAA,qBAAA,CAACU,QAAgB,EAAhB,EAA0B,QAAA,EAAS;AAAA;AAAA;AACtC,CACD,CAAA;AACD,UAAA,CAAW,WAAA,GAAcF,IAAgB,CAAK,WAAA;AAE9C,MAAM,eAAA,GAAkBX,uBAAM,CAG5B,CAAC,EAAE,SAAA,EAAW,GAAG,KAAA,EAAM,EAAG,GAAA,qBAC1BG,qBAAA;AAAA,EAACW,SAAgB;AAAA,EAAhB;AAAA,IACC,GAAA;AAAA,IACA,SAAA,EAAW,EAAA,CAAG,0BAAA,EAA4B,SAAS,CAAA;AAAA,IAClD,GAAG;AAAA;AACN,CACD,CAAA;AACD,eAAA,CAAgB,WAAA,GAAcA,SAAgB,CAAU,WAAA;;AChIjD,SAAS,WAAA,GAAc;AAC5B,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIC,qBAAA,CAAiB,EAAE,CAAA;AAC7C,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAIA,sBAAS,IAAI,CAAA;AAC3C,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,sBAAwB,IAAI,CAAA;AACtD,EAAA,MAAM,CAAC,YAAA,EAAc,eAAe,CAAA,GAAIA,sBAAwB,IAAI,CAAA;AACpE,EAAA,MAAM,CAAC,QAAA,EAAU,WAAW,CAAA,GAAIA,sBAAS,KAAK,CAAA;AAC9C,EAAA,MAAM,CAAC,UAAA,EAAY,aAAa,CAAA,GAAIA,sBAAS,EAAE,CAAA;AAE/C,EAAAC,sBAAA,CAAU,MAAM;AACd,IAAA,UAAA,EAAW;AAAA,EACb,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,MAAM,aAAa,YAAY;AAC7B,IAAA,IAAI;AACF,MAAA,UAAA,CAAW,IAAI,CAAA;AACf,MAAA,QAAA,CAAS,IAAI,CAAA;AAEb,MAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,kBAAA,EAAoB;AAAA,QAC/C,OAAA,EAAS;AAAA,UACP,eAAA,EAAiB,YAAA,CAAa,OAAA,CAAQ,YAAY,CAAA,IAAK;AAAA;AACzD,OACD,CAAA;AAED,MAAA,IAAI,CAAC,SAAS,EAAA,EAAI;AAChB,QAAA,MAAM,IAAI,MAAM,uBAAuB,CAAA;AAAA,MACzC;AAEA,MAAA,MAAM,IAAA,GAAO,MAAM,QAAA,CAAS,IAAA,EAAK;AACjC,MAAA,QAAA,CAAS,KAAK,KAAK,CAAA;AAAA,IACrB,SAAS,GAAA,EAAK;AACZ,MAAA,QAAA,CAAS,GAAA,YAAe,KAAA,GAAQ,GAAA,CAAI,OAAA,GAAU,mBAAmB,CAAA;AAAA,IACnE,CAAA,SAAE;AACA,MAAA,UAAA,CAAW,KAAK,CAAA;AAAA,IAClB;AAAA,EACF,CAAA;AAEA,EAAA,MAAM,cAAA,GAAiB,OAAO,MAAA,EAAgB,OAAA,KAAoB;AAChE,IAAA,IAAI;AACF,MAAA,WAAA,CAAY,IAAI,CAAA;AAChB,MAAA,QAAA,CAAS,IAAI,CAAA;AAEb,MAAA,MAAM,QAAA,GAAW,MAAM,KAAA,CAAM,CAAA,iBAAA,EAAoB,MAAM,CAAA,KAAA,CAAA,EAAS;AAAA,QAC9D,MAAA,EAAQ,KAAA;AAAA,QACR,OAAA,EAAS;AAAA,UACP,cAAA,EAAgB,kBAAA;AAAA,UAChB,eAAA,EAAiB,YAAA,CAAa,OAAA,CAAQ,YAAY,CAAA,IAAK;AAAA,SACzD;AAAA,QACA,MAAM,IAAA,CAAK,SAAA,CAAU,EAAE,IAAA,EAAM,SAAS;AAAA,OACvC,CAAA;AAED,MAAA,IAAI,CAAC,SAAS,EAAA,EAAI;AAChB,QAAA,MAAM,IAAI,MAAM,4BAA4B,CAAA;AAAA,MAC9C;AAGA,MAAA,QAAA,CAAS,KAAA,CAAM,GAAA;AAAA,QAAI,CAAA,IAAA,KACjB,KAAK,EAAA,KAAO,MAAA,GAAS,EAAE,GAAG,IAAA,EAAM,IAAA,EAAM,OAAA,EAAQ,GAAI;AAAA,OACnD,CAAA;AAED,MAAA,eAAA,CAAgB,IAAI,CAAA;AAAA,IACtB,SAAS,GAAA,EAAK;AACZ,MAAA,QAAA,CAAS,GAAA,YAAe,KAAA,GAAQ,GAAA,CAAI,OAAA,GAAU,mBAAmB,CAAA;AAAA,IACnE,CAAA,SAAE;AACA,MAAA,WAAA,CAAY,KAAK,CAAA;AAAA,IACnB;AAAA,EACF,CAAA;AAEA,EAAA,MAAM,aAAA,GAAgB,KAAA,CAAM,MAAA,CAAO,CAAA,IAAA,KAAQ;AACzC,IAAA,MAAM,WAAA,GAAc,WAAW,WAAA,EAAY;AAC3C,IAAA,OACE,IAAA,CAAK,KAAA,CAAM,WAAA,EAAY,CAAE,QAAA,CAAS,WAAW,CAAA,IAC7C,IAAA,CAAK,IAAA,CAAK,WAAA,EAAY,CAAE,QAAA,CAAS,WAAW,CAAA,IAC5C,IAAA,CAAK,IAAA,CAAK,WAAA,EAAY,CAAE,QAAA,CAAS,WAAW,CAAA,IAC3C,IAAA,CAAK,YAAA,IAAgB,IAAA,CAAK,YAAA,CAAa,WAAA,EAAY,CAAE,QAAA,CAAS,WAAW,CAAA;AAAA,EAE9E,CAAC,CAAA;AAED,EAAA,MAAM,iBAAA,GAAoB,CAAC,IAAA,KAAiB;AAC1C,IAAA,QAAQ,IAAA;AAAM,MACZ,KAAK,OAAA;AACH,QAAA,OAAO,aAAA;AAAA,MACT,KAAK,WAAA;AACH,QAAA,OAAO,SAAA;AAAA,MACT,KAAK,YAAA;AACH,QAAA,OAAO,WAAA;AAAA,MACT,KAAK,SAAA;AACH,QAAA,OAAO,SAAA;AAAA,MACT;AACE,QAAA,OAAO,SAAA;AAAA;AACX,EACF,CAAA;AAEA,EAAA,MAAM,mBAAA,GAAsB,CAAC,MAAA,KAAmB;AAC9C,IAAA,QAAQ,MAAA;AAAQ,MACd,KAAK,QAAA;AACH,QAAA,OAAO,WAAA;AAAA,MACT,KAAK,WAAA;AACH,QAAA,OAAO,aAAA;AAAA,MACT,KAAK,SAAA;AACH,QAAA,OAAO,SAAA;AAAA,MACT;AACE,QAAA,OAAO,SAAA;AAAA;AACX,EACF,CAAA;AAEA,EAAA,IAAI,OAAA,EAAS;AACX,IAAA,uBACEb,qBAAA,CAAC,SAAI,SAAA,EAAU,sCAAA,EACb,gDAACc,YAAA,EAAA,EAAQ,SAAA,EAAU,wBAAuB,CAAA,EAC5C,CAAA;AAAA,EAEJ;AAEA,EAAA,8CACG,IAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAAhB,sBAAA,CAAC,UAAA,EAAA,EACC,QAAA,EAAA;AAAA,sBAAAA,sBAAA,CAAC,SAAA,EAAA,EAAU,WAAU,yBAAA,EACnB,QAAA,EAAA;AAAA,wBAAAE,qBAAA,CAAC,MAAA,EAAA,EAAO,WAAU,SAAA,EAAU,CAAA;AAAA,QAAE;AAAA,OAAA,EAEhC,CAAA;AAAA,sBACAA,qBAAA,CAAC,mBAAgB,QAAA,EAAA,qDAAA,EAEjB;AAAA,KAAA,EACF,CAAA;AAAA,2CACC,WAAA,EAAA,EACE,QAAA,EAAA;AAAA,MAAA,KAAA,oBACCF,sBAAA,CAAC,KAAA,EAAA,EAAM,OAAA,EAAQ,aAAA,EAAc,WAAU,MAAA,EACrC,QAAA,EAAA;AAAA,wBAAAE,qBAAA,CAACe,WAAA,EAAA,EAAY,WAAU,SAAA,EAAU,CAAA;AAAA,wBACjCf,qBAAA,CAAC,oBAAkB,QAAA,EAAA,KAAA,EAAM;AAAA,OAAA,EAC3B,CAAA;AAAA,sBAGFA,qBAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,MAAA,EACb,QAAA,kBAAAA,qBAAA;AAAA,QAAC,KAAA;AAAA,QAAA;AAAA,UACC,WAAA,EAAY,uDAAA;AAAA,UACZ,KAAA,EAAO,UAAA;AAAA,UACP,UAAU,CAAC,CAAA,KAAM,aAAA,CAAc,CAAA,CAAE,OAAO,KAAK,CAAA;AAAA,UAC7C,SAAA,EAAU;AAAA;AAAA,OACZ,EACF,CAAA;AAAA,sBAEAA,qBAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,mBAAA,EACb,iDAAC,KAAA,EAAA,EACC,QAAA,EAAA;AAAA,wBAAAA,qBAAA,CAAC,WAAA,EAAA,EACC,iDAAC,QAAA,EAAA,EACC,QAAA,EAAA;AAAA,0BAAAA,qBAAA,CAAC,aAAU,QAAA,EAAA,MAAA,EAAI,CAAA;AAAA,0BACfA,qBAAA,CAAC,aAAU,QAAA,EAAA,MAAA,EAAI,CAAA;AAAA,0BACfA,qBAAA,CAAC,aAAU,QAAA,EAAA,cAAA,EAAY,CAAA;AAAA,0BACvBA,qBAAA,CAAC,aAAU,QAAA,EAAA,QAAA,EAAM,CAAA;AAAA,0BACjBA,qBAAA,CAAC,aAAU,QAAA,EAAA,YAAA,EAAU,CAAA;AAAA,0BACrBA,qBAAA,CAAC,aAAU,QAAA,EAAA,SAAA,EAAO;AAAA,SAAA,EACpB,CAAA,EACF,CAAA;AAAA,wBACAA,qBAAA,CAAC,aACE,QAAA,EAAA,aAAA,CAAc,MAAA,KAAW,oBACxBA,qBAAA,CAAC,QAAA,EAAA,EACC,gDAAC,SAAA,EAAA,EAAU,OAAA,EAAS,GAAG,SAAA,EAAU,mCAAA,EAAoC,4BAErE,CAAA,EACF,CAAA,GAEA,cAAc,GAAA,CAAI,CAAC,IAAA,qBACjBF,sBAAA,CAAC,QAAA,EAAA,EACC,QAAA,EAAA;AAAA,0BAAAE,qBAAA,CAAC,SAAA,EAAA,EACC,iDAAC,KAAA,EAAA,EACC,QAAA,EAAA;AAAA,4BAAAA,qBAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,aAAA,EAAe,QAAA,EAAA,IAAA,CAAK,IAAA,EAAK,CAAA;AAAA,4BACxCA,qBAAA,CAAC,KAAA,EAAA,EAAI,SAAA,EAAU,+BAAA,EAAiC,eAAK,KAAA,EAAM,CAAA;AAAA,YAC1D,IAAA,CAAK,cAAA,oBACJF,sBAAA,CAAC,KAAA,EAAA,EAAI,WAAU,+BAAA,EAAgC,QAAA,EAAA;AAAA,cAAA,WAAA;AAAA,cACnC,IAAA,CAAK;AAAA,aAAA,EACjB;AAAA,WAAA,EAEJ,CAAA,EACF,CAAA;AAAA,0BACAE,qBAAA,CAAC,SAAA,EAAA,EACC,QAAA,kBAAAA,qBAAA,CAAC,KAAA,EAAA,EAAM,OAAA,EAAS,iBAAA,CAAkB,IAAA,CAAK,IAAI,CAAA,EACxC,QAAA,EAAA,IAAA,CAAK,IAAA,EACR,CAAA,EACF,CAAA;AAAA,0BACAA,qBAAA,CAAC,SAAA,EAAA,EAAW,QAAA,EAAA,IAAA,CAAK,YAAA,IAAgB,GAAA,EAAI,CAAA;AAAA,0BACrCA,qBAAA,CAAC,SAAA,EAAA,EACC,QAAA,kBAAAA,qBAAA,CAAC,KAAA,EAAA,EAAM,OAAA,EAAS,mBAAA,CAAoB,IAAA,CAAK,MAAM,CAAA,EAC5C,QAAA,EAAA,IAAA,CAAK,MAAA,EACR,CAAA,EACF,CAAA;AAAA,0BACAA,qBAAA,CAAC,SAAA,EAAA,EACE,QAAA,EAAA,IAAA,CAAK,aAAA,GACF,IAAI,IAAA,CAAK,IAAA,CAAK,aAAa,CAAA,CAAE,cAAA,EAAe,GAC5C,OAAA,EAEN,CAAA;AAAA,0BACAA,qBAAA,CAAC,aACE,QAAA,EAAA,YAAA,KAAiB,IAAA,CAAK,qBACrBF,sBAAA,CAAC,KAAA,EAAA,EAAI,WAAU,yBAAA,EACb,QAAA,EAAA;AAAA,4BAAAA,sBAAA;AAAA,cAAC,MAAA;AAAA,cAAA;AAAA,gBACC,cAAc,IAAA,CAAK,IAAA;AAAA,gBACnB,eAAe,CAAC,KAAA,KAAU,cAAA,CAAe,IAAA,CAAK,IAAI,KAAK,CAAA;AAAA,gBACvD,QAAA,EAAU,QAAA;AAAA,gBAEV,QAAA,EAAA;AAAA,kCAAAE,qBAAA,CAAC,aAAA,EAAA,EAAc,SAAA,EAAU,MAAA,EACvB,QAAA,kBAAAA,qBAAA,CAAC,eAAY,CAAA,EACf,CAAA;AAAA,wDACC,aAAA,EAAA,EACE,QAAA,EAAA,MAAA,CAAO,IAAA,CAAK,KAAK,EAAE,GAAA,CAAI,CAAC,IAAA,qBACvBA,qBAAA,CAAC,cAAsB,KAAA,EAAO,IAAA,EAC3B,QAAA,EAAA,IAAA,EAAA,EADc,IAEjB,CACD,CAAA,EACH;AAAA;AAAA;AAAA,aACF;AAAA,4BACAA,qBAAA;AAAA,cAAC,MAAA;AAAA,cAAA;AAAA,gBACC,OAAA,EAAQ,OAAA;AAAA,gBACR,IAAA,EAAK,IAAA;AAAA,gBACL,OAAA,EAAS,MAAM,eAAA,CAAgB,IAAI,CAAA;AAAA,gBACnC,QAAA,EAAU,QAAA;AAAA,gBACX,QAAA,EAAA;AAAA;AAAA;AAED,WAAA,EACF,CAAA,mBAEAF,sBAAA;AAAA,YAAC,MAAA;AAAA,YAAA;AAAA,cACC,OAAA,EAAQ,OAAA;AAAA,cACR,IAAA,EAAK,IAAA;AAAA,cACL,OAAA,EAAS,MAAM,eAAA,CAAgB,IAAA,CAAK,EAAE,CAAA;AAAA,cACtC,SAAA,EAAU,yBAAA;AAAA,cAEV,QAAA,EAAA;AAAA,gCAAAE,qBAAA,CAAC,SAAA,EAAA,EAAU,WAAU,SAAA,EAAU,CAAA;AAAA,gBAAE;AAAA;AAAA;AAAA,WAEnC,EAEJ;AAAA,SAAA,EAAA,EApEa,IAAA,CAAK,EAqEpB,CACD,CAAA,EAEL;AAAA,OAAA,EACF,CAAA,EACF;AAAA,KAAA,EACF;AAAA,GAAA,EACF,CAAA;AAEJ;;ACtQA,MAAA,UAAAgB,WAAA,EAAA;AAAA,MAAA,OAAA,GAAAC,eAAA,CAAA,CAAA,QAAA,EAAA,SAAA,OAAA,KAAA;AAAA,EAAA,MAAAC,MAAAA,GAAA,QAAA,CAAA,WAAA,CAAA,OAAA,EAAA,SAAA,OAAA,CAAA;AAAA,EAAAA,OAAA,IAAA,GAAA,OAAA;AAKA,EAAA,MAAM,UAAA,GAAaA,MAAAA,CAAM,OAAA,CAAQ,GAAA,CAAI,YAAY,CAAA;AACjD,EAAA,MAAM,YAAA,GAAeA,MAAAA,CAAM,OAAA,CAAQ,GAAA,CAAI,cAAc,CAAA;AAErD,EAAA,IAAI,CAAC,UAAA,IAAc,YAAA,EAAc,KAAA,KAAU,OAAA,EAAS;AAClD,IAAA,OAAOA,MAAAA,CAAM,SAAS,QAAQ,CAAA;AAChC,EAAA;AAVA,EAAA,OAAAC,iBAAAC,eAAA,CAAA,QAAA,EAAA,QAAA,EAAAC,QAAA,EAAA,EAaQ,OAAA,EAbR,yBAAA,EAAA,EAAA,EAAA,WAAA,CAAAC,SAAAA,KAAAH,cAAA,CAAA,CAAA,EAAAI,eAAA,CAAA,CAAA,CAAA;;AAAA,YAAA,EAAAH,eAAA,CAAAE,WAAA,aAAA,EAAA,WAAA,EAAA,EAsBiB,aAAA,EAAA,MAtBjB,4BAAA,EAAA,MAAA,EAAA,uBAAA,EAAA,6EAAA,EAAA,2BAAA,aAAA,EAsBK,CAAA,CAAA,QAAA,CAAA,EAtBL,CAAA,CAAA,CAAA;AAAA,CAAA,EAAA,0EAAA,MAAA,CAAA;;;;;;;;;;;;;;;;"}