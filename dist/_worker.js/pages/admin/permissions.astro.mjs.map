{"version":3,"file":"permissions.astro.mjs","sources":["../../../../src/components/ui/checkbox.tsx","../../../../src/components/admin/PermissionMatrix.tsx","../../../../src/pages/admin/permissions.astro"],"sourcesContent":["import * as React from \"react\";\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\r\nimport { Check } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-[hsl(var(--iplc-neutral-700))] bg-background shadow-[var(--iplc-shadow-sm)] transition-all duration-200\",\r\n      \"hover:border-[hsl(var(--iplc-primary))] hover:shadow-[var(--iplc-shadow-md)]\",\r\n      \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--iplc-accent-sky))] focus-visible:ring-offset-2\",\r\n      \"disabled:cursor-not-allowed disabled:opacity-50\",\r\n      \"data-[state=checked]:border-transparent data-[state=checked]:bg-[var(--iplc-gradient-primary)] data-[state=checked]:text-white\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-3 w-3 font-bold\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n));\r\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\r\n\r\nexport { Checkbox };","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../ui/card';\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '../ui/table';\r\nimport { Checkbox } from '../ui/checkbox';\r\nimport { Badge } from '../ui/badge';\r\nimport { Button } from '../ui/button';\r\nimport { Alert, AlertDescription } from '../ui/alert';\r\nimport { Loader2, Lock, Save, AlertCircle } from 'lucide-react';\r\nimport { ROLES, RESOURCES, PERMISSIONS } from '../../lib/utils/rbac';\r\n\r\ninterface PermissionData {\r\n  role: string;\r\n  permissions: {\r\n    [resource: string]: string[];\r\n  };\r\n}\r\n\r\nexport function PermissionMatrix() {\r\n  const [permissionData, setPermissionData] = useState<PermissionData[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [modifiedPermissions, setModifiedPermissions] = useState<Set<string>>(new Set());\r\n\r\n  useEffect(() => {\r\n    fetchPermissions();\r\n  }, []);\r\n\r\n  const fetchPermissions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const response = await fetch('/api/admin/permissions', {\r\n        headers: {\r\n          'X-Customer-ID': localStorage.getItem('customerId') || ''\r\n        }\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch permissions');\r\n      }\r\n\r\n      const data = await response.json() as { permissions: PermissionData[] };\r\n      setPermissionData(data.permissions);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const hasPermission = (role: string, resource: string, permission: string): boolean => {\r\n    const roleData = permissionData.find(p => p.role === role);\r\n    return roleData?.permissions[resource]?.includes(permission) || false;\r\n  };\r\n\r\n  const togglePermission = (role: string, resource: string, permission: string) => {\r\n    const updatedData = permissionData.map(roleData => {\r\n      if (roleData.role === role) {\r\n        const resourcePermissions = roleData.permissions[resource] || [];\r\n        const hasPermission = resourcePermissions.includes(permission);\r\n        \r\n        return {\r\n          ...roleData,\r\n          permissions: {\r\n            ...roleData.permissions,\r\n            [resource]: hasPermission\r\n              ? resourcePermissions.filter(p => p !== permission)\r\n              : [...resourcePermissions, permission]\r\n          }\r\n        };\r\n      }\r\n      return roleData;\r\n    });\r\n\r\n    setPermissionData(updatedData);\r\n    setModifiedPermissions(new Set([...modifiedPermissions, `${role}-${resource}-${permission}`]));\r\n  };\r\n\r\n  const savePermissions = async () => {\r\n    try {\r\n      setSaving(true);\r\n      setError(null);\r\n\r\n      const response = await fetch('/api/admin/permissions', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-Customer-ID': localStorage.getItem('customerId') || ''\r\n        },\r\n        body: JSON.stringify({ permissions: permissionData })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to save permissions');\r\n      }\r\n\r\n      setModifiedPermissions(new Set());\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'An error occurred');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle className=\"flex items-center gap-2\">\r\n          <Lock className=\"h-5 w-5\" />\r\n          Permission Matrix\r\n        </CardTitle>\r\n        <CardDescription>\r\n          Configure permissions for each role across different resources\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <CardContent>\r\n        {error && (\r\n          <Alert variant=\"destructive\" className=\"mb-4\">\r\n            <AlertCircle className=\"h-4 w-4\" />\r\n            <AlertDescription>{error}</AlertDescription>\r\n          </Alert>\r\n        )}\r\n\r\n        <div className=\"overflow-x-auto\">\r\n          <Table className=\"min-w-[800px]\">\r\n            <TableHeader>\r\n              <TableRow>\r\n                <TableHead className=\"sticky left-0 bg-background\">Resource</TableHead>\r\n                {Object.keys(PERMISSIONS).map(permission => (\r\n                  <TableHead key={permission} className=\"text-center\">\r\n                    <div className=\"flex flex-col items-center gap-1\">\r\n                      <span className=\"text-xs font-medium uppercase\">\r\n                        {permission}\r\n                      </span>\r\n                    </div>\r\n                  </TableHead>\r\n                ))}\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {Object.keys(ROLES).map(role => (\r\n                <React.Fragment key={role}>\r\n                  <TableRow className=\"bg-muted/50\">\r\n                    <TableCell colSpan={Object.keys(PERMISSIONS).length + 1}>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Badge variant={role === 'admin' ? 'destructive' : 'default'}>\r\n                          {role.toUpperCase()}\r\n                        </Badge>\r\n                        <span className=\"text-sm text-muted-foreground\">\r\n                          {role === 'admin' && '(Has all permissions)'}\r\n                          {role === 'patient' && '(Limited to own data)'}\r\n                        </span>\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                  {Object.keys(RESOURCES).map(resource => (\r\n                    <TableRow key={`${role}-${resource}`}>\r\n                      <TableCell className=\"sticky left-0 bg-background font-medium\">\r\n                        {resource.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\r\n                      </TableCell>\r\n                      {Object.keys(PERMISSIONS).map(permission => {\r\n                        const isAllowed = hasPermission(role, resource, permission);\r\n                        const isModified = modifiedPermissions.has(`${role}-${resource}-${permission}`);\r\n                        const isDisabled = role === 'admin' || \r\n                          (role === 'patient' && !['own_submissions', 'own_profile'].includes(resource));\r\n                        \r\n                        return (\r\n                          <TableCell key={permission} className=\"text-center\">\r\n                            <div className=\"flex justify-center\">\r\n                              <Checkbox\r\n                                checked={isAllowed}\r\n                                disabled={isDisabled}\r\n                                onCheckedChange={() => togglePermission(role, resource, permission)}\r\n                                className={isModified ? 'border-blue-500' : ''}\r\n                              />\r\n                            </div>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  ))}\r\n                </React.Fragment>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n\r\n        {modifiedPermissions.size > 0 && (\r\n          <div className=\"mt-4 flex justify-end\">\r\n            <Button\r\n              onClick={savePermissions}\r\n              disabled={saving}\r\n              className=\"flex items-center gap-2\"\r\n            >\r\n              {saving ? (\r\n                <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n              ) : (\r\n                <Save className=\"h-4 w-4\" />\r\n              )}\r\n              Save Changes ({modifiedPermissions.size})\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","---\r\nimport Layout from '../../layouts/Layout.astro';\r\nimport { PermissionMatrix } from '../../components/admin/PermissionMatrix';\r\n\r\n// For SSR: Check authentication and authorization\r\nconst customerId = Astro.cookies.get('customerId');\r\nconst customerRole = Astro.cookies.get('customerRole');\r\n\r\nif (!customerId || customerRole?.value !== 'admin') {\r\n  return Astro.redirect('/login');\r\n}\r\n---\r\n\r\n<Layout title=\"Permission Management - Admin\">\r\n  <div class=\"container mx-auto py-8\">\r\n    <div class=\"mb-8\">\r\n      <h1 class=\"text-3xl font-bold\">Permission Management</h1>\r\n      <p class=\"text-muted-foreground mt-2\">\r\n        Configure role-based access control permissions\r\n      </p>\r\n    </div>\r\n\r\n    <PermissionMatrix client:load />\r\n  </div>\r\n</Layout>"],"names":["React.forwardRef","jsx","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","useState","useEffect","hasPermission","Loader2","jsxs","AlertCircle","$$createAstro","$$createComponent","Astro","$$render","$$renderComponent","Layout","$$result","$$maybeRenderHead"],"mappings":"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"}