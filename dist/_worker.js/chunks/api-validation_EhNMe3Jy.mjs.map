{"version":3,"file":"api-validation_EhNMe3Jy.mjs","sources":["../../../src/lib/schemas/api-validation.ts"],"sourcesContent":["// Comprehensive Zod Validation Schemas for IPLC Forms v3 API\r\n// Implementing robust validation across all endpoints\r\n\r\nimport { z } from \"zod\";\r\n\r\n// Core Entity Schemas\r\nexport const CustomerSchema = z.object({\r\n  id: z.number().optional(),\r\n  name: z.string().min(2, \"Name must be at least 2 characters\").max(100),\r\n  email: z.string().email(\"Invalid email address\").max(255),\r\n  notes: z.string().max(1000).optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\nexport const SubscriptionSchema = z.object({\r\n  id: z.number().optional(),\r\n  name: z.string().min(2, \"Name must be at least 2 characters\").max(100),\r\n  description: z.string().max(500).optional(),\r\n  price: z.number().positive(\"Price must be positive\"),\r\n  features: z.array(z.object({\r\n    name: z.string().min(1).max(100),\r\n    description: z.string().max(300).optional(),\r\n  })).optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\nexport const CustomerSubscriptionSchema = z.object({\r\n  id: z.number().optional(),\r\n  customer_id: z.number().positive(\"Customer ID must be positive\"),\r\n  subscription_id: z.number().positive(\"Subscription ID must be positive\"),\r\n  status: z.enum([\"active\", \"inactive\", \"cancelled\", \"paused\"]),\r\n  subscription_starts_at: z.string().datetime().optional(),\r\n  subscription_ends_at: z.union([z.string().datetime(), z.number()]).optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\n// Form Builder Schemas\r\nexport const FormComponentSchema = z.object({\r\n  id: z.string().min(1),\r\n  type: z.enum([\r\n    'text_input', 'textarea', 'select', 'radio', 'checkbox', 'date', 'number', 'scale',\r\n    'clinical_scale', 'assistance_level', 'demographics', 'standardized_test', 'oral_motor',\r\n    'language_sample', 'sensory_processing', 'goals_planning', 'clinical_signature', 'cpt_code',\r\n    'ai_summary', 'title_subtitle', 'subtitle', 'line_separator', 'evaluation_section', 'clinical_component'\r\n  ]),\r\n  label: z.string().min(1, \"Label is required\").max(200),\r\n  order: z.number().min(0),\r\n  sectionId: z.string().optional(), // For evaluation_section components\r\n  collapsed: z.boolean().optional(), // For evaluation_section components\r\n  props: z.object({\r\n    required: z.boolean().optional(),\r\n    placeholder: z.string().max(200).optional(),\r\n    description: z.string().max(500).optional(),\r\n    options: z.array(z.string().max(100)).optional(),\r\n    min: z.number().optional(),\r\n    max: z.number().optional(),\r\n    validation: z.object({\r\n      minLength: z.number().min(0).optional(),\r\n      maxLength: z.number().min(1).optional(),\r\n      pattern: z.string().optional(),\r\n      min: z.number().optional(),\r\n      max: z.number().optional(),\r\n    }).optional(),\r\n    visibilityCondition: z.object({\r\n      field: z.string().min(1),\r\n      value: z.any(),\r\n      operator: z.enum(['equals', 'not_equals', 'contains', 'greater_than', 'less_than']),\r\n    }).optional(),\r\n    // AI Summary specific props\r\n    ai_summary: z.object({\r\n      auto_select_fields: z.boolean().optional(),\r\n      default_prompt: z.string().max(1000).optional(),\r\n      max_length: z.number().min(50).max(2000).optional(),\r\n      include_medical_context: z.boolean().optional(),\r\n    }).optional(),\r\n    // Title/Subtitle specific props\r\n    title_subtitle: z.object({\r\n      text: z.string().max(500),\r\n      level: z.enum(['h1', 'h2', 'h3', 'h4', 'h5', 'h6']).default('h2'),\r\n      fontFamily: z.enum(['system', 'serif', 'sans-serif', 'monospace']).default('system'),\r\n      fontSize: z.enum(['xs', 'sm', 'base', 'lg', 'xl', '2xl', '3xl', '4xl']).default('base'),\r\n      fontWeight: z.enum(['normal', 'medium', 'semibold', 'bold']).default('normal'),\r\n      color: z.string().regex(/^#[0-9A-F]{6}$/i).default('#000000'),\r\n      alignment: z.enum(['left', 'center', 'right']).default('left'),\r\n      marginTop: z.number().min(0).max(100).default(0),\r\n      marginBottom: z.number().min(0).max(100).default(0),\r\n      enableMarkdown: z.boolean().default(false),\r\n    }).optional(),\r\n    // Line Separator specific props\r\n    line_separator: z.object({\r\n      thickness: z.number().min(1).max(10).default(1),\r\n      color: z.string().regex(/^#[0-9A-F]{6}$/i).default('#CCCCCC'),\r\n      style: z.enum(['solid', 'dashed', 'dotted']).default('solid'),\r\n      width: z.number().min(10).max(100).default(100),\r\n      alignment: z.enum(['left', 'center', 'right']).default('center'),\r\n      marginTop: z.number().min(0).max(100).default(10),\r\n      marginBottom: z.number().min(0).max(100).default(10),\r\n    }).optional(),\r\n  }).optional(),\r\n});\r\n\r\nexport const FormPageSchema = z.object({\r\n  id: z.string().min(1),\r\n  title: z.string().min(1).max(200),\r\n  description: z.string().max(500).optional(),\r\n  order: z.number().min(0),\r\n  components: z.array(FormComponentSchema),\r\n});\r\n\r\nexport const FormTemplateSchema = z.object({\r\n  id: z.number().optional(),\r\n  name: z.string().min(2, \"Name must be at least 2 characters\").max(200),\r\n  description: z.string().max(1000).optional(),\r\n  category: z.enum(['assessment', 'intake', 'treatment', 'outcome', 'research', 'other']),\r\n  subcategory: z.string().max(100).optional(),\r\n  clinical_context: z.string().min(2, \"Clinical context is required\").max(1000),\r\n  version: z.number().min(1).default(1),\r\n  schema: z.object({\r\n    // Support both single-page (components) and multi-page (pages) forms\r\n    components: z.array(FormComponentSchema).optional(),\r\n    pages: z.array(FormPageSchema).optional(),\r\n    isMultiPage: z.boolean().optional().default(false),\r\n  }).refine(\r\n    (data) => {\r\n      // Either components or pages must be present\r\n      return (data.components && data.components.length > 0) ||\r\n             (data.pages && data.pages.length > 0);\r\n    },\r\n    {\r\n      message: \"Form must have either components or pages\",\r\n    }\r\n  ),\r\n  ui_schema: z.record(z.string(), z.any()).optional(),\r\n  scoring_config: z.record(z.string(), z.any()).optional(),\r\n  permissions: z.record(z.string(), z.any()).optional(),\r\n  metadata: z.object({\r\n    showIplcLogo: z.boolean().optional(),\r\n  }).catchall(z.any()).optional(),\r\n  // Enhanced metadata fields\r\n  tags: z.array(z.string().max(50)).max(20).optional(),\r\n  clinical_codes: z.object({\r\n    icd10: z.array(z.string()).optional(),\r\n    snomed: z.array(z.string()).optional(),\r\n    loinc: z.array(z.string()).optional(),\r\n    custom: z.record(z.string(), z.array(z.string())).optional(),\r\n  }).optional(),\r\n  target_audience: z.array(z.enum(['adult', 'pediatric', 'geriatric', 'adolescent', 'all_ages'])).optional(),\r\n  estimated_completion_time: z.number().min(1).max(480).optional(), // 1 minute to 8 hours\r\n  change_log: z.array(z.object({\r\n    version: z.number().min(1),\r\n    date: z.string().datetime(),\r\n    changes: z.string().max(1000),\r\n    changed_by: z.number().positive(),\r\n  })).optional(),\r\n  collaborators: z.array(z.object({\r\n    user_id: z.number().positive(),\r\n    role: z.enum(['editor', 'reviewer', 'viewer']),\r\n    added_at: z.string().datetime(),\r\n    added_by: z.number().positive(),\r\n  })).optional(),\r\n  usage_stats: z.object({\r\n    total_submissions: z.number().min(0).default(0),\r\n    unique_users: z.number().min(0).default(0),\r\n    last_used: z.string().datetime().optional(),\r\n    avg_completion_time: z.number().min(0).optional(),\r\n    completion_rate: z.number().min(0).max(100).optional(),\r\n  }).optional(),\r\n  status: z.enum(['draft', 'active', 'archived']).default('draft'),\r\n  created_by: z.number().positive().optional(),\r\n  updated_by: z.number().positive().optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\nexport const FormSubmissionSchema = z.object({\r\n  id: z.number().optional(),\r\n  template_id: z.number().positive(\"Template ID is required\"),\r\n  user_id: z.string().optional(),\r\n  form_data: z.record(z.string(), z.any()),\r\n  calculated_score: z.number().optional(),\r\n  metadata: z.record(z.string(), z.any()).optional(),\r\n  status: z.enum(['draft', 'submitted', 'reviewed', 'approved', 'deleted']).default('draft'),\r\n  submission_date: z.string().datetime().optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\n// Template Collection Schemas\r\nexport const FormTemplateCollectionSchema = z.object({\r\n  id: z.number().optional(),\r\n  name: z.string().min(2, \"Collection name must be at least 2 characters\").max(200),\r\n  description: z.string().max(1000).optional(),\r\n  organization_id: z.number().positive().optional(),\r\n  is_public: z.boolean().default(false),\r\n  metadata: z.record(z.string(), z.any()).optional(),\r\n  created_by: z.number().positive().optional(),\r\n  updated_by: z.number().positive().optional(),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\nexport const FormTemplateCollectionItemSchema = z.object({\r\n  id: z.number().optional(),\r\n  collection_id: z.number().positive(\"Collection ID is required\"),\r\n  template_id: z.number().positive(\"Template ID is required\"),\r\n  order_index: z.number().min(0).default(0),\r\n  added_by: z.number().positive().optional(),\r\n  added_at: z.string().optional(),\r\n});\r\n\r\n// Clinical RBAC Schemas\r\nexport const RoleSchema = z.object({\r\n  id: z.number().optional(),\r\n  name: z.enum(['patient', 'clinician', 'admin', 'researcher', 'supervisor']),\r\n  description: z.string().max(500).optional(),\r\n  permissions: z.array(z.string()),\r\n  created_at: z.string().optional(),\r\n  updated_at: z.string().optional(),\r\n});\r\n\r\nexport const UserPermissionSchema = z.object({\r\n  user_id: z.string().min(1),\r\n  role: z.enum(['patient', 'clinician', 'admin', 'researcher', 'supervisor']),\r\n  resource_type: z.enum(['form_template', 'form_submission', 'customer', 'subscription', 'analytics']),\r\n  resource_id: z.number().optional(),\r\n  permissions: z.array(z.enum(['read', 'write', 'delete', 'admin', 'clinical_review'])),\r\n});\r\n\r\n// Workflow Schemas\r\nexport const WorkflowEventSchema = z.object({\r\n  type: z.string().min(1),\r\n  data: z.record(z.string(), z.any()),\r\n  timestamp: z.string().datetime().optional(),\r\n});\r\n\r\nexport const CustomerWorkflowSchema = z.object({\r\n  customer_id: z.number().positive(\"Customer ID is required\"),\r\n  workflow_type: z.enum(['onboarding', 'assessment', 'treatment', 'follow_up']).default('onboarding'),\r\n  parameters: z.record(z.string(), z.any()).optional(),\r\n});\r\n\r\n// API Request/Response Schemas\r\nexport const CreateCustomerRequest = CustomerSchema.omit({ id: true, created_at: true, updated_at: true });\r\nexport const UpdateCustomerRequest = CustomerSchema.partial().omit({ id: true, created_at: true, updated_at: true });\r\n\r\nexport const CreateSubscriptionRequest = SubscriptionSchema.omit({ id: true, created_at: true, updated_at: true });\r\nexport const UpdateSubscriptionRequest = SubscriptionSchema.partial().omit({ id: true, created_at: true, updated_at: true });\r\n\r\nexport const CreateCustomerSubscriptionRequest = CustomerSubscriptionSchema.omit({ \r\n  id: true, \r\n  created_at: true, \r\n  updated_at: true \r\n});\r\n\r\nexport const CreateFormTemplateRequest = FormTemplateSchema.omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true\r\n});\r\nexport const UpdateFormTemplateRequest = FormTemplateSchema.partial().omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true\r\n});\r\n\r\n// Collection Request Schemas\r\nexport const CreateCollectionRequest = FormTemplateCollectionSchema.omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true\r\n});\r\nexport const UpdateCollectionRequest = FormTemplateCollectionSchema.partial().omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true\r\n});\r\n\r\nexport const AddTemplateToCollectionRequest = FormTemplateCollectionItemSchema.omit({\r\n  id: true,\r\n  added_at: true\r\n});\r\n\r\nexport const CreateFormSubmissionRequest = FormSubmissionSchema.omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true,\r\n  submission_date: true\r\n});\r\n\r\nexport const UpdateFormSubmissionRequest = FormSubmissionSchema.partial().omit({\r\n  id: true,\r\n  created_at: true,\r\n  updated_at: true,\r\n});\r\n\r\n// Form Submission Query Filters\r\nexport const FormSubmissionFiltersSchema = z.object({\r\n  template_id: z.coerce.number().positive().optional(),\r\n  patient_id: z.coerce.number().positive().optional(),\r\n  status: z.enum(['draft', 'submitted', 'reviewed', 'approved', 'deleted']).optional(),\r\n  date_from: z.string().optional(),\r\n  date_to: z.string().optional(),\r\n  page: z.coerce.number().min(1).default(1).optional(),\r\n  per_page: z.coerce.number().min(1).max(100).default(10).optional(),\r\n});\r\n\r\n// Customer Workflow Request Schemas\r\nexport const CreateCustomerWorkflowRequest = CustomerWorkflowSchema;\r\nexport const UpdateCustomerWorkflowRequest = CustomerWorkflowSchema.partial();\r\n\r\n// Query Parameter Schemas\r\nexport const PaginationSchema = z.object({\r\n  page: z.coerce.number().min(1).default(1),\r\n  limit: z.coerce.number().min(1).max(100).default(20),\r\n});\r\n\r\nexport const FilterSchema = z.object({\r\n  status: z.string().optional(),\r\n  category: z.string().optional(),\r\n  user_id: z.string().optional(),\r\n  date_from: z.string().datetime().optional(),\r\n  date_to: z.string().datetime().optional(),\r\n});\r\n\r\n// Enhanced Form Template Query Filters\r\nexport const FormTemplateFiltersSchema = z.object({\r\n  search: z.string().max(200).optional(),\r\n  category: z.enum(['assessment', 'intake', 'treatment', 'outcome', 'research', 'other']).optional(),\r\n  subcategory: z.string().max(100).optional(),\r\n  tags: z.array(z.string().max(50)).optional(),\r\n  organization: z.coerce.number().positive().optional(),\r\n  status: z.enum(['draft', 'active', 'archived']).optional(),\r\n  target_audience: z.enum(['adult', 'pediatric', 'geriatric', 'adolescent', 'all_ages']).optional(),\r\n  clinical_codes: z.object({\r\n    icd10: z.array(z.string()).optional(),\r\n    snomed: z.array(z.string()).optional(),\r\n    loinc: z.array(z.string()).optional(),\r\n  }).optional(),\r\n  created_by: z.coerce.number().positive().optional(),\r\n  updated_since: z.string().datetime().optional(),\r\n  min_completion_time: z.coerce.number().min(1).optional(),\r\n  max_completion_time: z.coerce.number().min(1).optional(),\r\n  has_collaborators: z.coerce.boolean().optional(),\r\n  collection_id: z.coerce.number().positive().optional(),\r\n  sort_by: z.enum(['name', 'created_at', 'updated_at', 'usage_count', 'completion_time']).default('updated_at'),\r\n  sort_order: z.enum(['asc', 'desc']).default('desc'),\r\n  page: z.coerce.number().min(1).default(1),\r\n  per_page: z.coerce.number().min(1).max(100).default(20),\r\n  include_facets: z.coerce.boolean().default(false),\r\n});\r\n\r\nexport const AnalyticsQuerySchema = z.object({\r\n  template_id: z.coerce.number().positive().optional(),\r\n  date_range: z.enum(['7d', '30d', '90d', '1y']).default('30d'),\r\n  clinical_insights: z.coerce.boolean().default(false),\r\n  include_demographics: z.coerce.boolean().default(false),\r\n  group_by: z.enum(['day', 'week', 'month']).default('day'),\r\n});\r\n\r\n// Response Schemas\r\nexport const ApiResponseSchema = z.object({\r\n  success: z.boolean(),\r\n  message: z.string().optional(),\r\n  data: z.any().optional(),\r\n  errors: z.array(z.string()).optional(),\r\n  pagination: z.object({\r\n    page: z.number(),\r\n    limit: z.number(),\r\n    total: z.number(),\r\n    pages: z.number(),\r\n  }).optional(),\r\n});\r\n\r\n// Enhanced Template Response Schemas\r\nexport const FacetSchema = z.object({\r\n  name: z.string(),\r\n  values: z.array(z.object({\r\n    value: z.string(),\r\n    count: z.number(),\r\n    label: z.string().optional(),\r\n  })),\r\n});\r\n\r\nexport const GetTemplatesResponseSchema = z.object({\r\n  success: z.boolean(),\r\n  data: z.object({\r\n    templates: z.array(FormTemplateSchema),\r\n    pagination: z.object({\r\n      page: z.number(),\r\n      per_page: z.number(),\r\n      total: z.number(),\r\n      pages: z.number(),\r\n    }),\r\n    facets: z.array(FacetSchema).optional(),\r\n    aggregations: z.object({\r\n      total_templates: z.number(),\r\n      categories: z.record(z.string(), z.number()),\r\n      avg_completion_time: z.number().optional(),\r\n      most_used_tags: z.array(z.object({\r\n        tag: z.string(),\r\n        count: z.number(),\r\n      })).optional(),\r\n    }).optional(),\r\n  }),\r\n  message: z.string().optional(),\r\n});\r\n\r\nexport const GetTemplateResponseSchema = z.object({\r\n  success: z.boolean(),\r\n  data: z.object({\r\n    template: FormTemplateSchema,\r\n    related_templates: z.array(FormTemplateSchema.pick({\r\n      id: true,\r\n      name: true,\r\n      category: true,\r\n      description: true,\r\n    })).optional(),\r\n    usage_analytics: z.object({\r\n      recent_submissions: z.number(),\r\n      performance_metrics: z.record(z.string(), z.any()),\r\n    }).optional(),\r\n  }),\r\n  message: z.string().optional(),\r\n});\r\n\r\n// Type exports for use throughout the application\r\nexport type Customer = z.infer<typeof CustomerSchema>;\r\nexport type Subscription = z.infer<typeof SubscriptionSchema>;\r\nexport type CustomerSubscription = z.infer<typeof CustomerSubscriptionSchema>;\r\nexport type FormComponent = z.infer<typeof FormComponentSchema>;\r\nexport type FormPage = z.infer<typeof FormPageSchema>;\r\nexport type FormTemplate = z.infer<typeof FormTemplateSchema>;\r\nexport type FormSubmission = z.infer<typeof FormSubmissionSchema>;\r\nexport type FormTemplateCollection = z.infer<typeof FormTemplateCollectionSchema>;\r\nexport type FormTemplateCollectionItem = z.infer<typeof FormTemplateCollectionItemSchema>;\r\nexport type Role = z.infer<typeof RoleSchema>;\r\nexport type UserPermission = z.infer<typeof UserPermissionSchema>;\r\nexport type WorkflowEvent = z.infer<typeof WorkflowEventSchema>;\r\nexport type CustomerWorkflow = z.infer<typeof CustomerWorkflowSchema>;\r\n\r\nexport type CreateCustomerRequest = z.infer<typeof CreateCustomerRequest>;\r\nexport type UpdateCustomerRequest = z.infer<typeof UpdateCustomerRequest>;\r\nexport type CreateSubscriptionRequest = z.infer<typeof CreateSubscriptionRequest>;\r\nexport type CreateCustomerSubscriptionRequest = z.infer<typeof CreateCustomerSubscriptionRequest>;\r\nexport type CreateFormTemplateRequest = z.infer<typeof CreateFormTemplateRequest>;\r\nexport type UpdateFormTemplateRequest = z.infer<typeof UpdateFormTemplateRequest>;\r\nexport type CreateFormSubmissionRequest = z.infer<typeof CreateFormSubmissionRequest>;\r\nexport type UpdateFormSubmissionRequest = z.infer<typeof UpdateFormSubmissionRequest>;\r\nexport type FormSubmissionFilters = z.infer<typeof FormSubmissionFiltersSchema>;\r\nexport type CreateCustomerWorkflowRequest = z.infer<typeof CreateCustomerWorkflowRequest>;\r\nexport type UpdateCustomerWorkflowRequest = z.infer<typeof UpdateCustomerWorkflowRequest>;\r\n\r\n// Enhanced Form Template Types\r\nexport type FormTemplateFilters = z.infer<typeof FormTemplateFiltersSchema>;\r\nexport type CreateCollectionRequest = z.infer<typeof CreateCollectionRequest>;\r\nexport type UpdateCollectionRequest = z.infer<typeof UpdateCollectionRequest>;\r\nexport type AddTemplateToCollectionRequest = z.infer<typeof AddTemplateToCollectionRequest>;\r\n\r\n// Response Types\r\nexport type Facet = z.infer<typeof FacetSchema>;\r\nexport type GetTemplatesResponse = z.infer<typeof GetTemplatesResponseSchema>;\r\nexport type GetTemplateResponse = z.infer<typeof GetTemplateResponseSchema>;\r\n\r\nexport type PaginationQuery = z.infer<typeof PaginationSchema>;\r\nexport type FilterQuery = z.infer<typeof FilterSchema>;\r\nexport type AnalyticsQuery = z.infer<typeof AnalyticsQuerySchema>;\r\nexport type ApiResponse = z.infer<typeof ApiResponseSchema>;\r\n\r\n// Validation helper functions\r\nexport const validateRequest = <T>(schema: z.ZodSchema<T>, data: unknown): { success: true; data: T } | { success: false; errors: string[] } => {\r\n  try {\r\n    const result = schema.parse(data);\r\n    return { success: true, data: result };\r\n  } catch (error) {\r\n    if (error instanceof z.ZodError) {\r\n      return {\r\n        success: false,\r\n        errors: error.issues.map((err: any) => `${err.path.join('.')}: ${err.message}`)\r\n      };\r\n    }\r\n    return {\r\n      success: false,\r\n      errors: ['Invalid request data']\r\n    };\r\n  }\r\n};\r\n\r\nexport const validateQueryParams = (url: URL, schema: z.ZodSchema) => {\r\n  const params = Object.fromEntries(url.searchParams.entries());\r\n  return validateRequest(schema, params);\r\n};"],"names":["z.object","z.number","z.string","z.array","z.enum","z.union","z.boolean","z.any","z.record","z.coerce.number","z.coerce.boolean","z.ZodError"],"mappings":";;;AAMO,MAAM,cAAA,GAAiBA,MAAE,CAAO;AAAA,EACrC,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,IAAA,EAAMC,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,oCAAoC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA;AAAA,EACrE,KAAA,EAAOA,MAAE,EAAO,CAAE,MAAM,uBAAuB,CAAA,CAAE,IAAI,GAAG,CAAA;AAAA,EACxD,OAAOA,MAAE,GAAS,GAAA,CAAI,GAAI,EAAE,QAAA,EAAS;AAAA,EACrC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC,CAAA;AAEM,MAAM,kBAAA,GAAqBF,MAAE,CAAO;AAAA,EACzC,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,IAAA,EAAMC,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,oCAAoC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA;AAAA,EACrE,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EAC1C,KAAA,EAAOD,MAAE,EAAO,CAAE,SAAS,wBAAwB,CAAA;AAAA,EACnD,QAAA,EAAUE,KAAE,CAAMH,MAAE,CAAO;AAAA,IACzB,IAAA,EAAME,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,IAAI,GAAG,CAAA;AAAA,IAC/B,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA;AAAS,GAC3C,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACb,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC,CAAA;AAEM,MAAM,0BAAA,GAA6BF,MAAE,CAAO;AAAA,EACjD,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,WAAA,EAAaA,MAAE,EAAO,CAAE,SAAS,8BAA8B,CAAA;AAAA,EAC/D,eAAA,EAAiBA,MAAE,EAAO,CAAE,SAAS,kCAAkC,CAAA;AAAA,EACvE,MAAA,EAAQG,KAAE,CAAK,CAAC,UAAU,UAAA,EAAY,WAAA,EAAa,QAAQ,CAAC,CAAA;AAAA,EAC5D,wBAAwBF,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACvD,oBAAA,EAAsBG,KAAE,CAAM,CAACH,MAAE,EAAO,CAAE,QAAA,EAAS,EAAGD,MAAE,EAAQ,CAAC,EAAE,QAAA,EAAS;AAAA,EAC5E,UAAA,EAAYC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC,CAAA;AAGM,MAAM,mBAAA,GAAsBF,MAAE,CAAO;AAAA,EAC1C,EAAA,EAAIE,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACpB,IAAA,EAAME,KAAE,CAAK;AAAA,IACX,YAAA;AAAA,IAAc,UAAA;AAAA,IAAY,QAAA;AAAA,IAAU,OAAA;AAAA,IAAS,UAAA;AAAA,IAAY,MAAA;AAAA,IAAQ,QAAA;AAAA,IAAU,OAAA;AAAA,IAC3E,gBAAA;AAAA,IAAkB,kBAAA;AAAA,IAAoB,cAAA;AAAA,IAAgB,mBAAA;AAAA,IAAqB,YAAA;AAAA,IAC3E,iBAAA;AAAA,IAAmB,oBAAA;AAAA,IAAsB,gBAAA;AAAA,IAAkB,oBAAA;AAAA,IAAsB,UAAA;AAAA,IACjF,YAAA;AAAA,IAAc,gBAAA;AAAA,IAAkB,UAAA;AAAA,IAAY,gBAAA;AAAA,IAAkB,oBAAA;AAAA,IAAsB;AAAA,GACrF,CAAA;AAAA,EACD,KAAA,EAAOF,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,mBAAmB,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA;AAAA,EACrD,KAAA,EAAOD,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACvB,SAAA,EAAWC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA;AAAA,EAC/B,SAAA,EAAWI,OAAE,EAAQ,CAAE,QAAA,EAAS;AAAA;AAAA,EAChC,KAAA,EAAON,MAAE,CAAO;AAAA,IACd,QAAA,EAAUM,OAAE,EAAQ,CAAE,QAAA,EAAS;AAAA,IAC/B,aAAaJ,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,IAC1C,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,IAC1C,OAAA,EAASC,KAAE,CAAMD,MAAE,GAAS,GAAA,CAAI,GAAG,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,IAC/C,GAAA,EAAKD,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,IACzB,GAAA,EAAKA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,IACzB,UAAA,EAAYD,MAAE,CAAO;AAAA,MACnB,WAAWC,MAAE,GAAS,GAAA,CAAI,CAAC,EAAE,QAAA,EAAS;AAAA,MACtC,WAAWA,MAAE,GAAS,GAAA,CAAI,CAAC,EAAE,QAAA,EAAS;AAAA,MACtC,OAAA,EAASC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,MAC7B,GAAA,EAAKD,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,MACzB,GAAA,EAAKA,MAAE,EAAO,CAAE,QAAA;AAAS,KAC1B,EAAE,QAAA,EAAS;AAAA,IACZ,mBAAA,EAAqBD,MAAE,CAAO;AAAA,MAC5B,KAAA,EAAOE,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,MACvB,KAAA,EAAOK,GAAE,EAAI;AAAA,MACb,QAAA,EAAUH,KAAE,CAAK,CAAC,UAAU,YAAA,EAAc,UAAA,EAAY,cAAA,EAAgB,WAAW,CAAC;AAAA,KACnF,EAAE,QAAA,EAAS;AAAA;AAAA,IAEZ,UAAA,EAAYJ,MAAE,CAAO;AAAA,MACnB,kBAAA,EAAoBM,OAAE,EAAQ,CAAE,QAAA,EAAS;AAAA,MACzC,gBAAgBJ,MAAE,GAAS,GAAA,CAAI,GAAI,EAAE,QAAA,EAAS;AAAA,MAC9C,UAAA,EAAYD,MAAE,EAAO,CAAE,GAAA,CAAI,EAAE,CAAA,CAAE,GAAA,CAAI,GAAI,CAAA,CAAE,QAAA,EAAS;AAAA,MAClD,uBAAA,EAAyBK,OAAE,EAAQ,CAAE,QAAA;AAAS,KAC/C,EAAE,QAAA,EAAS;AAAA;AAAA,IAEZ,cAAA,EAAgBN,MAAE,CAAO;AAAA,MACvB,IAAA,EAAME,MAAE,EAAO,CAAE,IAAI,GAAG,CAAA;AAAA,MACxB,KAAA,EAAOE,KAAE,CAAK,CAAC,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAA,EAAM,IAAI,CAAC,CAAA,CAAE,QAAQ,IAAI,CAAA;AAAA,MAChE,UAAA,EAAYA,KAAE,CAAK,CAAC,QAAA,EAAU,OAAA,EAAS,YAAA,EAAc,WAAW,CAAC,CAAA,CAAE,OAAA,CAAQ,QAAQ,CAAA;AAAA,MACnF,QAAA,EAAUA,KAAE,CAAK,CAAC,MAAM,IAAA,EAAM,MAAA,EAAQ,IAAA,EAAM,IAAA,EAAM,OAAO,KAAA,EAAO,KAAK,CAAC,CAAA,CAAE,QAAQ,MAAM,CAAA;AAAA,MACtF,UAAA,EAAYA,KAAE,CAAK,CAAC,QAAA,EAAU,QAAA,EAAU,UAAA,EAAY,MAAM,CAAC,CAAA,CAAE,OAAA,CAAQ,QAAQ,CAAA;AAAA,MAC7E,KAAA,EAAOF,MAAE,EAAO,CAAE,MAAM,iBAAiB,CAAA,CAAE,QAAQ,SAAS,CAAA;AAAA,MAC5D,SAAA,EAAWE,KAAE,CAAK,CAAC,MAAA,EAAQ,UAAU,OAAO,CAAC,CAAA,CAAE,OAAA,CAAQ,MAAM,CAAA;AAAA,MAC7D,SAAA,EAAWH,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA;AAAA,MAC/C,YAAA,EAAcA,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA;AAAA,MAClD,cAAA,EAAgBK,OAAE,EAAQ,CAAE,QAAQ,KAAK;AAAA,KAC1C,EAAE,QAAA,EAAS;AAAA;AAAA,IAEZ,cAAA,EAAgBN,MAAE,CAAO;AAAA,MACvB,SAAA,EAAWC,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,EAAE,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA;AAAA,MAC9C,KAAA,EAAOC,MAAE,EAAO,CAAE,MAAM,iBAAiB,CAAA,CAAE,QAAQ,SAAS,CAAA;AAAA,MAC5D,KAAA,EAAOE,KAAE,CAAK,CAAC,OAAA,EAAS,UAAU,QAAQ,CAAC,CAAA,CAAE,OAAA,CAAQ,OAAO,CAAA;AAAA,MAC5D,KAAA,EAAOH,MAAE,EAAO,CAAE,GAAA,CAAI,EAAE,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,GAAG,CAAA;AAAA,MAC9C,SAAA,EAAWG,KAAE,CAAK,CAAC,MAAA,EAAQ,UAAU,OAAO,CAAC,CAAA,CAAE,OAAA,CAAQ,QAAQ,CAAA;AAAA,MAC/D,SAAA,EAAWH,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,EAAE,CAAA;AAAA,MAChD,YAAA,EAAcA,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,EAAE;AAAA,KACpD,EAAE,QAAA;AAAS,GACb,EAAE,QAAA;AACL,CAAC,CAAA;AAEM,MAAM,cAAA,GAAiBD,MAAE,CAAO;AAAA,EACrC,EAAA,EAAIE,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACpB,KAAA,EAAOA,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,IAAI,GAAG,CAAA;AAAA,EAChC,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EAC1C,KAAA,EAAOD,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACvB,UAAA,EAAYE,KAAE,CAAM,mBAAmB;AACzC,CAAC,CAAA;AAEM,MAAM,kBAAA,GAAqBH,MAAE,CAAO;AAAA,EACzC,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,IAAA,EAAMC,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,oCAAoC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA;AAAA,EACrE,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAI,EAAE,QAAA,EAAS;AAAA,EAC3C,QAAA,EAAUE,KAAE,CAAK,CAAC,YAAA,EAAc,UAAU,WAAA,EAAa,SAAA,EAAW,UAAA,EAAY,OAAO,CAAC,CAAA;AAAA,EACtF,aAAaF,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EAC1C,gBAAA,EAAkBA,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,8BAA8B,CAAA,CAAE,GAAA,CAAI,GAAI,CAAA;AAAA,EAC5E,OAAA,EAASD,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,QAAQ,CAAC,CAAA;AAAA,EACpC,MAAA,EAAQD,MAAE,CAAO;AAAA;AAAA,IAEf,UAAA,EAAYG,KAAE,CAAM,mBAAmB,EAAE,QAAA,EAAS;AAAA,IAClD,KAAA,EAAOA,KAAE,CAAM,cAAc,EAAE,QAAA,EAAS;AAAA,IACxC,aAAaG,OAAE,GAAU,QAAA,EAAS,CAAE,QAAQ,KAAK;AAAA,GAClD,CAAA,CAAE,MAAA;AAAA,IACD,CAAC,IAAA,KAAS;AAER,MAAA,OAAQ,IAAA,CAAK,UAAA,IAAc,IAAA,CAAK,UAAA,CAAW,MAAA,GAAS,KAC5C,IAAA,CAAK,KAAA,IAAS,IAAA,CAAK,KAAA,CAAM,MAAA,GAAS,CAAA;AAAA,IAC5C,CAAA;AAAA,IACA;AAAA,MACE,OAAA,EAAS;AAAA;AACX,GACF;AAAA,EACA,SAAA,EAAWE,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA,EAAS;AAAA,EAClD,cAAA,EAAgBC,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA,EAAS;AAAA,EACvD,WAAA,EAAaC,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA,EAAS;AAAA,EACpD,QAAA,EAAUP,MAAE,CAAO;AAAA,IACjB,YAAA,EAAcM,OAAE,EAAQ,CAAE,QAAA;AAAS,GACpC,CAAA,CAAE,QAAA,CAASC,GAAE,EAAK,EAAE,QAAA,EAAS;AAAA;AAAA,EAE9B,IAAA,EAAMJ,KAAE,CAAMD,MAAE,EAAO,CAAE,GAAA,CAAI,EAAE,CAAC,CAAA,CAAE,GAAA,CAAI,EAAE,EAAE,QAAA,EAAS;AAAA,EACnD,cAAA,EAAgBF,MAAE,CAAO;AAAA,IACvB,OAAOG,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,IACpC,QAAQC,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,IACrC,OAAOC,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,IACpC,MAAA,EAAQM,MAAE,CAAON,MAAE,EAAO,EAAGC,KAAE,CAAMD,MAAE,EAAQ,CAAC,EAAE,QAAA;AAAS,GAC5D,EAAE,QAAA,EAAS;AAAA,EACZ,eAAA,EAAiBC,KAAE,CAAMC,MAAO,CAAC,OAAA,EAAS,WAAA,EAAa,WAAA,EAAa,YAAA,EAAc,UAAU,CAAC,CAAC,EAAE,QAAA,EAAS;AAAA,EACzG,yBAAA,EAA2BH,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,QAAA,EAAS;AAAA;AAAA,EAC/D,UAAA,EAAYE,KAAE,CAAMH,MAAE,CAAO;AAAA,IAC3B,OAAA,EAASC,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,IACzB,IAAA,EAAMC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,IAC1B,OAAA,EAASA,MAAE,EAAO,CAAE,IAAI,GAAI,CAAA;AAAA,IAC5B,UAAA,EAAYD,MAAE,EAAO,CAAE,QAAA;AAAS,GACjC,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACb,aAAA,EAAeE,KAAE,CAAMH,MAAE,CAAO;AAAA,IAC9B,OAAA,EAASC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,IAC7B,MAAMG,KAAE,CAAK,CAAC,QAAA,EAAU,UAAA,EAAY,QAAQ,CAAC,CAAA;AAAA,IAC7C,QAAA,EAAUF,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,IAC9B,QAAA,EAAUD,MAAE,EAAO,CAAE,QAAA;AAAS,GAC/B,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACb,WAAA,EAAaD,MAAE,CAAO;AAAA,IACpB,iBAAA,EAAmBC,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,QAAQ,CAAC,CAAA;AAAA,IAC9C,YAAA,EAAcA,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,QAAQ,CAAC,CAAA;AAAA,IACzC,WAAWC,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,IAC1C,qBAAqBD,MAAE,GAAS,GAAA,CAAI,CAAC,EAAE,QAAA,EAAS;AAAA,IAChD,eAAA,EAAiBA,MAAE,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,QAAA;AAAS,GACtD,EAAE,QAAA,EAAS;AAAA,EACZ,MAAA,EAAQG,KAAE,CAAK,CAAC,OAAA,EAAS,UAAU,UAAU,CAAC,CAAA,CAAE,OAAA,CAAQ,OAAO,CAAA;AAAA,EAC/D,YAAYH,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC3C,YAAYA,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC3C,UAAA,EAAYC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC;AAEM,MAAM,oBAAA,GAAuBF,MAAE,CAAO;AAAA,EAC3C,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,WAAA,EAAaA,MAAE,EAAO,CAAE,SAAS,yBAAyB,CAAA;AAAA,EAC1D,OAAA,EAASC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC7B,SAAA,EAAWM,MAAE,CAAON,QAAS,EAAGK,KAAO,CAAA;AAAA,EACvC,gBAAA,EAAkBN,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACtC,QAAA,EAAUO,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA,EAAS;AAAA,EACjD,MAAA,EAAQH,KAAE,CAAK,CAAC,OAAA,EAAS,WAAA,EAAa,UAAA,EAAY,UAAA,EAAY,SAAS,CAAC,CAAA,CAAE,OAAA,CAAQ,OAAO,CAAA;AAAA,EACzF,iBAAiBF,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAChD,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC,CAAA;AAGM,MAAM,4BAAA,GAA+BF,MAAE,CAAO;AAAA,EACnD,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,IAAA,EAAMC,MAAE,EAAO,CAAE,IAAI,CAAA,EAAG,+CAA+C,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA;AAAA,EAChF,aAAaA,MAAE,GAAS,GAAA,CAAI,GAAI,EAAE,QAAA,EAAS;AAAA,EAC3C,iBAAiBD,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAChD,SAAA,EAAWK,OAAE,EAAQ,CAAE,QAAQ,KAAK,CAAA;AAAA,EACpC,QAAA,EAAUE,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA,EAAS;AAAA,EACjD,YAAYN,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC3C,YAAYA,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC3C,UAAA,EAAYC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC,CAAA;AAEM,MAAM,gCAAA,GAAmCF,MAAE,CAAO;AAAA,EACvD,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,aAAA,EAAeA,MAAE,EAAO,CAAE,SAAS,2BAA2B,CAAA;AAAA,EAC9D,WAAA,EAAaA,MAAE,EAAO,CAAE,SAAS,yBAAyB,CAAA;AAAA,EAC1D,WAAA,EAAaA,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA,CAAE,QAAQ,CAAC,CAAA;AAAA,EACxC,UAAUA,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACzC,QAAA,EAAUC,MAAE,EAAO,CAAE,QAAA;AACvB,CAAC,CAAA;AAGyBF,MAAE,CAAO;AAAA,EACjC,EAAA,EAAIC,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACxB,IAAA,EAAMG,KAAE,CAAK,CAAC,WAAW,WAAA,EAAa,OAAA,EAAS,YAAA,EAAc,YAAY,CAAC,CAAA;AAAA,EAC1E,aAAaF,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EAC1C,WAAA,EAAaC,KAAE,CAAMD,QAAU,CAAA;AAAA,EAC/B,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAChC,UAAA,EAAYA,MAAE,EAAO,CAAE,QAAA;AACzB,CAAC;AAEmCF,MAAE,CAAO;AAAA,EAC3C,OAAA,EAASE,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACzB,IAAA,EAAME,KAAE,CAAK,CAAC,WAAW,WAAA,EAAa,OAAA,EAAS,YAAA,EAAc,YAAY,CAAC,CAAA;AAAA,EAC1E,aAAA,EAAeA,KAAE,CAAK,CAAC,iBAAiB,iBAAA,EAAmB,UAAA,EAAY,cAAA,EAAgB,WAAW,CAAC,CAAA;AAAA,EACnG,WAAA,EAAaH,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EACjC,WAAA,EAAaE,KAAE,CAAMC,KAAE,CAAK,CAAC,MAAA,EAAQ,OAAA,EAAS,QAAA,EAAU,OAAA,EAAS,iBAAiB,CAAC,CAAC;AACtF,CAAC;AAGkCJ,MAAE,CAAO;AAAA,EAC1C,IAAA,EAAME,MAAE,EAAO,CAAE,IAAI,CAAC,CAAA;AAAA,EACtB,IAAA,EAAMM,MAAE,CAAON,QAAS,EAAGK,KAAO,CAAA;AAAA,EAClC,WAAWL,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA;AACnC,CAAC;AAEM,MAAM,sBAAA,GAAyBF,MAAE,CAAO;AAAA,EAC7C,WAAA,EAAaC,MAAE,EAAO,CAAE,SAAS,yBAAyB,CAAA;AAAA,EAC1D,aAAA,EAAeG,KAAE,CAAK,CAAC,YAAA,EAAc,YAAA,EAAc,WAAA,EAAa,WAAW,CAAC,CAAA,CAAE,OAAA,CAAQ,YAAY,CAAA;AAAA,EAClG,UAAA,EAAYI,MAAE,CAAON,MAAE,IAAUK,GAAE,EAAK,CAAA,CAAE,QAAA;AAC5C,CAAC;AAGM,MAAM,qBAAA,GAAwB,cAAA,CAAe,IAAA,CAAK,EAAE,EAAA,EAAI,MAAM,UAAA,EAAY,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM;AACpE,cAAA,CAAe,OAAA,EAAQ,CAAE,IAAA,CAAK,EAAE,EAAA,EAAI,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM;AAE5G,MAAM,yBAAA,GAA4B,kBAAA,CAAmB,IAAA,CAAK,EAAE,EAAA,EAAI,MAAM,UAAA,EAAY,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM;AACxE,kBAAA,CAAmB,OAAA,EAAQ,CAAE,IAAA,CAAK,EAAE,EAAA,EAAI,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM,UAAA,EAAY,IAAA,EAAM;AAEpH,MAAM,iCAAA,GAAoC,2BAA2B,IAAA,CAAK;AAAA,EAC/E,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AAEwC,mBAAmB,IAAA,CAAK;AAAA,EAC/D,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AACM,MAAM,yBAAA,GAA4B,kBAAA,CAAmB,OAAA,EAAQ,CAAE,IAAA,CAAK;AAAA,EACzE,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AAGsC,6BAA6B,IAAA,CAAK;AAAA,EACvE,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AACsC,4BAAA,CAA6B,OAAA,EAAQ,CAAE,IAAA,CAAK;AAAA,EACjF,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AAE6C,iCAAiC,IAAA,CAAK;AAAA,EAClF,EAAA,EAAI,IAAA;AAAA,EACJ,QAAA,EAAU;AACZ,CAAC;AAEM,MAAM,2BAAA,GAA8B,qBAAqB,IAAA,CAAK;AAAA,EACnE,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY,IAAA;AAAA,EACZ,eAAA,EAAiB;AACnB,CAAC;AAEM,MAAM,2BAAA,GAA8B,oBAAA,CAAqB,OAAA,EAAQ,CAAE,IAAA,CAAK;AAAA,EAC7E,EAAA,EAAI,IAAA;AAAA,EACJ,UAAA,EAAY,IAAA;AAAA,EACZ,UAAA,EAAY;AACd,CAAC;AAGM,MAAM,2BAAA,GAA8BP,MAAE,CAAO;AAAA,EAClD,aAAaS,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACnD,YAAYA,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAClD,MAAA,EAAQL,KAAE,CAAK,CAAC,OAAA,EAAS,WAAA,EAAa,UAAA,EAAY,UAAA,EAAY,SAAS,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACnF,SAAA,EAAWF,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC/B,OAAA,EAASA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC7B,IAAA,EAAMO,QAAS,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACnD,QAAA,EAAUA,QAAS,GAAS,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,EAAE,EAAE,QAAA;AAC1D,CAAC;AAI4C,uBAAuB,OAAA;AAG7D,MAAM,gBAAA,GAAmBT,MAAE,CAAO;AAAA,EACvC,IAAA,EAAMS,QAAS,GAAS,GAAA,CAAI,CAAC,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA;AAAA,EACxC,KAAA,EAAOA,QAAS,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,EAAE;AACrD,CAAC;AAE2BT,MAAE,CAAO;AAAA,EACnC,MAAA,EAAQE,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC5B,QAAA,EAAUA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC9B,OAAA,EAASA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC7B,WAAWA,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC1C,SAASA,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA;AACjC,CAAC;AAGM,MAAM,yBAAA,GAA4BF,MAAE,CAAO;AAAA,EAChD,QAAQE,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EACrC,QAAA,EAAUE,KAAE,CAAK,CAAC,YAAA,EAAc,QAAA,EAAU,WAAA,EAAa,SAAA,EAAW,UAAA,EAAY,OAAO,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACjG,aAAaF,MAAE,GAAS,GAAA,CAAI,GAAG,EAAE,QAAA,EAAS;AAAA,EAC1C,IAAA,EAAMC,KAAE,CAAMD,MAAE,GAAS,GAAA,CAAI,EAAE,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EAC3C,cAAcO,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACpD,MAAA,EAAQL,KAAE,CAAK,CAAC,SAAS,QAAA,EAAU,UAAU,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EACzD,eAAA,EAAiBA,KAAE,CAAK,CAAC,OAAA,EAAS,WAAA,EAAa,WAAA,EAAa,YAAA,EAAc,UAAU,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,EAChG,cAAA,EAAgBJ,MAAE,CAAO;AAAA,IACvB,OAAOG,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,IACpC,QAAQC,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,IACrC,OAAOC,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA;AAAS,GACrC,EAAE,QAAA,EAAS;AAAA,EACZ,YAAYO,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAClD,eAAeP,MAAE,EAAO,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EAC9C,mBAAA,EAAqBO,QAAS,GAAS,GAAA,CAAI,CAAC,EAAE,QAAA,EAAS;AAAA,EACvD,mBAAA,EAAqBA,QAAS,GAAS,GAAA,CAAI,CAAC,EAAE,QAAA,EAAS;AAAA,EACvD,iBAAA,EAAmBC,SAAS,GAAU,QAAA,EAAS;AAAA,EAC/C,eAAeD,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACrD,OAAA,EAASL,KAAE,CAAK,CAAC,MAAA,EAAQ,YAAA,EAAc,YAAA,EAAc,aAAA,EAAe,iBAAiB,CAAC,CAAA,CAAE,OAAA,CAAQ,YAAY,CAAA;AAAA,EAC5G,UAAA,EAAYA,KAAE,CAAK,CAAC,OAAO,MAAM,CAAC,CAAA,CAAE,OAAA,CAAQ,MAAM,CAAA;AAAA,EAClD,IAAA,EAAMK,QAAS,GAAS,GAAA,CAAI,CAAC,CAAA,CAAE,OAAA,CAAQ,CAAC,CAAA;AAAA,EACxC,QAAA,EAAUA,QAAS,EAAO,CAAE,GAAA,CAAI,CAAC,CAAA,CAAE,GAAA,CAAI,GAAG,CAAA,CAAE,OAAA,CAAQ,EAAE,CAAA;AAAA,EACtD,gBAAgBC,SAAS,EAAQ,CAAE,QAAQ,KAAK;AAClD,CAAC;AAEmCV,MAAE,CAAO;AAAA,EAC3C,aAAaS,UAAgB,CAAE,QAAA,GAAW,QAAA,EAAS;AAAA,EACnD,UAAA,EAAYL,KAAE,CAAK,CAAC,IAAA,EAAM,KAAA,EAAO,KAAA,EAAO,IAAI,CAAC,CAAA,CAAE,OAAA,CAAQ,KAAK,CAAA;AAAA,EAC5D,mBAAmBM,SAAS,EAAQ,CAAE,QAAQ,KAAK,CAAA;AAAA,EACnD,sBAAsBA,SAAS,EAAQ,CAAE,QAAQ,KAAK,CAAA;AAAA,EACtD,QAAA,EAAUN,KAAE,CAAK,CAAC,KAAA,EAAO,QAAQ,OAAO,CAAC,CAAA,CAAE,OAAA,CAAQ,KAAK;AAC1D,CAAC;AAGgCJ,MAAE,CAAO;AAAA,EACxC,OAAA,EAASM,OAAE,EAAQ;AAAA,EACnB,OAAA,EAASJ,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,EAC7B,IAAA,EAAMK,GAAE,EAAI,CAAE,QAAA,EAAS;AAAA,EACvB,QAAQJ,KAAE,CAAMD,MAAE,EAAQ,EAAE,QAAA,EAAS;AAAA,EACrC,UAAA,EAAYF,MAAE,CAAO;AAAA,IACnB,IAAA,EAAMC,MAAE,EAAO;AAAA,IACf,KAAA,EAAOA,MAAE,EAAO;AAAA,IAChB,KAAA,EAAOA,MAAE,EAAO;AAAA,IAChB,KAAA,EAAOA,MAAE;AAAO,GACjB,EAAE,QAAA;AACL,CAAC;AAGM,MAAM,WAAA,GAAcD,MAAE,CAAO;AAAA,EAClC,IAAA,EAAME,MAAE,EAAO;AAAA,EACf,MAAA,EAAQC,KAAE,CAAMH,MAAE,CAAO;AAAA,IACvB,KAAA,EAAOE,MAAE,EAAO;AAAA,IAChB,KAAA,EAAOD,MAAE,EAAO;AAAA,IAChB,KAAA,EAAOC,MAAE,EAAO,CAAE,QAAA;AAAS,GAC5B,CAAC;AACJ,CAAC,CAAA;AAEyCF,MAAE,CAAO;AAAA,EACjD,OAAA,EAASM,OAAE,EAAQ;AAAA,EACnB,IAAA,EAAMN,MAAE,CAAO;AAAA,IACb,SAAA,EAAWG,KAAE,CAAM,kBAAkB,CAAA;AAAA,IACrC,UAAA,EAAYH,MAAE,CAAO;AAAA,MACnB,IAAA,EAAMC,MAAE,EAAO;AAAA,MACf,QAAA,EAAUA,MAAE,EAAO;AAAA,MACnB,KAAA,EAAOA,MAAE,EAAO;AAAA,MAChB,KAAA,EAAOA,MAAE;AAAO,KACjB,CAAA;AAAA,IACD,MAAA,EAAQE,KAAE,CAAM,WAAW,EAAE,QAAA,EAAS;AAAA,IACtC,YAAA,EAAcH,MAAE,CAAO;AAAA,MACrB,eAAA,EAAiBC,MAAE,EAAO;AAAA,MAC1B,UAAA,EAAYO,MAAE,CAAON,QAAS,EAAGD,QAAU,CAAA;AAAA,MAC3C,mBAAA,EAAqBA,MAAE,EAAO,CAAE,QAAA,EAAS;AAAA,MACzC,cAAA,EAAgBE,KAAE,CAAMH,MAAE,CAAO;AAAA,QAC/B,GAAA,EAAKE,MAAE,EAAO;AAAA,QACd,KAAA,EAAOD,MAAE;AAAO,OACjB,CAAC,CAAA,CAAE,QAAA;AAAS,KACd,EAAE,QAAA;AAAS,GACb,CAAA;AAAA,EACD,OAAA,EAASC,MAAE,EAAO,CAAE,QAAA;AACtB,CAAC;AAEwCF,MAAE,CAAO;AAAA,EAChD,OAAA,EAASM,OAAE,EAAQ;AAAA,EACnB,IAAA,EAAMN,MAAE,CAAO;AAAA,IACb,QAAA,EAAU,kBAAA;AAAA,IACV,iBAAA,EAAmBG,KAAE,CAAM,kBAAA,CAAmB,IAAA,CAAK;AAAA,MACjD,EAAA,EAAI,IAAA;AAAA,MACJ,IAAA,EAAM,IAAA;AAAA,MACN,QAAA,EAAU,IAAA;AAAA,MACV,WAAA,EAAa;AAAA,KACd,CAAC,CAAA,CAAE,QAAA,EAAS;AAAA,IACb,eAAA,EAAiBH,MAAE,CAAO;AAAA,MACxB,kBAAA,EAAoBC,MAAE,EAAO;AAAA,MAC7B,mBAAA,EAAqBO,MAAE,CAAON,QAAS,EAAGK,KAAO;AAAA,KAClD,EAAE,QAAA;AAAS,GACb,CAAA;AAAA,EACD,OAAA,EAASL,MAAE,EAAO,CAAE,QAAA;AACtB,CAAC;AA8CM,MAAM,eAAA,GAAkB,CAAI,MAAA,EAAwB,IAAA,KAAqF;AAC9I,EAAA,IAAI;AACF,IAAA,MAAM,MAAA,GAAS,MAAA,CAAO,KAAA,CAAM,IAAI,CAAA;AAChC,IAAA,OAAO,EAAE,OAAA,EAAS,IAAA,EAAM,IAAA,EAAM,MAAA,EAAO;AAAA,EACvC,SAAS,KAAA,EAAO;AACd,IAAA,IAAI,KAAA,YAAiBS,QAAE,EAAU;AAC/B,MAAA,OAAO;AAAA,QACL,OAAA,EAAS,KAAA;AAAA,QACT,MAAA,EAAQ,KAAA,CAAM,MAAA,CAAO,GAAA,CAAI,CAAC,GAAA,KAAa,CAAA,EAAG,GAAA,CAAI,IAAA,CAAK,KAAK,GAAG,CAAC,CAAA,EAAA,EAAK,GAAA,CAAI,OAAO,CAAA,CAAE;AAAA,OAChF;AAAA,IACF;AACA,IAAA,OAAO;AAAA,MACL,OAAA,EAAS,KAAA;AAAA,MACT,MAAA,EAAQ,CAAC,sBAAsB;AAAA,KACjC;AAAA,EACF;AACF;AAEO,MAAM,mBAAA,GAAsB,CAAC,GAAA,EAAU,MAAA,KAAwB;AACpE,EAAA,MAAM,SAAS,MAAA,CAAO,WAAA,CAAY,GAAA,CAAI,YAAA,CAAa,SAAS,CAAA;AAC5D,EAAA,OAAO,eAAA,CAAgB,QAAQ,MAAM,CAAA;AACvC;;;;"}