{"version":3,"file":"webhook_C4BbeMYT.mjs","sources":["../../../src/pages/api/integrations/webhook.ts"],"sourcesContent":["import type { APIRoute } from 'astro';\r\n\r\nexport const POST: APIRoute = async ({ request, locals }) => {\r\n  try {\r\n    const runtime = locals.runtime as any;\r\n    const env = runtime.env;\r\n    \r\n    // Validate request\r\n    const data = await request.json() as any;\r\n    \r\n    if (!data || typeof data !== 'object') {\r\n      return new Response(JSON.stringify({ error: 'Invalid request body' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    const { webhookUrl, webhookMethod, webhookHeaders } = data;\r\n    \r\n    if (!webhookUrl || !webhookMethod) {\r\n      return new Response(JSON.stringify({ error: 'URL and method are required' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    // Validate URL format\r\n    try {\r\n      new URL(webhookUrl);\r\n    } catch {\r\n      return new Response(JSON.stringify({ error: 'Invalid webhook URL' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    // Validate method\r\n    const allowedMethods = ['POST', 'PUT', 'PATCH'];\r\n    if (!allowedMethods.includes(webhookMethod.toUpperCase())) {\r\n      return new Response(JSON.stringify({ error: 'Invalid HTTP method' }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    // Parse and validate headers if provided\r\n    let parsedHeaders = {};\r\n    if (webhookHeaders) {\r\n      try {\r\n        parsedHeaders = JSON.parse(webhookHeaders);\r\n        if (typeof parsedHeaders !== 'object' || Array.isArray(parsedHeaders)) {\r\n          throw new Error('Headers must be a JSON object');\r\n        }\r\n      } catch (error) {\r\n        return new Response(JSON.stringify({ error: 'Invalid headers JSON format' }), {\r\n          status: 400,\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Store configuration\r\n    const config = {\r\n      url: webhookUrl,\r\n      method: webhookMethod.toUpperCase(),\r\n      headers: parsedHeaders,\r\n      configured: true,\r\n      updatedAt: new Date().toISOString()\r\n    };\r\n    \r\n    await env.CACHE_KV.put('integration:webhook:config', JSON.stringify(config), {\r\n      expirationTtl: 365 * 24 * 60 * 60 // 1 year\r\n    });\r\n    \r\n    // Test the webhook with a sample payload\r\n    try {\r\n      const testPayload = {\r\n        test: true,\r\n        message: 'IPLC Forms webhook integration test',\r\n        timestamp: new Date().toISOString(),\r\n        formTitle: 'Test Form',\r\n        submissionId: 'test-' + Date.now()\r\n      };\r\n      \r\n      const testResponse = await fetch(webhookUrl, {\r\n        method: webhookMethod.toUpperCase(),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...parsedHeaders\r\n        },\r\n        body: JSON.stringify(testPayload)\r\n      });\r\n      \r\n      if (!testResponse.ok) {\r\n        throw new Error(`Webhook test failed with status: ${testResponse.status}`);\r\n      }\r\n    } catch (error) {\r\n      return new Response(JSON.stringify({ \r\n        error: 'Failed to test webhook. Please check your URL and try again.' \r\n      }), {\r\n        status: 400,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    return new Response(JSON.stringify({ \r\n      message: 'Webhook configuration saved and tested successfully!' \r\n    }), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error saving webhook configuration:', error);\r\n    return new Response(JSON.stringify({ \r\n      error: 'Failed to save configuration' \r\n    }), {\r\n      status: 500,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n};\r\n\r\nexport const GET: APIRoute = async ({ locals }) => {\r\n  try {\r\n    const runtime = locals.runtime as any;\r\n    const env = runtime.env;\r\n    \r\n    const config = await env.CACHE_KV.get('integration:webhook:config');\r\n    if (!config) {\r\n      return new Response(JSON.stringify({ configured: false }), {\r\n        status: 200,\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n    }\r\n    \r\n    return new Response(config, {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    \r\n  } catch (error) {\r\n    console.error('Error fetching webhook configuration:', error);\r\n    return new Response(JSON.stringify({ configured: false }), {\r\n      status: 200,\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n  }\r\n};\r\n\r\n// Helper function to send webhook for form submission\r\nexport async function sendWebhook(env: any, formTitle: string, submissionId: string | number, formData: any) {\r\n  const configStr = await env.get('integration:webhook:config');\r\n  if (!configStr) {\r\n    return null; // Webhook not configured\r\n  }\r\n  \r\n  const config = JSON.parse(configStr);\r\n  \r\n  const payload = {\r\n    timestamp: new Date().toISOString(),\r\n    event: 'form_submission',\r\n    formTitle: formTitle,\r\n    submissionId: submissionId,\r\n    data: formData\r\n  };\r\n  \r\n  const response = await fetch(config.url, {\r\n    method: config.method,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...config.headers\r\n    },\r\n    body: JSON.stringify(payload)\r\n  });\r\n  \r\n  if (!response.ok) {\r\n    throw new Error(`Webhook failed: ${response.status}`);\r\n  }\r\n  \r\n  return { success: true };\r\n}"],"names":[],"mappings":"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"}