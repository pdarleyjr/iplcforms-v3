{"version":3,"file":"NotebookLMInterface_BEsirrAT.mjs","sources":["../../../src/components/ui/scroll-area.tsx","../../../src/components/ui/dialog.tsx","../../../src/components/ui/dropdown-menu.tsx","../../../src/components/chat/NotebookLMInterface.tsx"],"sourcesContent":["import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }","import * as React from \"react\";\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport { X } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n));\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogHeader.displayName = \"DialogHeader\";\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = \"DialogFooter\";\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n","import * as React from \"react\";\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\";\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root;\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group;\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal;\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub;\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n));\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName;\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName;\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n));\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n));\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName;\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n));\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean;\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className,\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\";\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button } from '../ui/button';\r\nimport { Input } from '../ui/input';\r\nimport { Card } from '../ui/card';\r\nimport { ScrollArea } from '../ui/scroll-area';\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '../ui/dialog';\r\nimport { Alert, AlertDescription, AlertTitle } from '../ui/alert';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\r\nimport {\r\n  Send,\r\n  Upload,\r\n  FileText,\r\n  Trash2,\r\n  Loader2,\r\n  MessageSquare,\r\n  Bot,\r\n  User,\r\n  Plus,\r\n  Clock,\r\n  Paperclip,\r\n  ChevronRight,\r\n  Eye,\r\n  EyeOff,\r\n  X,\r\n  Share2,\r\n  Check,\r\n  Copy,\r\n  Download,\r\n  AlertCircle,\r\n  Search,\r\n  FolderOpen,\r\n  FileImage,\r\n  FileCode,\r\n  FilePlus,\r\n  BookOpen,\r\n  Brain,\r\n  Sparkles,\r\n  SplitSquareVertical\r\n} from 'lucide-react';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '../ui/dropdown-menu';\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: 'user' | 'assistant';\r\n  content: string;\r\n  timestamp: Date;\r\n  streaming?: boolean;\r\n  citations?: Citation[];\r\n}\r\n\r\ninterface Document {\r\n  id: string;\r\n  name: string;\r\n  size: number;\r\n  type: string;\r\n  uploadedAt: Date;\r\n  chunks?: number;\r\n  enabled?: boolean;\r\n  preview?: string;\r\n}\r\n\r\ninterface Citation {\r\n  id: number;\r\n  documentName: string;\r\n  text: string;\r\n  score: number;\r\n}\r\n\r\ninterface Chunk {\r\n  id: number;\r\n  documentName: string;\r\n  text: string;\r\n  score: number;\r\n}\r\n\r\ninterface Conversation {\r\n  id: string;\r\n  title: string;\r\n  lastMessage: string;\r\n  timestamp: Date;\r\n}\r\n\r\nexport function NotebookLMInterface() {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [documents, setDocuments] = useState<Document[]>([]);\r\n  const [conversations, setConversations] = useState<Conversation[]>([]);\r\n  const [currentConversationId, setCurrentConversationId] = useState<string | null>(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [selectedDocument, setSelectedDocument] = useState<Document | null>(null);\r\n  const [highlightedChunk, setHighlightedChunk] = useState<Chunk | null>(null);\r\n  const [showChunkModal, setShowChunkModal] = useState(false);\r\n  const [currentChunks, setCurrentChunks] = useState<Chunk[]>([]);\r\n  const [shareModalOpen, setShareModalOpen] = useState(false);\r\n  const [shareUrl, setShareUrl] = useState('');\r\n  const [sharingMessageId, setSharingMessageId] = useState<string | null>(null);\r\n  const [copySuccess, setCopySuccess] = useState(false);\r\n  const [aiError, setAiError] = useState<string | null>(null);\r\n  const [isStreaming, setIsStreaming] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('sources');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [showDocumentPreview, setShowDocumentPreview] = useState(false);\r\n  const [documentContent, setDocumentContent] = useState<string>('');\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Load conversations on mount\r\n  useEffect(() => {\r\n    loadConversations();\r\n    loadDocuments();\r\n  }, []);\r\n\r\n  // Type guards for unknown JSON payloads\r\n  function isConversationList(data: unknown): data is { conversations: Conversation[] } {\r\n    return !!data && typeof data === 'object' && Array.isArray((data as any).conversations);\r\n  }\r\n  function isDocumentsList(data: unknown): data is { documents: Document[] } {\r\n    return !!data && typeof data === 'object' && Array.isArray((data as any).documents);\r\n  }\r\n  function isConversationDetail(data: unknown): data is { messages: Message[]; documents: Document[] } {\r\n    return !!data && typeof data === 'object' && Array.isArray((data as any).messages) && Array.isArray((data as any).documents);\r\n  }\r\n  function isUploadResponse(data: unknown): data is { documents: Document[]; conversationId?: string } {\r\n    return !!data && typeof data === 'object' && Array.isArray((data as any).documents);\r\n  }\r\n\r\n  const loadConversations = async () => {\r\n    try {\r\n      const response = await fetch('/api/chat/conversations');\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        if (isConversationList(data)) {\r\n          setConversations(data.conversations);\r\n        } else {\r\n          console.warn('Unexpected conversations payload');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load conversations:', error);\r\n    }\r\n  };\r\n\r\n  const loadDocuments = async () => {\r\n    try {\r\n      const response = await fetch('/api/chat/documents');\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        if (isDocumentsList(data)) {\r\n          setDocuments(data.documents);\r\n        } else {\r\n          console.warn('Unexpected documents payload');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load documents:', error);\r\n    }\r\n  };\r\n\r\n  const loadConversation = async (conversationId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/chat/conversations/${conversationId}`);\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        if (isConversationDetail(data)) {\r\n          setMessages(data.messages);\r\n          setDocuments(data.documents);\r\n          setCurrentConversationId(conversationId);\r\n        } else {\r\n          console.warn('Unexpected conversation detail payload');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load conversation:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files;\r\n    if (!files || files.length === 0) return;\r\n\r\n    setIsUploading(true);\r\n    const formData = new FormData();\r\n    \r\n    Array.from(files).forEach(file => {\r\n      formData.append('files', file);\r\n    });\r\n\r\n    if (currentConversationId) {\r\n      formData.append('conversationId', currentConversationId);\r\n    }\r\n\r\n    try {\r\n      const response = await fetch('/api/chat/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        if (isUploadResponse(data)) {\r\n          // Add documents with enabled flag set to true by default\r\n          const newDocs = data.documents.map((doc) => ({ ...doc, enabled: true }));\r\n          setDocuments(prev => [...prev, ...newDocs]);\r\n\r\n          // Create new conversation if needed\r\n          if (!currentConversationId && data.conversationId) {\r\n            setCurrentConversationId(data.conversationId);\r\n            await loadConversations();\r\n          }\r\n        } else {\r\n          console.warn('Unexpected upload response payload');\r\n        }\r\n      } else {\r\n        console.error('Upload failed:', await response.text());\r\n      }\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n    } finally {\r\n      setIsUploading(false);\r\n      if (fileInputRef.current) {\r\n        fileInputRef.current.value = '';\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    // Prevent sending if already loading or streaming\r\n    if (!inputValue.trim() || isLoading || isStreaming) return;\r\n\r\n    // Store the message before clearing the input\r\n    const messageToSend = inputValue.trim();\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      role: 'user',\r\n      content: messageToSend,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue('');\r\n    setIsLoading(true);\r\n    setIsStreaming(true);\r\n    setAiError(null); // Clear any previous errors\r\n\r\n    const assistantMessage: Message = {\r\n      id: (Date.now() + 1).toString(),\r\n      role: 'assistant',\r\n      content: '',\r\n      timestamp: new Date(),\r\n      streaming: true,\r\n    };\r\n\r\n    setMessages(prev => [...prev, assistantMessage]);\r\n\r\n    try {\r\n      // Only send enabled documents\r\n      const enabledDocumentIds = documents\r\n        .filter(doc => doc.enabled !== false)\r\n        .map(doc => doc.id);\r\n\r\n      const response = await fetch('/api/chat/query', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          message: messageToSend,\r\n          conversationId: currentConversationId,\r\n          documentIds: enabledDocumentIds,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      // Handle streaming response\r\n      const reader = response.body?.getReader();\r\n      const decoder = new TextDecoder();\r\n\r\n      if (reader) {\r\n        let accumulatedContent = '';\r\n        let citations: Citation[] = [];\r\n        let buffer = '';\r\n\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) break;\r\n\r\n          // Decode the chunk and add to buffer\r\n          buffer += decoder.decode(value, { stream: true });\r\n          \r\n          // Split by double newline (SSE message separator)\r\n          const messages = buffer.split('\\n\\n');\r\n          \r\n          // Keep the last part in buffer (might be incomplete)\r\n          buffer = messages.pop() || '';\r\n\r\n          for (const message of messages) {\r\n            // Skip empty messages\r\n            if (!message.trim()) continue;\r\n            \r\n            // Process each line in the message\r\n            const lines = message.split('\\n');\r\n            for (const line of lines) {\r\n              if (line.startsWith('data: ')) {\r\n                const dataStr = line.slice(6).trim();\r\n                \r\n                // Skip empty data or ping messages\r\n                if (!dataStr || dataStr === '[DONE]') continue;\r\n                \r\n                try {\r\n                  const data = JSON.parse(dataStr);\r\n                  \r\n                  if (data.chunks) {\r\n                    // Store chunks for citation references\r\n                    setCurrentChunks(data.chunks);\r\n                    citations = data.chunks;\r\n                  }\r\n                  \r\n                  if (data.content) {\r\n                    accumulatedContent += data.content;\r\n                    setMessages(prev =>\r\n                      prev.map(msg =>\r\n                        msg.id === assistantMessage.id\r\n                          ? { ...msg, content: accumulatedContent, citations }\r\n                          : msg\r\n                      )\r\n                    );\r\n                  }\r\n\r\n                  if (data.conversationId && !currentConversationId) {\r\n                    setCurrentConversationId(data.conversationId);\r\n                    await loadConversations();\r\n                  }\r\n                  \r\n                  if (data.error) {\r\n                    console.error('SSE Error:', data.error);\r\n                    setMessages(prev =>\r\n                      prev.map(msg =>\r\n                        msg.id === assistantMessage.id\r\n                          ? { ...msg, content: data.error || 'An error occurred', streaming: false }\r\n                          : msg\r\n                      )\r\n                    );\r\n                    return;\r\n                  }\r\n                } catch (e) {\r\n                  console.error('Failed to parse SSE data:', e, 'Data:', dataStr);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Process any remaining buffer\r\n        if (buffer.trim()) {\r\n          const lines = buffer.split('\\n');\r\n          for (const line of lines) {\r\n            if (line.startsWith('data: ')) {\r\n              const dataStr = line.slice(6).trim();\r\n              if (dataStr && dataStr !== '[DONE]') {\r\n                try {\r\n                  const data = JSON.parse(dataStr);\r\n                  if (data.content) {\r\n                    accumulatedContent += data.content;\r\n                  }\r\n                } catch (e) {\r\n                  console.error('Failed to parse final SSE data:', e);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Mark streaming as complete\r\n        setMessages(prev =>\r\n          prev.map(msg =>\r\n            msg.id === assistantMessage.id\r\n              ? { ...msg, content: accumulatedContent || 'No response received', streaming: false }\r\n              : msg\r\n          )\r\n        );\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Chat error:', error);\r\n      \r\n      let errorMessage = 'Sorry, an error occurred. Please try again.';\r\n      let showErrorBanner = false;\r\n      \r\n      // Check for specific AI service errors\r\n      if (error instanceof Error) {\r\n        if (error.message.includes('workers-ai-failed') ||\r\n            error.message.includes('AI service is at capacity') ||\r\n            error.message.includes('Rate limit exceeded') ||\r\n            error.message.includes('rate limit') ||\r\n            error.message.includes('Daily quota limit reached') ||\r\n            error.message.includes('AI service access denied') ||\r\n            error.message.includes('AI service is temporarily unavailable') ||\r\n            error.message.includes('AI service is not properly configured') ||\r\n            error.message.includes('Concurrency limit') ||\r\n            error.message.includes('concurrent')) {\r\n          // Extract the user-friendly message part (before the dash)\r\n          const parts = error.message.split(' - ');\r\n          errorMessage = parts[0] || error.message;\r\n          showErrorBanner = true;\r\n          setAiError(errorMessage);\r\n        }\r\n      }\r\n      \r\n      setMessages(prev =>\r\n        prev.map(msg =>\r\n          msg.id === assistantMessage.id\r\n            ? { ...msg, content: showErrorBanner ? '' : errorMessage, streaming: false }\r\n            : msg\r\n        )\r\n      );\r\n      \r\n      // Remove empty assistant message if we're showing the banner\r\n      if (showErrorBanner) {\r\n        setMessages(prev => prev.filter(msg => msg.id !== assistantMessage.id));\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n      setIsStreaming(false);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDocument = async (documentId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/chat/documents/${documentId}`, {\r\n        method: 'DELETE',\r\n      });\r\n\r\n      if (response.ok) {\r\n        setDocuments(prev => prev.filter(doc => doc.id !== documentId));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete document:', error);\r\n    }\r\n  };\r\n\r\n  const handleNewConversation = () => {\r\n    setCurrentConversationId(null);\r\n    setMessages([]);\r\n    setDocuments([]);\r\n  };\r\n\r\n  const formatFileSize = (bytes: number): string => {\r\n    if (bytes < 1024) return bytes + ' B';\r\n    if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\r\n    return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\r\n  };\r\n\r\n  const toggleDocumentEnabled = (documentId: string) => {\r\n    setDocuments(prev =>\r\n      prev.map(doc =>\r\n        doc.id === documentId\r\n          ? { ...doc, enabled: !doc.enabled }\r\n          : doc\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleCitationClick = (citationNumber: number) => {\r\n    const chunk = currentChunks.find(c => c.id === citationNumber);\r\n    if (chunk) {\r\n      setHighlightedChunk(chunk);\r\n      setShowChunkModal(true);\r\n    }\r\n  };\r\n\r\n  const renderMessageWithCitations = (content: string, citations?: Citation[]) => {\r\n    if (!citations || citations.length === 0) {\r\n      return <span className=\"whitespace-pre-wrap\">{content}</span>;\r\n    }\r\n\r\n    // Parse content for citation markers ^[n]\r\n    const parts = content.split(/(\\^\\[\\d+\\])/g);\r\n    \r\n    return (\r\n      <span className=\"whitespace-pre-wrap\">\r\n        {parts.map((part, index) => {\r\n          const citationMatch = part.match(/\\^\\[(\\d+)\\]/);\r\n          if (citationMatch) {\r\n            const citationNumber = parseInt(citationMatch[1]);\r\n            return (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleCitationClick(citationNumber)}\r\n                className=\"inline-flex items-center justify-center w-5 h-5 text-xs rounded-full bg-primary/20 text-primary hover:bg-primary/30 transition-colors align-super ml-0.5\"\r\n                title={`View source ${citationNumber}`}\r\n              >\r\n                {citationNumber}\r\n              </button>\r\n            );\r\n          }\r\n          return <span key={index}>{part}</span>;\r\n        })}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const handleShareMessage = async (messageId: string) => {\r\n    const messageIndex = messages.findIndex(m => m.id === messageId);\r\n    if (messageIndex === -1) return;\r\n\r\n    // Find the user message (question) for this assistant response\r\n    let questionIndex = messageIndex;\r\n    if (messages[messageIndex].role === 'assistant') {\r\n      // Look backwards for the nearest user message\r\n      for (let i = messageIndex - 1; i >= 0; i--) {\r\n        if (messages[i].role === 'user') {\r\n          questionIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    const question = messages[questionIndex].content;\r\n    const answer = messages[messageIndex].role === 'assistant'\r\n      ? messages[messageIndex].content\r\n      : messages[messageIndex + 1]?.content || '';\r\n\r\n    setSharingMessageId(messageId);\r\n\r\n    try {\r\n      const response = await fetch('/api/chat/share', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          question,\r\n          answer,\r\n          citations: messages[messageIndex].citations || currentChunks\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        const isShare = (v: unknown): v is { shareUrl: string } =>\r\n          !!v && typeof v === 'object' && typeof (v as any).shareUrl === 'string';\r\n        if (isShare(data)) {\r\n          setShareUrl(data.shareUrl);\r\n          setShareModalOpen(true);\r\n        } else {\r\n          console.warn('Unexpected share payload');\r\n        }\r\n      } else {\r\n        console.error('Failed to create share link');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sharing message:', error);\r\n    } finally {\r\n      setSharingMessageId(null);\r\n    }\r\n  };\r\n\r\n  const handleCopyShareLink = async () => {\r\n    try {\r\n      await navigator.clipboard.writeText(shareUrl);\r\n      setCopySuccess(true);\r\n      setTimeout(() => setCopySuccess(false), 2000);\r\n    } catch (error) {\r\n      console.error('Failed to copy:', error);\r\n    }\r\n  };\r\n\r\n  const handleExportConversation = async (format: 'markdown' | 'json') => {\r\n    if (!currentConversationId || messages.length === 0) return;\r\n\r\n    try {\r\n      const response = await fetch('/api/chat/export', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          conversationId: currentConversationId,\r\n          format\r\n        })\r\n      });\r\n\r\n      if (response.ok) {\r\n        const blob = await response.blob();\r\n        const url = window.URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n        a.download = `conversation-${currentConversationId}.${format === 'markdown' ? 'md' : 'json'}`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        document.body.removeChild(a);\r\n      } else {\r\n        console.error('Failed to export conversation');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error exporting conversation:', error);\r\n    }\r\n  };\r\n\r\n  const handleDocumentClick = async (document: Document) => {\r\n    setSelectedDocument(document);\r\n    setShowDocumentPreview(true);\r\n    \r\n    // Fetch document content for preview\r\n    try {\r\n      const response = await fetch(`/api/chat/documents/${document.id}`);\r\n      if (response.ok) {\r\n        const data: unknown = await response.json();\r\n        const isDocContent = (v: unknown): v is { content?: string } =>\r\n          !!v && typeof v === 'object' && ('content' in (v as any) ? typeof (v as any).content === 'string' || typeof (v as any).content === 'undefined' : true);\r\n        if (isDocContent(data)) {\r\n          setDocumentContent((data as any).content || 'No preview available');\r\n        } else {\r\n          console.warn('Unexpected document content payload');\r\n          setDocumentContent('No preview available');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load document content:', error);\r\n      setDocumentContent('Failed to load document content');\r\n    }\r\n  };\r\n\r\n  const getFileIcon = (fileType: string) => {\r\n    if (fileType.includes('image')) return FileImage;\r\n    if (fileType.includes('code') || fileType.includes('json')) return FileCode;\r\n    return FileText;\r\n  };\r\n\r\n  const filteredDocuments = documents.filter(doc =>\r\n    doc.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"flex h-full\">\r\n      {/* Left Panel - Sources & Documents */}\r\n      <div className=\"w-96 border-r bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 flex flex-col\">\r\n        <div className=\"p-4 border-b\">\r\n          <div className=\"flex items-center gap-2 mb-4\">\r\n            <BookOpen className=\"w-5 h-5 text-primary\" />\r\n            <h2 className=\"font-semibold\">NotebookLM</h2>\r\n          </div>\r\n          \r\n          <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n            <TabsList className=\"grid w-full grid-cols-3\">\r\n              <TabsTrigger value=\"sources\">Sources</TabsTrigger>\r\n              <TabsTrigger value=\"notebook\">Notebook</TabsTrigger>\r\n              <TabsTrigger value=\"history\">History</TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"sources\" className=\"mt-4\">\r\n              <div className=\"space-y-3\">\r\n                <div className=\"relative\">\r\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\r\n                  <Input\r\n                    placeholder=\"Search documents...\"\r\n                    value={searchQuery}\r\n                    onChange={(e) => setSearchQuery(e.target.value)}\r\n                    className=\"pl-9\"\r\n                  />\r\n                </div>\r\n\r\n                <Button\r\n                  className=\"w-full gradient-metallic-primary\"\r\n                  onClick={() => fileInputRef.current?.click()}\r\n                  disabled={isUploading}\r\n                >\r\n                  {isUploading ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                      Uploading...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FilePlus className=\"w-4 h-4 mr-2\" />\r\n                      Add Sources\r\n                    </>\r\n                  )}\r\n                </Button>\r\n\r\n                <ScrollArea className=\"h-[calc(100vh-250px)]\">\r\n                  <div className=\"space-y-2\">\r\n                    {filteredDocuments.length === 0 ? (\r\n                      <div className=\"text-center text-muted-foreground py-8\">\r\n                        <FolderOpen className=\"w-8 h-8 mx-auto mb-3 opacity-50\" />\r\n                        <p className=\"text-sm\">No sources uploaded</p>\r\n                        <p className=\"text-xs mt-1\">Add documents to get started</p>\r\n                      </div>\r\n                    ) : (\r\n                      filteredDocuments.map((doc) => {\r\n                        const FileIcon = getFileIcon(doc.type);\r\n                        return (\r\n                          <Card\r\n                            key={doc.id}\r\n                            className={`p-3 cursor-pointer transition-all hover:shadow-md ${\r\n                              selectedDocument?.id === doc.id ? 'ring-2 ring-primary' : ''\r\n                            }`}\r\n                            onClick={() => handleDocumentClick(doc)}\r\n                          >\r\n                            <div className=\"flex items-start gap-3\">\r\n                              <FileIcon className=\"w-5 h-5 text-muted-foreground flex-shrink-0 mt-0.5\" />\r\n                              <div className=\"flex-1 min-w-0\">\r\n                                <div className=\"flex items-start justify-between gap-2\">\r\n                                  <div className=\"flex-1 min-w-0\">\r\n                                    <p className=\"font-medium text-sm truncate\">{doc.name}</p>\r\n                                    <p className=\"text-xs text-muted-foreground\">\r\n                                      {formatFileSize(doc.size)} • {doc.chunks} chunks\r\n                                    </p>\r\n                                    <p className=\"text-xs text-muted-foreground mt-1\">\r\n                                      Uploaded {new Date(doc.uploadedAt).toLocaleDateString()}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div className=\"flex items-center gap-1\">\r\n                                    <Button\r\n                                      variant=\"ghost\"\r\n                                      size=\"icon\"\r\n                                      className=\"w-8 h-8\"\r\n                                      onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        toggleDocumentEnabled(doc.id);\r\n                                      }}\r\n                                      title={doc.enabled ? 'Disable document' : 'Enable document'}\r\n                                    >\r\n                                      {doc.enabled ? (\r\n                                        <Eye className=\"w-4 h-4\" />\r\n                                      ) : (\r\n                                        <EyeOff className=\"w-4 h-4 text-muted-foreground\" />\r\n                                      )}\r\n                                    </Button>\r\n                                    <Button\r\n                                      variant=\"ghost\"\r\n                                      size=\"icon\"\r\n                                      className=\"w-8 h-8 hover:text-destructive\"\r\n                                      onClick={(e) => {\r\n                                        e.stopPropagation();\r\n                                        handleDeleteDocument(doc.id);\r\n                                      }}\r\n                                    >\r\n                                      <Trash2 className=\"w-4 h-4\" />\r\n                                    </Button>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Card>\r\n                        );\r\n                      })\r\n                    )}\r\n                  </div>\r\n                </ScrollArea>\r\n              </div>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"notebook\" className=\"mt-4\">\r\n              <div className=\"text-center text-muted-foreground py-8\">\r\n                <Brain className=\"w-8 h-8 mx-auto mb-3 opacity-50\" />\r\n                <p className=\"text-sm\">Notebook coming soon</p>\r\n                <p className=\"text-xs mt-1\">Your AI-generated notes and insights</p>\r\n              </div>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"history\" className=\"mt-4\">\r\n              <ScrollArea className=\"h-[calc(100vh-250px)]\">\r\n                <div className=\"space-y-2\">\r\n                  {conversations.length === 0 ? (\r\n                    <div className=\"text-center text-muted-foreground py-8\">\r\n                      <MessageSquare className=\"w-8 h-8 mx-auto mb-3 opacity-50\" />\r\n                      <p className=\"text-sm\">No conversations yet</p>\r\n                    </div>\r\n                  ) : (\r\n                    conversations.map((conv) => (\r\n                      <button\r\n                        key={conv.id}\r\n                        onClick={() => loadConversation(conv.id)}\r\n                        className={`w-full text-left p-3 rounded-lg transition-all group relative ${\r\n                          conv.id === currentConversationId\r\n                            ? 'bg-gradient-to-r from-gradient-metal-start to-gradient-metal-end text-white shadow-sm'\r\n                            : 'hover:bg-muted/80'\r\n                        }`}\r\n                      >\r\n                        <p className={`font-medium text-sm truncate ${\r\n                          conv.id === currentConversationId ? 'text-white' : ''\r\n                        }`}>\r\n                          {conv.title}\r\n                        </p>\r\n                        <p className={`text-xs truncate mt-1 ${\r\n                          conv.id === currentConversationId\r\n                            ? 'text-white/80'\r\n                            : 'text-muted-foreground'\r\n                        }`}>\r\n                          {conv.lastMessage}\r\n                        </p>\r\n                        <div className={`flex items-center gap-1 mt-1 text-xs ${\r\n                          conv.id === currentConversationId\r\n                            ? 'text-white/60'\r\n                            : 'text-muted-foreground'\r\n                        }`}>\r\n                          <Clock className=\"w-3 h-3\" />\r\n                          {new Date(conv.timestamp).toLocaleDateString()}\r\n                        </div>\r\n                      </button>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              </ScrollArea>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </div>\r\n\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          multiple\r\n          accept=\".txt,.pdf,.doc,.docx,.md,.json,.csv\"\r\n          onChange={handleFileUpload}\r\n          className=\"hidden\"\r\n        />\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"flex-1 flex flex-col\">\r\n        {/* Header Bar */}\r\n        <div className=\"border-b px-6 py-3 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <Sparkles className=\"w-5 h-5 text-primary\" />\r\n              <h2 className=\"font-semibold\">AI Assistant</h2>\r\n              {documents.filter(d => d.enabled).length > 0 && (\r\n                <span className=\"text-sm text-muted-foreground\">\r\n                  ({documents.filter(d => d.enabled).length} sources active)\r\n                </span>\r\n              )}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                onClick={handleNewConversation}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n              >\r\n                <Plus className=\"w-4 h-4 mr-2\" />\r\n                New Chat\r\n              </Button>\r\n              \r\n              {/* Export dropdown */}\r\n              {currentConversationId && messages.length > 0 && (\r\n                <DropdownMenu>\r\n                  <DropdownMenuTrigger asChild>\r\n                    <Button variant=\"ghost\" size=\"icon\">\r\n                      <Download className=\"w-4 h-4\" />\r\n                    </Button>\r\n                  </DropdownMenuTrigger>\r\n                  <DropdownMenuContent align=\"end\">\r\n                    <DropdownMenuItem onClick={() => handleExportConversation('markdown')}>\r\n                      <FileText className=\"w-4 h-4 mr-2\" />\r\n                      Export as Markdown\r\n                    </DropdownMenuItem>\r\n                    <DropdownMenuItem onClick={() => handleExportConversation('json')}>\r\n                      <FileText className=\"w-4 h-4 mr-2\" />\r\n                      Export as JSON\r\n                    </DropdownMenuItem>\r\n                  </DropdownMenuContent>\r\n                </DropdownMenu>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chat Messages */}\r\n        <ScrollArea className=\"flex-1 px-6\">\r\n          <div className=\"max-w-3xl mx-auto py-6\">\r\n            {/* AI Error Banner */}\r\n            {aiError && (\r\n              <Alert variant=\"warning\" className=\"mb-4\">\r\n                <AlertCircle className=\"h-4 w-4\" />\r\n                <AlertTitle>AI Service Issue</AlertTitle>\r\n                <AlertDescription>\r\n                  {aiError}\r\n                  {(aiError.includes('quota') || aiError.toLowerCase().includes('rate limit')) && (\r\n                    <p className=\"mt-2 text-sm\">\r\n                      Free tier limits: 100k requests/day, 20 requests/minute, 2 concurrent GPU jobs. Consider upgrading for better performance.\r\n                    </p>\r\n                  )}\r\n                  {aiError.includes('capacity') && (\r\n                    <p className=\"mt-2 text-sm\">\r\n                      The AI service is experiencing high demand. Please wait a moment and try again.\r\n                    </p>\r\n                  )}\r\n                  {(aiError.toLowerCase().includes('concurrent') || aiError.includes('Concurrency limit')) && (\r\n                    <p className=\"mt-2 text-sm\">\r\n                      The free tier allows only 2 concurrent AI requests. Your request has been queued and will process when a slot becomes available.\r\n                    </p>\r\n                  )}\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n            \r\n            {messages.length === 0 ? (\r\n              <div className=\"text-center py-12\">\r\n                <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-gradient-to-r from-gradient-metal-start to-gradient-metal-end mb-4\">\r\n                  <Bot className=\"w-8 h-8 text-white\" />\r\n                </div>\r\n                <h3 className=\"text-xl font-semibold mb-2\">How can I help you today?</h3>\r\n                <p className=\"text-muted-foreground mb-6\">\r\n                  Upload documents and ask questions to get started\r\n                </p>\r\n                <div className=\"space-y-4 max-w-md mx-auto\">\r\n                  <Card className=\"p-4 cursor-pointer hover:shadow-md transition-all\" onClick={() => setInputValue(\"Summarize the key points from my documents\")}>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <BookOpen className=\"w-5 h-5 text-primary\" />\r\n                      <div className=\"text-left\">\r\n                        <p className=\"font-medium text-sm\">Summarize documents</p>\r\n                        <p className=\"text-xs text-muted-foreground\">Get key insights from your sources</p>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                  <Card className=\"p-4 cursor-pointer hover:shadow-md transition-all\" onClick={() => setInputValue(\"Create an outline based on the main topics\")}>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <Brain className=\"w-5 h-5 text-primary\" />\r\n                      <div className=\"text-left\">\r\n                        <p className=\"font-medium text-sm\">Generate outline</p>\r\n                        <p className=\"text-xs text-muted-foreground\">Structure your content logically</p>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                  <Card className=\"p-4 cursor-pointer hover:shadow-md transition-all\" onClick={() => setInputValue(\"What are the most important findings?\")}>\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <Sparkles className=\"w-5 h-5 text-primary\" />\r\n                      <div className=\"text-left\">\r\n                        <p className=\"font-medium text-sm\">Extract insights</p>\r\n                        <p className=\"text-xs text-muted-foreground\">Discover key findings and patterns</p>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-6\">\r\n                {messages.map((message) => (\r\n                  <div\r\n                    key={message.id}\r\n                    className={`flex gap-4 ${\r\n                      message.role === 'assistant' ? '' : 'justify-end'\r\n                    }`}\r\n                  >\r\n                    {message.role === 'assistant' && (\r\n                      <>\r\n                        <div className=\"w-8 h-8 rounded-full bg-gradient-to-r from-gradient-metal-start to-gradient-metal-end flex items-center justify-center flex-shrink-0\">\r\n                          <Bot className=\"w-5 h-5 text-white\" />\r\n                        </div>\r\n                        <div\r\n                          className={`relative rounded-2xl px-4 py-3 max-w-[80%] group ${\r\n                            'assistant' === 'assistant'\r\n                              ? 'bg-muted'\r\n                              : 'bg-gradient-to-r from-gradient-metal-start to-gradient-metal-end text-white'\r\n                          }`}\r\n                        >\r\n                          <div className=\"text-sm leading-relaxed\">\r\n                            {renderMessageWithCitations(message.content, message.citations)}\r\n                          </div>\r\n                          {message.streaming && (\r\n                            <div className=\"flex items-center gap-2 mt-2\">\r\n                              <Loader2 className=\"w-3 h-3 animate-spin text-muted-foreground\" />\r\n                              <span className=\"text-xs text-muted-foreground\">AI is typing...</span>\r\n                            </div>\r\n                          )}\r\n                          \r\n                          {/* Share button for assistant messages */}\r\n                          {message.role === 'assistant' && !message.streaming && (\r\n                            <button\r\n                              onClick={() => handleShareMessage(message.id)}\r\n                              disabled={sharingMessageId === message.id}\r\n                              className={`absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity ${\r\n                                message.role === 'assistant'\r\n                                  ? 'text-muted-foreground hover:text-foreground'\r\n                                  : 'text-white/70 hover:text-white'\r\n                              }`}\r\n                              title=\"Share this Q&A\"\r\n                            >\r\n                              {sharingMessageId === message.id ? (\r\n                                <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                              ) : (\r\n                                <Share2 className=\"w-4 h-4\" />\r\n                              )}\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                    {message.role === 'user' && (\r\n                      <>\r\n                        <div\r\n                          className={`relative rounded-2xl px-4 py-3 max-w-[80%] group ${\r\n                            'assistant' === 'assistant'\r\n                              ? 'bg-muted'\r\n                              : 'bg-gradient-to-r from-gradient-metal-start to-gradient-metal-end text-white'\r\n                          }`}\r\n                        >\r\n                          <div className=\"text-sm leading-relaxed\">\r\n                            {message.content}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"w-8 h-8 rounded-full bg-muted flex items-center justify-center flex-shrink-0\">\r\n                          <User className=\"w-5 h-5\" />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                <div ref={messagesEndRef} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </ScrollArea>\r\n\r\n        {/* Input Area */}\r\n        <div className=\"border-t bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n          <div className=\"px-6 py-4\">\r\n            <div className=\"max-w-3xl mx-auto\">\r\n              <div className=\"flex gap-2\">\r\n                <Input\r\n                  value={inputValue}\r\n                  onChange={(e) => setInputValue(e.target.value)}\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === 'Enter' && !e.shiftKey) {\r\n                      e.preventDefault();\r\n                      handleSendMessage();\r\n                    }\r\n                  }}\r\n                  placeholder={isStreaming ? \"AI is responding...\" : \"Ask a question about your documents...\"}\r\n                  disabled={isLoading || isStreaming}\r\n                  className=\"flex-1\"\r\n                />\r\n                <Button\r\n                  onClick={handleSendMessage}\r\n                  disabled={isLoading || isStreaming || !inputValue.trim()}\r\n                  className=\"gradient-metallic-primary flex-shrink-0\"\r\n                  title={isStreaming ? \"Please wait for the current response to complete\" : \"Send message\"}\r\n                >\r\n                  {isLoading || isStreaming ? (\r\n                    <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                  ) : (\r\n                    <Send className=\"w-4 h-4\" />\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Document Preview Modal */}\r\n      <Dialog open={showDocumentPreview} onOpenChange={setShowDocumentPreview}>\r\n        <DialogContent className=\"max-w-4xl max-h-[80vh] overflow-hidden flex flex-col\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <FileText className=\"w-5 h-5\" />\r\n              {selectedDocument?.name}\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <ScrollArea className=\"flex-1 mt-4\">\r\n            <div className=\"p-4 bg-muted rounded-lg\">\r\n              <pre className=\"whitespace-pre-wrap text-sm font-mono\">\r\n                {documentContent}\r\n              </pre>\r\n            </div>\r\n          </ScrollArea>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Citation Modal */}\r\n      <Dialog open={showChunkModal} onOpenChange={setShowChunkModal}>\r\n        <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-hidden flex flex-col\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <FileText className=\"w-5 h-5\" />\r\n              Source: {highlightedChunk?.documentName}\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <ScrollArea className=\"flex-1 mt-4\">\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\r\n                <span className=\"font-medium\">Relevance:</span>\r\n                <span>{highlightedChunk ? (highlightedChunk.score * 100).toFixed(1) : 0}%</span>\r\n              </div>\r\n              <div className=\"p-4 bg-muted rounded-lg\">\r\n                <pre className=\"whitespace-pre-wrap text-sm font-mono\">\r\n                  {highlightedChunk?.text}\r\n                </pre>\r\n              </div>\r\n            </div>\r\n          </ScrollArea>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Share Modal */}\r\n      <Dialog open={shareModalOpen} onOpenChange={setShareModalOpen}>\r\n        <DialogContent className=\"max-w-md\">\r\n          <DialogHeader>\r\n            <DialogTitle className=\"flex items-center gap-2\">\r\n              <Share2 className=\"w-5 h-5\" />\r\n              Share This Conversation\r\n            </DialogTitle>\r\n          </DialogHeader>\r\n          <div className=\"space-y-4 mt-4\">\r\n            <p className=\"text-sm text-muted-foreground\">\r\n              Anyone with this link can view this Q&A snippet. The link will expire in 30 days.\r\n            </p>\r\n            <div className=\"flex gap-2\">\r\n              <Input\r\n                value={shareUrl}\r\n                readOnly\r\n                className=\"font-mono text-xs\"\r\n              />\r\n              <Button\r\n                onClick={handleCopyShareLink}\r\n                variant=\"outline\"\r\n                size=\"icon\"\r\n                className=\"flex-shrink-0\"\r\n              >\r\n                {copySuccess ? (\r\n                  <Check className=\"w-4 h-4 text-green-600\" />\r\n                ) : (\r\n                  <Copy className=\"w-4 h-4\" />\r\n                )}\r\n              </Button>\r\n            </div>\r\n            {copySuccess && (\r\n              <p className=\"text-sm text-green-600\">Link copied to clipboard!</p>\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"],"names":["React.forwardRef","jsxs","ScrollAreaPrimitive.Root","jsx","ScrollAreaPrimitive.Viewport","ScrollAreaPrimitive.Corner","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb","DialogPrimitive.Root","DialogPrimitive.Portal","DialogPrimitive.Overlay","DialogPrimitive.Content","DialogPrimitive.Close","DialogPrimitive.Title","DialogPrimitive.Description","DropdownMenuPrimitive.Root","DropdownMenuPrimitive.Trigger","DropdownMenuPrimitive.SubTrigger","DropdownMenuPrimitive.SubContent","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuPrimitive.Item","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","DropdownMenuPrimitive.RadioItem","DropdownMenuPrimitive.Label","DropdownMenuPrimitive.Separator","useState","useRef","useEffect","messages","document","Fragment","Loader2","AlertCircle"],"mappings":"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"}