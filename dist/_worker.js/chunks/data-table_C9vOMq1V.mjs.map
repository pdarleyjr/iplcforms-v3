{"version":3,"file":"data-table_C9vOMq1V.mjs","sources":["../../../src/components/admin/data-table.tsx"],"sourcesContent":["import {\r\n  Table as UITable,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\";\r\n\r\nimport type { Table as ReactTable } from \"@tanstack/react-table\";\r\nimport { flexRender } from \"@tanstack/react-table\";\r\n\r\ninterface DataTableProps<TData> {\r\n  table: ReactTable<TData>;\r\n}\r\n\r\nexport function DataTable<TData>({ table }: DataTableProps<TData>) {\r\n  return (\r\n    <UITable>\r\n      <TableHeader>\r\n        {table.getHeaderGroups().map((headerGroup) => (\r\n          <TableRow key={headerGroup.id}>\r\n            {headerGroup.headers.map((header) => (\r\n              <TableHead key={header.id}>\r\n                {header.isPlaceholder\r\n                  ? null\r\n                  : flexRender(\r\n                      header.column.columnDef.header,\r\n                      header.getContext(),\r\n                    )}\r\n              </TableHead>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableHeader>\r\n      <TableBody>\r\n        {table.getRowModel().rows?.length ? (\r\n          table.getRowModel().rows.map((row) => (\r\n            <TableRow\r\n              key={row.id}\r\n              data-state={row.getIsSelected() && \"selected\"}\r\n            >\r\n              {row.getVisibleCells().map((cell) => (\r\n                <TableCell key={cell.id}>\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          ))\r\n        ) : (\r\n          <TableRow>\r\n            <TableCell colSpan={table.getAllColumns().length} className=\"h-24 text-center\">\r\n              No results.\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableBody>\r\n    </UITable>\r\n  );\r\n}\r\n"],"names":["UITable","jsx"],"mappings":";;;;AAgBO,SAAS,SAAA,CAAiB,EAAE,KAAA,EAAM,EAA0B;AACjE,EAAA,8CACGA,KAAA,EAAA,EACC,QAAA,EAAA;AAAA,oBAAAC,qBAAA,CAAC,eACE,QAAA,EAAA,KAAA,CAAM,eAAA,GAAkB,GAAA,CAAI,CAAC,gCAC5BA,qBAAA,CAAC,QAAA,EAAA,EACE,QAAA,EAAA,WAAA,CAAY,OAAA,CAAQ,IAAI,CAAC,MAAA,2CACvB,SAAA,EAAA,EACE,QAAA,EAAA,MAAA,CAAO,gBACJ,IAAA,GACA,UAAA;AAAA,MACE,MAAA,CAAO,OAAO,SAAA,CAAU,MAAA;AAAA,MACxB,OAAO,UAAA;AAAW,KACpB,EAAA,EANU,OAAO,EAOvB,CACD,KAVY,WAAA,CAAY,EAW3B,CACD,CAAA,EACH,CAAA;AAAA,oBACAA,qBAAA,CAAC,SAAA,EAAA,EACE,QAAA,EAAA,KAAA,CAAM,WAAA,EAAY,CAAE,IAAA,EAAM,MAAA,GACzB,KAAA,CAAM,WAAA,EAAY,CAAE,IAAA,CAAK,GAAA,CAAI,CAAC,GAAA,qBAC5BA,qBAAA;AAAA,MAAC,QAAA;AAAA,MAAA;AAAA,QAEC,YAAA,EAAY,GAAA,CAAI,aAAA,EAAc,IAAK,UAAA;AAAA,QAElC,cAAI,eAAA,EAAgB,CAAE,IAAI,CAAC,IAAA,2CACzB,SAAA,EAAA,EACE,QAAA,EAAA,UAAA,CAAW,KAAK,MAAA,CAAO,SAAA,CAAU,MAAM,IAAA,CAAK,UAAA,EAAY,CAAA,EAAA,EAD3C,IAAA,CAAK,EAErB,CACD;AAAA,OAAA;AAAA,MAPI,GAAA,CAAI;AAAA,KASZ,CAAA,mBAEDA,qBAAA,CAAC,QAAA,EAAA,EACC,gDAAC,SAAA,EAAA,EAAU,OAAA,EAAS,KAAA,CAAM,aAAA,GAAgB,MAAA,EAAQ,SAAA,EAAU,kBAAA,EAAmB,QAAA,EAAA,aAAA,EAE/E,GACF,CAAA,EAEJ;AAAA,GAAA,EACF,CAAA;AAEJ;;;;"}