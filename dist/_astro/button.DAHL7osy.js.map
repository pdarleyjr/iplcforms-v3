{"version":3,"file":"button.DAHL7osy.js","sources":["../../src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all duration-200 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-iplc-accent-sky focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"gradient-metallic-primary text-white shadow-iplc-sm hover:shadow-iplc-md hover:scale-[1.02] active:scale-[0.98]\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-iplc-sm hover:bg-destructive/90 hover:shadow-iplc-md\",\r\n        outline:\r\n          \"border border-iplc-neutral-200 bg-background shadow-iplc-sm hover:bg-iplc-accent-sky/10 hover:border-iplc-accent-sky hover:shadow-iplc-md\",\r\n        secondary:\r\n          \"bg-iplc-accent-sky text-white shadow-iplc-sm hover:bg-iplc-accent-sky/90 hover:shadow-iplc-md\",\r\n        ghost: \"hover:bg-iplc-neutral-200/20 hover:text-iplc-primary\",\r\n        link: \"text-iplc-primary underline-offset-4 hover:underline hover:text-iplc-primary-dark\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  },\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  },\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":["buttonVariants","cva","Button","React.forwardRef","className","variant","size","asChild","props","ref","Comp","Slot","jsx","cn"],"mappings":"4IAMA,MAAMA,EAAiBC,EACrB,yVACA,CACE,SAAU,CACR,QAAS,CACP,QACE,kHACF,YACE,yGACF,QACE,4IACF,UACE,gGACF,MAAO,uDACP,KAAM,mFAAA,EAER,KAAM,CACJ,QAAS,gBACT,GAAI,8BACJ,GAAI,uBACJ,KAAM,SAAA,CACR,EAEF,gBAAiB,CACf,QAAS,UACT,KAAM,SAAA,CACR,CAEJ,EAQMC,EAASC,EAAAA,WACb,CAAC,CAAE,UAAAC,EAAW,QAAAC,EAAS,KAAAC,EAAM,QAAAC,EAAU,GAAO,GAAGC,CAAA,EAASC,IAAQ,CAChE,MAAMC,EAAOH,EAAUI,EAAO,SAC9B,OACEC,EAAAA,IAACF,EAAA,CACC,UAAWG,EAAGb,EAAe,CAAE,QAAAK,EAAS,KAAAC,EAAM,UAAAF,CAAA,CAAW,CAAC,EAC1D,IAAAK,EACC,GAAGD,CAAA,CAAA,CAGV,CACF,EACAN,EAAO,YAAc"}