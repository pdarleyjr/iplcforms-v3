{"version":3,"file":"evaluation-sections-config.BCkyIMEa.js","sources":["../../node_modules/@radix-ui/react-switch/dist/index.mjs","../../src/components/ui/switch.tsx","../../src/components/ui/progress.tsx","../../node_modules/mdurl/lib/decode.mjs","../../node_modules/mdurl/lib/encode.mjs","../../node_modules/mdurl/lib/format.mjs","../../node_modules/mdurl/lib/parse.mjs","../../node_modules/uc.micro/properties/Any/regex.mjs","../../node_modules/uc.micro/categories/Cc/regex.mjs","../../node_modules/uc.micro/categories/Cf/regex.mjs","../../node_modules/uc.micro/categories/P/regex.mjs","../../node_modules/uc.micro/categories/S/regex.mjs","../../node_modules/uc.micro/categories/Z/regex.mjs","../../node_modules/markdown-it/node_modules/entities/lib/esm/generated/decode-data-html.js","../../node_modules/markdown-it/node_modules/entities/lib/esm/generated/decode-data-xml.js","../../node_modules/markdown-it/node_modules/entities/lib/esm/decode_codepoint.js","../../node_modules/markdown-it/node_modules/entities/lib/esm/decode.js","../../node_modules/markdown-it/lib/common/utils.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_label.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_destination.mjs","../../node_modules/markdown-it/lib/helpers/parse_link_title.mjs","../../node_modules/markdown-it/lib/renderer.mjs","../../node_modules/markdown-it/lib/ruler.mjs","../../node_modules/markdown-it/lib/token.mjs","../../node_modules/markdown-it/lib/rules_core/state_core.mjs","../../node_modules/markdown-it/lib/rules_core/normalize.mjs","../../node_modules/markdown-it/lib/rules_core/block.mjs","../../node_modules/markdown-it/lib/rules_core/inline.mjs","../../node_modules/markdown-it/lib/rules_core/linkify.mjs","../../node_modules/markdown-it/lib/rules_core/replacements.mjs","../../node_modules/markdown-it/lib/rules_core/smartquotes.mjs","../../node_modules/markdown-it/lib/rules_core/text_join.mjs","../../node_modules/markdown-it/lib/parser_core.mjs","../../node_modules/markdown-it/lib/rules_block/state_block.mjs","../../node_modules/markdown-it/lib/rules_block/table.mjs","../../node_modules/markdown-it/lib/rules_block/code.mjs","../../node_modules/markdown-it/lib/rules_block/fence.mjs","../../node_modules/markdown-it/lib/rules_block/blockquote.mjs","../../node_modules/markdown-it/lib/rules_block/hr.mjs","../../node_modules/markdown-it/lib/rules_block/list.mjs","../../node_modules/markdown-it/lib/rules_block/reference.mjs","../../node_modules/markdown-it/lib/common/html_blocks.mjs","../../node_modules/markdown-it/lib/common/html_re.mjs","../../node_modules/markdown-it/lib/rules_block/html_block.mjs","../../node_modules/markdown-it/lib/rules_block/heading.mjs","../../node_modules/markdown-it/lib/rules_block/lheading.mjs","../../node_modules/markdown-it/lib/rules_block/paragraph.mjs","../../node_modules/markdown-it/lib/parser_block.mjs","../../node_modules/markdown-it/lib/rules_inline/state_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/text.mjs","../../node_modules/markdown-it/lib/rules_inline/linkify.mjs","../../node_modules/markdown-it/lib/rules_inline/newline.mjs","../../node_modules/markdown-it/lib/rules_inline/escape.mjs","../../node_modules/markdown-it/lib/rules_inline/backticks.mjs","../../node_modules/markdown-it/lib/rules_inline/strikethrough.mjs","../../node_modules/markdown-it/lib/rules_inline/emphasis.mjs","../../node_modules/markdown-it/lib/rules_inline/link.mjs","../../node_modules/markdown-it/lib/rules_inline/image.mjs","../../node_modules/markdown-it/lib/rules_inline/autolink.mjs","../../node_modules/markdown-it/lib/rules_inline/html_inline.mjs","../../node_modules/markdown-it/lib/rules_inline/entity.mjs","../../node_modules/markdown-it/lib/rules_inline/balance_pairs.mjs","../../node_modules/markdown-it/lib/rules_inline/fragments_join.mjs","../../node_modules/markdown-it/lib/parser_inline.mjs","../../node_modules/linkify-it/lib/re.mjs","../../node_modules/linkify-it/index.mjs","../../node_modules/punycode.js/punycode.es6.js","../../node_modules/markdown-it/lib/presets/default.mjs","../../node_modules/markdown-it/lib/presets/zero.mjs","../../node_modules/markdown-it/lib/presets/commonmark.mjs","../../node_modules/markdown-it/lib/index.mjs","../../node_modules/dompurify/dist/purify.es.mjs","../../src/lib/services/markdown.ts","../../src/components/form-builder/components/TitleElement.tsx","../../src/components/form-builder/components/SubtitleElement.tsx","../../src/components/form-builder/components/SeparatorElement.tsx"],"sourcesContent":["\"use client\";\n\n// src/switch.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar SWITCH_NAME = \"Switch\";\nvar [createSwitchContext, createSwitchScope] = createContextScope(SWITCH_NAME);\nvar [SwitchProvider, useSwitchContext] = createSwitchContext(SWITCH_NAME);\nvar Switch = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSwitch,\n      name,\n      checked: checkedProp,\n      defaultChecked,\n      required,\n      disabled,\n      value = \"on\",\n      onCheckedChange,\n      form,\n      ...switchProps\n    } = props;\n    const [button, setButton] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setButton(node));\n    const hasConsumerStoppedPropagationRef = React.useRef(false);\n    const isFormControl = button ? form || !!button.closest(\"form\") : true;\n    const [checked, setChecked] = useControllableState({\n      prop: checkedProp,\n      defaultProp: defaultChecked ?? false,\n      onChange: onCheckedChange,\n      caller: SWITCH_NAME\n    });\n    return /* @__PURE__ */ jsxs(SwitchProvider, { scope: __scopeSwitch, checked, disabled, children: [\n      /* @__PURE__ */ jsx(\n        Primitive.button,\n        {\n          type: \"button\",\n          role: \"switch\",\n          \"aria-checked\": checked,\n          \"aria-required\": required,\n          \"data-state\": getState(checked),\n          \"data-disabled\": disabled ? \"\" : void 0,\n          disabled,\n          value,\n          ...switchProps,\n          ref: composedRefs,\n          onClick: composeEventHandlers(props.onClick, (event) => {\n            setChecked((prevChecked) => !prevChecked);\n            if (isFormControl) {\n              hasConsumerStoppedPropagationRef.current = event.isPropagationStopped();\n              if (!hasConsumerStoppedPropagationRef.current) event.stopPropagation();\n            }\n          })\n        }\n      ),\n      isFormControl && /* @__PURE__ */ jsx(\n        SwitchBubbleInput,\n        {\n          control: button,\n          bubbles: !hasConsumerStoppedPropagationRef.current,\n          name,\n          value,\n          checked,\n          required,\n          disabled,\n          form,\n          style: { transform: \"translateX(-100%)\" }\n        }\n      )\n    ] });\n  }\n);\nSwitch.displayName = SWITCH_NAME;\nvar THUMB_NAME = \"SwitchThumb\";\nvar SwitchThumb = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSwitch, ...thumbProps } = props;\n    const context = useSwitchContext(THUMB_NAME, __scopeSwitch);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        \"data-state\": getState(context.checked),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        ...thumbProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nSwitchThumb.displayName = THUMB_NAME;\nvar BUBBLE_INPUT_NAME = \"SwitchBubbleInput\";\nvar SwitchBubbleInput = React.forwardRef(\n  ({\n    __scopeSwitch,\n    control,\n    checked,\n    bubbles = true,\n    ...props\n  }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(ref, forwardedRef);\n    const prevChecked = usePrevious(checked);\n    const controlSize = useSize(control);\n    React.useEffect(() => {\n      const input = ref.current;\n      if (!input) return;\n      const inputProto = window.HTMLInputElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        inputProto,\n        \"checked\"\n      );\n      const setChecked = descriptor.set;\n      if (prevChecked !== checked && setChecked) {\n        const event = new Event(\"click\", { bubbles });\n        setChecked.call(input, checked);\n        input.dispatchEvent(event);\n      }\n    }, [prevChecked, checked, bubbles]);\n    return /* @__PURE__ */ jsx(\n      \"input\",\n      {\n        type: \"checkbox\",\n        \"aria-hidden\": true,\n        defaultChecked: checked,\n        ...props,\n        tabIndex: -1,\n        ref: composedRefs,\n        style: {\n          ...props.style,\n          ...controlSize,\n          position: \"absolute\",\n          pointerEvents: \"none\",\n          opacity: 0,\n          margin: 0\n        }\n      }\n    );\n  }\n);\nSwitchBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction getState(checked) {\n  return checked ? \"checked\" : \"unchecked\";\n}\nvar Root = Switch;\nvar Thumb = SwitchThumb;\nexport {\n  Root,\n  Switch,\n  SwitchThumb,\n  Thumb,\n  createSwitchScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\";\r\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitive.Root\r\n    className={cn(\r\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-all duration-200\",\r\n      \"shadow-[var(--iplc-shadow-sm)] hover:shadow-[var(--iplc-shadow-md)]\",\r\n      \"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-[hsl(var(--iplc-accent-sky))] focus-visible:ring-offset-2 focus-visible:ring-offset-background\",\r\n      \"disabled:cursor-not-allowed disabled:opacity-50\",\r\n      \"data-[state=checked]:bg-[var(--iplc-gradient-primary)]\",\r\n      \"data-[state=unchecked]:bg-[hsl(var(--iplc-neutral-200))]\",\r\n      className,\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitive.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-4 w-4 rounded-full bg-white shadow-[var(--iplc-shadow-sm)] ring-0 transition-transform duration-200\",\r\n        \"data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\",\r\n      )}\r\n    />\r\n  </SwitchPrimitive.Root>\r\n));\r\nSwitch.displayName = SwitchPrimitive.Root.displayName;\r\n\r\nexport { Switch };","import React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ProgressProps {\r\n  value: number;\r\n  max?: number;\r\n  className?: string;\r\n  variant?: 'default' | 'gold' | 'green' | 'navy';\r\n}\r\n\r\nexport function Progress({\r\n  value,\r\n  max = 100,\r\n  className = '',\r\n  variant = 'default'\r\n}: ProgressProps) {\r\n  const percentage = Math.min(Math.max((value / max) * 100, 0), 100);\r\n  \r\n  const variantStyles = {\r\n    default: 'gradient-metallic-primary',\r\n    gold: 'gradient-metallic-gold',\r\n    green: 'gradient-metallic-green',\r\n    navy: 'gradient-metallic-navy',\r\n  };\r\n  \r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"w-full bg-iplc-neutral-200 rounded-full h-2 overflow-hidden shadow-[var(--iplc-shadow-sm)]\",\r\n        className\r\n      )}\r\n    >\r\n      <div\r\n        className={cn(\r\n          \"h-full rounded-full transition-all duration-500 ease-out\",\r\n          variantStyles[variant],\r\n          \"shadow-[0_0_10px_rgba(39,89,159,0.3)]\"\r\n        )}\r\n        style={{ width: `${percentage}%` }}\r\n      />\r\n    </div>\r\n  );\r\n}","/* eslint-disable no-bitwise */\n\nconst decodeCache = {}\n\nfunction getDecodeCache (exclude) {\n  let cache = decodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = decodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n    cache.push(ch)\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    const ch = exclude.charCodeAt(i)\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2)\n  }\n\n  return cache\n}\n\n// Decode percent-encoded string.\n//\nfunction decode (string, exclude) {\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars\n  }\n\n  const cache = getDecodeCache(exclude)\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    let result = ''\n\n    for (let i = 0, l = seq.length; i < l; i += 3) {\n      const b1 = parseInt(seq.slice(i + 1, i + 3), 16)\n\n      if (b1 < 0x80) {\n        result += cache[b1]\n        continue\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n\n        if ((b2 & 0xC0) === 0x80) {\n          const chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F)\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 3\n          continue\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          const chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F)\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd'\n          } else {\n            result += String.fromCharCode(chr)\n          }\n\n          i += 6\n          continue\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        const b2 = parseInt(seq.slice(i + 4, i + 6), 16)\n        const b3 = parseInt(seq.slice(i + 7, i + 9), 16)\n        const b4 = parseInt(seq.slice(i + 10, i + 12), 16)\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          let chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F)\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd'\n          } else {\n            chr -= 0x10000\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF))\n          }\n\n          i += 9\n          continue\n        }\n      }\n\n      result += '\\ufffd'\n    }\n\n    return result\n  })\n}\n\ndecode.defaultChars = ';/?:@&=+$,#'\ndecode.componentChars = ''\n\nexport default decode\n","const encodeCache = {}\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache (exclude) {\n  let cache = encodeCache[exclude]\n  if (cache) { return cache }\n\n  cache = encodeCache[exclude] = []\n\n  for (let i = 0; i < 128; i++) {\n    const ch = String.fromCharCode(i)\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch)\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2))\n    }\n  }\n\n  for (let i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i]\n  }\n\n  return cache\n}\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode (string, exclude, keepEscaped) {\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude\n    exclude = encode.defaultChars\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true\n  }\n\n  const cache = getEncodeCache(exclude)\n  let result = ''\n\n  for (let i = 0, l = string.length; i < l; i++) {\n    const code = string.charCodeAt(i)\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3)\n        i += 2\n        continue\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code]\n      continue\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        const nextCode = string.charCodeAt(i + 1)\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1])\n          i++\n          continue\n        }\n      }\n      result += '%EF%BF%BD'\n      continue\n    }\n\n    result += encodeURIComponent(string[i])\n  }\n\n  return result\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\"\nencode.componentChars = \"-_.!~*'()\"\n\nexport default encode\n","export default function format (url) {\n  let result = ''\n\n  result += url.protocol || ''\n  result += url.slashes ? '//' : ''\n  result += url.auth ? url.auth + '@' : ''\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']'\n  } else {\n    result += url.hostname || ''\n  }\n\n  result += url.port ? ':' + url.port : ''\n  result += url.pathname || ''\n  result += url.search || ''\n  result += url.hash || ''\n\n  return result\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url () {\n  this.protocol = null\n  this.slashes = null\n  this.auth = null\n  this.port = null\n  this.hostname = null\n  this.hash = null\n  this.search = null\n  this.pathname = null\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nconst protocolPattern = /^([a-z0-9.+-]+:)/i\nconst portPattern = /:[0-9]*$/\n\n// Special case for a simple path URL\n/* eslint-disable-next-line no-useless-escape */\nconst simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/\n\n// RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\nconst delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t']\n\n// RFC 2396: characters not allowed for various reasons.\nconst unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims)\n\n// Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nconst autoEscape = ['\\''].concat(unwise)\n// Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nconst nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape)\nconst hostEndingChars = ['/', '?', '#']\nconst hostnameMaxLen = 255\nconst hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/\nconst hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/\n// protocols that can allow \"unsafe\" and \"unwise\" chars.\n// protocols that never have a hostname.\nconst hostlessProtocol = {\n  javascript: true,\n  'javascript:': true\n}\n// protocols that always contain a // bit.\nconst slashedProtocol = {\n  http: true,\n  https: true,\n  ftp: true,\n  gopher: true,\n  file: true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n}\n\nfunction urlParse (url, slashesDenoteHost) {\n  if (url && url instanceof Url) return url\n\n  const u = new Url()\n  u.parse(url, slashesDenoteHost)\n  return u\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  let lowerProto, hec, slashes\n  let rest = url\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim()\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    const simplePath = simplePathPattern.exec(rest)\n    if (simplePath) {\n      this.pathname = simplePath[1]\n      if (simplePath[2]) {\n        this.search = simplePath[2]\n      }\n      return this\n    }\n  }\n\n  let proto = protocolPattern.exec(rest)\n  if (proto) {\n    proto = proto[0]\n    lowerProto = proto.toLowerCase()\n    this.protocol = proto\n    rest = rest.substr(proto.length)\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  /* eslint-disable-next-line no-useless-escape */\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//'\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2)\n      this.slashes = true\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    let hostEnd = -1\n    for (let i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    let auth, atSign\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@')\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd)\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign)\n      rest = rest.slice(atSign + 1)\n      this.auth = auth\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1\n    for (let i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i])\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd-- }\n    const host = rest.slice(0, hostEnd)\n    rest = rest.slice(hostEnd)\n\n    // pull out port.\n    this.parseHost(host)\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || ''\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    const ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']'\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      const hostparts = this.hostname.split(/\\./)\n      for (let i = 0, l = hostparts.length; i < l; i++) {\n        const part = hostparts[i]\n        if (!part) { continue }\n        if (!part.match(hostnamePartPattern)) {\n          let newpart = ''\n          for (let j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x'\n            } else {\n              newpart += part[j]\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            const validParts = hostparts.slice(0, i)\n            const notHost = hostparts.slice(i + 1)\n            const bit = part.match(hostnamePartStart)\n            if (bit) {\n              validParts.push(bit[1])\n              notHost.unshift(bit[2])\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest\n            }\n            this.hostname = validParts.join('.')\n            break\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = ''\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2)\n    }\n  }\n\n  // chop off from the tail first.\n  const hash = rest.indexOf('#')\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash)\n    rest = rest.slice(0, hash)\n  }\n  const qm = rest.indexOf('?')\n  if (qm !== -1) {\n    this.search = rest.substr(qm)\n    rest = rest.slice(0, qm)\n  }\n  if (rest) { this.pathname = rest }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = ''\n  }\n\n  return this\n}\n\nUrl.prototype.parseHost = function (host) {\n  let port = portPattern.exec(host)\n  if (port) {\n    port = port[0]\n    if (port !== ':') {\n      this.port = port.substr(1)\n    }\n    host = host.substr(0, host.length - port.length)\n  }\n  if (host) { this.hostname = host }\n}\n\nexport default urlParse\n","export default /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","export default /[\\0-\\x1F\\x7F-\\x9F]/","export default /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u0890\\u0891\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD80D[\\uDC30-\\uDC3F]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","export default /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061D-\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1B7D\\u1B7E\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52-\\u2E5D\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDEAD\\uDF55-\\uDF59\\uDF86-\\uDF89]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDEB9\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDD44-\\uDD46\\uDDE2\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2\\uDF00-\\uDF09]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8\\uDF43-\\uDF4F\\uDFFF]|\\uD809[\\uDC70-\\uDC74]|\\uD80B[\\uDFF1\\uDFF2]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A\\uDFE2]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","export default /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u0888\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20C0\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFF\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u31EF\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC2\\uFD40-\\uFD4F\\uFDCF\\uFDFC-\\uFDFF\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD833[\\uDF50-\\uDFC3]|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDEA\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEDC-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF76\\uDF7B-\\uDFD9\\uDFE0-\\uDFEB\\uDFF0]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE7C\\uDE80-\\uDE88\\uDE90-\\uDEBD\\uDEBF-\\uDEC5\\uDECE-\\uDEDB\\uDEE0-\\uDEE8\\uDEF0-\\uDEF8\\uDF00-\\uDF92\\uDF94-\\uDFCA]/","export default /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","// Utilities\n//\n\nimport * as mdurl from 'mdurl'\nimport * as ucmicro from 'uc.micro'\nimport { decodeHTML } from 'entities'\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\n\nfunction isString (obj) { return _class(obj) === '[object String]' }\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction has (object, key) {\n  return _hasOwnProperty.call(object, key)\n}\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object')\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt (src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1))\n}\n\nfunction isValidEntityCode (c) {\n  /* eslint no-bitwise:0 */\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false }\n  if (c === 0x0B) { return false }\n  if (c >= 0x0E && c <= 0x1F) { return false }\n  if (c >= 0x7F && c <= 0x9F) { return false }\n  // out of range\n  if (c > 0x10FFFF) { return false }\n  return true\n}\n\nfunction fromCodePoint (c) {\n  /* eslint no-bitwise:0 */\n  if (c > 0xffff) {\n    c -= 0x10000\n    const surrogate1 = 0xd800 + (c >> 10)\n    const surrogate2 = 0xdc00 + (c & 0x3ff)\n\n    return String.fromCharCode(surrogate1, surrogate2)\n  }\n  return String.fromCharCode(c)\n}\n\nconst UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@[\\\\\\]^_`{|}~])/g\nconst ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi\nconst UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi')\n\nconst DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i\n\nfunction replaceEntityPattern (match, name) {\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    const code = name[1].toLowerCase() === 'x'\n      ? parseInt(name.slice(2), 16)\n      : parseInt(name.slice(1), 10)\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code)\n    }\n\n    return match\n  }\n\n  const decoded = decodeHTML(match)\n  if (decoded !== match) {\n    return decoded\n  }\n\n  return match\n}\n\n/* function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n} */\n\nfunction unescapeMd (str) {\n  if (str.indexOf('\\\\') < 0) { return str }\n  return str.replace(UNESCAPE_MD_RE, '$1')\n}\n\nfunction unescapeAll (str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped }\n    return replaceEntityPattern(match, entity)\n  })\n}\n\nconst HTML_ESCAPE_TEST_RE = /[&<>\"]/\nconst HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g\nconst HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n}\n\nfunction replaceUnsafeChar (ch) {\n  return HTML_REPLACEMENTS[ch]\n}\n\nfunction escapeHtml (str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar)\n  }\n  return str\n}\n\nconst REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g\n\nfunction escapeRE (str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&')\n}\n\nfunction isSpace (code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true\n  }\n  return false\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace (code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true\n  }\n  return false\n}\n\n/* eslint-disable max-len */\n\n// Currently without astral characters support.\nfunction isPunctChar (ch) {\n  return ucmicro.P.test(ch) || ucmicro.S.test(ch)\n}\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct (ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference (str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ')\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß')\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase()\n}\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nconst lib = { mdurl, ucmicro }\n\nexport {\n  lib,\n  assign,\n  isString,\n  has,\n  unescapeMd,\n  unescapeAll,\n  isValidEntityCode,\n  fromCodePoint,\n  escapeHtml,\n  arrayReplaceAt,\n  isSpace,\n  isWhiteSpace,\n  isMdAsciiPunct,\n  isPunctChar,\n  escapeRE,\n  normalizeReference\n}\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\nexport default function parseLinkLabel (state, start, disableNested) {\n  let level, found, marker, prevPos\n\n  const max = state.posMax\n  const oldPos = state.pos\n\n  state.pos = start + 1\n  level = 1\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos)\n    if (marker === 0x5D /* ] */) {\n      level--\n      if (level === 0) {\n        found = true\n        break\n      }\n    }\n\n    prevPos = state.pos\n    state.md.inline.skipToken(state)\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++\n      } else if (disableNested) {\n        state.pos = oldPos\n        return -1\n      }\n    }\n  }\n\n  let labelEnd = -1\n\n  if (found) {\n    labelEnd = state.pos\n  }\n\n  // restore old state\n  state.pos = oldPos\n\n  return labelEnd\n}\n","// Parse link destination\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\nexport default function parseLinkDestination (str, start, max) {\n  let code\n  let pos = start\n\n  const result = {\n    ok: false,\n    pos: 0,\n    str: ''\n  }\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++\n    while (pos < max) {\n      code = str.charCodeAt(pos)\n      if (code === 0x0A /* \\n */) { return result }\n      if (code === 0x3C /* < */) { return result }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1\n        result.str = unescapeAll(str.slice(start + 1, pos))\n        result.ok = true\n        return result\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2\n        continue\n      }\n\n      pos++\n    }\n\n    // no closing '>'\n    return result\n  }\n\n  // this should be ... } else { ... branch\n\n  let level = 0\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n\n    if (code === 0x20) { break }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break }\n      pos += 2\n      continue\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++\n      if (level > 32) { return result }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break }\n      level--\n    }\n\n    pos++\n  }\n\n  if (start === pos) { return result }\n  if (level !== 0) { return result }\n\n  result.str = unescapeAll(str.slice(start, pos))\n  result.pos = pos\n  result.ok = true\n  return result\n}\n","// Parse link title\n//\n\nimport { unescapeAll } from '../common/utils.mjs'\n\n// Parse link title within `str` in [start, max] range,\n// or continue previous parsing if `prev_state` is defined (equal to result of last execution).\n//\nexport default function parseLinkTitle (str, start, max, prev_state) {\n  let code\n  let pos = start\n\n  const state = {\n    // if `true`, this is a valid link title\n    ok: false,\n    // if `true`, this link can be continued on the next line\n    can_continue: false,\n    // if `ok`, it's the position of the first character after the closing marker\n    pos: 0,\n    // if `ok`, it's the unescaped title\n    str: '',\n    // expected closing marker character code\n    marker: 0\n  }\n\n  if (prev_state) {\n    // this is a continuation of a previous parseLinkTitle call on the next line,\n    // used in reference links only\n    state.str = prev_state.str\n    state.marker = prev_state.marker\n  } else {\n    if (pos >= max) { return state }\n\n    let marker = str.charCodeAt(pos)\n    if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return state }\n\n    start++\n    pos++\n\n    // if opening marker is \"(\", switch it to closing marker \")\"\n    if (marker === 0x28) { marker = 0x29 }\n\n    state.marker = marker\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos)\n    if (code === state.marker) {\n      state.pos = pos + 1\n      state.str += unescapeAll(str.slice(start, pos))\n      state.ok = true\n      return state\n    } else if (code === 0x28 /* ( */ && state.marker === 0x29 /* ) */) {\n      return state\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++\n    }\n\n    pos++\n  }\n\n  // no closing marker found, but this link title may continue on the next line (for references)\n  state.can_continue = true\n  state.str += unescapeAll(str.slice(start, pos))\n  return state\n}\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\nimport { assign, unescapeAll, escapeHtml } from './common/utils.mjs'\n\nconst default_rules = {}\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(token.content) +\n          '</code>'\n}\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n'\n}\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n  const info = token.info ? unescapeAll(token.info).trim() : ''\n  let langName = ''\n  let langAttrs = ''\n\n  if (info) {\n    const arr = info.split(/(\\s+)/g)\n    langName = arr[0]\n    langAttrs = arr.slice(2).join('')\n  }\n\n  let highlighted\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content)\n  } else {\n    highlighted = escapeHtml(token.content)\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n'\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    const i = token.attrIndex('class')\n    const tmpAttrs = token.attrs ? token.attrs.slice() : []\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName])\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice()\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName\n    }\n\n    // Fake token just to render attributes\n    const tmpToken = {\n      attrs: tmpAttrs\n    }\n\n    return `<pre><code${slf.renderAttrs(tmpToken)}>${highlighted}</code></pre>\\n`\n  }\n\n  return `<pre><code${slf.renderAttrs(token)}>${highlighted}</code></pre>\\n`\n}\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  const token = tokens[idx]\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env)\n\n  return slf.renderToken(tokens, idx, options)\n}\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n'\n}\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n'\n}\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content)\n}\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content\n}\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer () {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules)\n}\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs (token) {\n  let i, l, result\n\n  if (!token.attrs) { return '' }\n\n  result = ''\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"'\n  }\n\n  return result\n}\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken (tokens, idx, options) {\n  const token = tokens[idx]\n  let result = ''\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return ''\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n'\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token)\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /'\n  }\n\n  // Check if we need to add a newline after this tag\n  let needLf = false\n  if (token.block) {\n    needLf = true\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        const nextToken = tokens[idx + 1]\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>'\n\n  return result\n}\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options)\n    }\n  }\n\n  return result\n}\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  let result = ''\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    switch (tokens[i].type) {\n      case 'text':\n        result += tokens[i].content\n        break\n      case 'image':\n        result += this.renderInlineAsText(tokens[i].children, options, env)\n        break\n      case 'html_inline':\n      case 'html_block':\n        result += tokens[i].content\n        break\n      case 'softbreak':\n      case 'hardbreak':\n        result += '\\n'\n        break\n      default:\n        // all other tokens are skipped\n    }\n  }\n\n  return result\n}\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  let result = ''\n  const rules = this.rules\n\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const type = tokens[i].type\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env)\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this)\n    } else {\n      result += this.renderToken(tokens, i, options, env)\n    }\n  }\n\n  return result\n}\n\nexport default Renderer\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\nfunction Ruler () {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null\n}\n\n// Helper methods, should not be used directly\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (let i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i\n    }\n  }\n  return -1\n}\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  const self = this\n  const chains = ['']\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName)\n      }\n    })\n  })\n\n  self.__cache__ = {}\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = []\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return }\n\n      self.__cache__[chain].push(rule.fn)\n    })\n  })\n}\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  const index = this.__find__(name)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name) }\n\n  this.__rules__[index].fn = fn\n  this.__rules__[index].alt = opt.alt || []\n  this.__cache__ = null\n}\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  const index = this.__find__(beforeName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName) }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  const index = this.__find__(afterName)\n  const opt = options || {}\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName) }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  const opt = options || {}\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn,\n    alt: opt.alt || []\n  })\n\n  this.__cache__ = null\n}\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = true\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false })\n\n  this.enable(list, ignoreInvalid)\n}\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [list] }\n\n  const result = []\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    const idx = this.__find__(name)\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return }\n      throw new Error('Rules manager: invalid rule name ' + name)\n    }\n    this.__rules__[idx].enabled = false\n    result.push(name)\n  }, this)\n\n  this.__cache__ = null\n  return result\n}\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__()\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || []\n}\n\nexport default Ruler\n","// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token (type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = ''\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = ''\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = ''\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false\n}\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex (name) {\n  if (!this.attrs) { return -1 }\n\n  const attrs = this.attrs\n\n  for (let i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i }\n  }\n  return -1\n}\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush (attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData)\n  } else {\n    this.attrs = [attrData]\n  }\n}\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet (name, value) {\n  const idx = this.attrIndex(name)\n  const attrData = [name, value]\n\n  if (idx < 0) {\n    this.attrPush(attrData)\n  } else {\n    this.attrs[idx] = attrData\n  }\n}\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet (name) {\n  const idx = this.attrIndex(name)\n  let value = null\n  if (idx >= 0) {\n    value = this.attrs[idx][1]\n  }\n  return value\n}\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin (name, value) {\n  const idx = this.attrIndex(name)\n\n  if (idx < 0) {\n    this.attrPush([name, value])\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value\n  }\n}\n\nexport default Token\n","// Core state object\n//\n\nimport Token from '../token.mjs'\n\nfunction StateCore (src, md, env) {\n  this.src = src\n  this.env = env\n  this.tokens = []\n  this.inlineMode = false\n  this.md = md // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token\n\nexport default StateCore\n","// Normalize input string\n\n// https://spec.commonmark.org/0.29/#line-ending\nconst NEWLINES_RE  = /\\r\\n?|\\n/g\nconst NULL_RE      = /\\0/g\n\nexport default function normalize (state) {\n  let str\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n')\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD')\n\n  state.src = str\n}\n","export default function block (state) {\n  let token\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0)\n    token.content  = state.src\n    token.map      = [0, 1]\n    token.children = []\n    state.tokens.push(token)\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens)\n  }\n}\n","export default function inline (state) {\n  const tokens = state.tokens\n\n  // Parse inlines\n  for (let i = 0, l = tokens.length; i < l; i++) {\n    const tok = tokens[i]\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children)\n    }\n  }\n}\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\nimport { arrayReplaceAt } from '../common/utils.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nexport default function linkify (state) {\n  const blockTokens = state.tokens\n\n  if (!state.md.options.linkify) { return }\n\n  for (let j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue\n    }\n\n    let tokens = blockTokens[j].children\n\n    let htmlLinkLevel = 0\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (let i = tokens.length - 1; i >= 0; i--) {\n      const currentToken = tokens[i]\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--\n        }\n        continue\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++\n        }\n      }\n      if (htmlLinkLevel > 0) { continue }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        const text = currentToken.content\n        let links = state.md.linkify.match(text)\n\n        // Now split string to nodes\n        const nodes = []\n        let level = currentToken.level\n        let lastPos = 0\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1)\n        }\n\n        for (let ln = 0; ln < links.length; ln++) {\n          const url = links[ln].url\n          const fullUrl = state.md.normalizeLink(url)\n          if (!state.md.validateLink(fullUrl)) { continue }\n\n          let urlText = links[ln].text\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '')\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '')\n          } else {\n            urlText = state.md.normalizeLinkText(urlText)\n          }\n\n          const pos = links[ln].index\n\n          if (pos > lastPos) {\n            const token   = new state.Token('text', '', 0)\n            token.content = text.slice(lastPos, pos)\n            token.level   = level\n            nodes.push(token)\n          }\n\n          const token_o   = new state.Token('link_open', 'a', 1)\n          token_o.attrs   = [['href', fullUrl]]\n          token_o.level   = level++\n          token_o.markup  = 'linkify'\n          token_o.info    = 'auto'\n          nodes.push(token_o)\n\n          const token_t   = new state.Token('text', '', 0)\n          token_t.content = urlText\n          token_t.level   = level\n          nodes.push(token_t)\n\n          const token_c   = new state.Token('link_close', 'a', -1)\n          token_c.level   = --level\n          token_c.markup  = 'linkify'\n          token_c.info    = 'auto'\n          nodes.push(token_c)\n\n          lastPos = links[ln].lastIndex\n        }\n        if (lastPos < text.length) {\n          const token   = new state.Token('text', '', 0)\n          token.content = text.slice(lastPos)\n          token.level   = level\n          nodes.push(token)\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes)\n      }\n    }\n  }\n}\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nconst RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nconst SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i\n\nconst SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig\nconst SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n}\n\nfunction replaceFn (match, name) {\n  return SCOPED_ABBR[name.toLowerCase()]\n}\n\nfunction replace_scoped (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn)\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nfunction replace_rare (inlineTokens) {\n  let inside_autolink = 0\n\n  for (let i = inlineTokens.length - 1; i >= 0; i--) {\n    const token = inlineTokens[i]\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013')\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++\n    }\n  }\n}\n\nexport default function replace (state) {\n  let blkIdx\n\n  if (!state.md.options.typographer) { return }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') { continue }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children)\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children)\n    }\n  }\n}\n","// Convert straight quotation marks to typographic ones\n//\n\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nconst QUOTE_TEST_RE = /['\"]/\nconst QUOTE_RE = /['\"]/g\nconst APOSTROPHE = '\\u2019' /* ’ */\n\nfunction replaceAt (str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1)\n}\n\nfunction process_inlines (tokens, state) {\n  let j\n\n  const stack = []\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n\n    const thisLevel = tokens[i].level\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break }\n    }\n    stack.length = j + 1\n\n    if (token.type !== 'text') { continue }\n\n    let text = token.content\n    let pos = 0\n    let max = text.length\n\n    /* eslint no-labels:0,block-scoped-var:0 */\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos\n      const t = QUOTE_RE.exec(text)\n      if (!t) { break }\n\n      let canOpen = true\n      let canClose = true\n      pos = t.index + 1\n      const isSingle = (t[0] === \"'\")\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      let lastChar = 0x20\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1)\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // lastChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1)\n          break\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      let nextChar = 0x20\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos)\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break // nextChar defaults to 0x20\n          if (!tokens[j].content) continue // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0)\n          break\n        }\n      }\n\n      const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n      const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n      const isLastWhiteSpace = isWhiteSpace(lastChar)\n      const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n      if (isNextWhiteSpace) {\n        canOpen = false\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar\n        canClose = isNextPunctChar\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE)\n        }\n        continue\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          let item = stack[j]\n          if (stack[j].level < thisLevel) { break }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j]\n\n            let openQuote\n            let closeQuote\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2]\n              closeQuote = state.md.options.quotes[3]\n            } else {\n              openQuote = state.md.options.quotes[0]\n              closeQuote = state.md.options.quotes[1]\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote)\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote)\n\n            pos += closeQuote.length - 1\n            if (item.token === i) { pos += openQuote.length - 1 }\n\n            text = token.content\n            max = text.length\n\n            stack.length = j\n            continue OUTER\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        })\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE)\n      }\n    }\n  }\n}\n\nexport default function smartquotes (state) {\n  /* eslint max-depth:0 */\n  if (!state.md.options.typographer) { return }\n\n  for (let blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state)\n  }\n}\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n","// Parser state class\n\nimport Token from '../token.mjs'\nimport { isSpace } from '../common/utils.mjs'\n\nfunction StateBlock (src, md, env, tokens) {\n  this.src = src\n\n  // link to parser instance\n  this.md     = md\n\n  this.env = env\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens\n\n  this.bMarks = []  // line begin offsets for fast jumps\n  this.eMarks = []  // line end offsets for fast jumps\n  this.tShift = []  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = []  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = []\n\n  // block parser variables\n\n  // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n  this.blkIndent  = 0\n  this.line       = 0 // line index in src\n  this.lineMax    = 0 // lines count\n  this.tight      = false  // loose/tight mode for lists\n  this.ddIndent   = -1 // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1 // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root'\n\n  this.level = 0\n\n  // Create caches\n  // Generate markers.\n  const s = this.src\n\n  for (let start = 0, pos = 0, indent = 0, offset = 0, len = s.length, indent_found = false; pos < len; pos++) {\n    const ch = s.charCodeAt(pos)\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n        continue\n      } else {\n        indent_found = true\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++ }\n      this.bMarks.push(start)\n      this.eMarks.push(pos)\n      this.tShift.push(indent)\n      this.sCount.push(offset)\n      this.bsCount.push(0)\n\n      indent_found = false\n      indent = 0\n      offset = 0\n      start = pos + 1\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length)\n  this.eMarks.push(s.length)\n  this.tShift.push(0)\n  this.sCount.push(0)\n  this.bsCount.push(0)\n\n  this.lineMax = this.bMarks.length - 1 // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  const token = new Token(type, tag, nesting)\n  token.block = true\n\n  if (nesting < 0) this.level-- // closing tag\n  token.level = this.level\n  if (nesting > 0) this.level++ // opening tag\n\n  this.tokens.push(token)\n  return token\n}\n\nStateBlock.prototype.isEmpty = function isEmpty (line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line]\n}\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines (from) {\n  for (let max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break\n    }\n  }\n  return from\n}\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces (pos) {\n  for (let max = this.src.length; pos < max; pos++) {\n    const ch = this.src.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n  }\n  return pos\n}\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack (pos, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1 }\n  }\n  return pos\n}\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars (pos, code) {\n  for (let max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break }\n  }\n  return pos\n}\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack (pos, code, min) {\n  if (pos <= min) { return pos }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1 }\n  }\n  return pos\n}\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines (begin, end, indent, keepLastLF) {\n  if (begin >= end) {\n    return ''\n  }\n\n  const queue = new Array(end - begin)\n\n  for (let i = 0, line = begin; line < end; line++, i++) {\n    let lineIndent = 0\n    const lineStart = this.bMarks[line]\n    let first = lineStart\n    let last\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1\n    } else {\n      last = this.eMarks[line]\n    }\n\n    while (first < last && lineIndent < indent) {\n      const ch = this.src.charCodeAt(first)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4\n        } else {\n          lineIndent++\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++\n      } else {\n        break\n      }\n\n      first++\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last)\n    } else {\n      queue[i] = this.src.slice(first, last)\n    }\n  }\n\n  return queue.join('')\n}\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token\n\nexport default StateBlock\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Limit the amount of empty autocompleted cells in a table,\n// see https://github.com/markdown-it/markdown-it/issues/1000,\n//\n// Both pulldown-cmark and commonmark-hs limit the number of cells this way to ~200k.\n// We set it to 65k, which can expand user input by a factor of x370\n// (256x256 square is 1.8kB expanded into 650kB).\nconst MAX_AUTOCOMPLETED_CELLS = 0x10000\n\nfunction getLine (state, line) {\n  const pos = state.bMarks[line] + state.tShift[line]\n  const max = state.eMarks[line]\n\n  return state.src.slice(pos, max)\n}\n\nfunction escapedSplit (str) {\n  const result = []\n  const max = str.length\n\n  let pos = 0\n  let ch = str.charCodeAt(pos)\n  let isEscaped = false\n  let lastPos = 0\n  let current = ''\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos))\n        current = ''\n        lastPos = pos + 1\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1)\n        lastPos = pos\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */)\n    pos++\n\n    ch = str.charCodeAt(pos)\n  }\n\n  result.push(current + str.substring(lastPos))\n\n  return result\n}\n\nexport default function table (state, startLine, endLine, silent) {\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false }\n\n  let nextLine = startLine + 1\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const firstCh = state.src.charCodeAt(pos++)\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false }\n\n  if (pos >= state.eMarks[nextLine]) { return false }\n\n  const secondCh = state.src.charCodeAt(pos++)\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false }\n\n  while (pos < state.eMarks[nextLine]) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false }\n\n    pos++\n  }\n\n  let lineText = getLine(state, startLine + 1)\n  let columns = lineText.split('|')\n  const aligns = []\n  for (let i = 0; i < columns.length; i++) {\n    const t = columns[i].trim()\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue\n      } else {\n        return false\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right')\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left')\n    } else {\n      aligns.push('')\n    }\n  }\n\n  lineText = getLine(state, startLine).trim()\n  if (lineText.indexOf('|') === -1) { return false }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n  columns = escapedSplit(lineText)\n  if (columns.length && columns[0] === '') columns.shift()\n  if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  const columnCount = columns.length\n  if (columnCount === 0 || columnCount !== aligns.length) { return false }\n\n  if (silent) { return true }\n\n  const oldParentType = state.parentType\n  state.parentType = 'table'\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const token_to = state.push('table_open', 'table', 1)\n  const tableLines = [startLine, 0]\n  token_to.map = tableLines\n\n  const token_tho = state.push('thead_open', 'thead', 1)\n  token_tho.map = [startLine, startLine + 1]\n\n  const token_htro = state.push('tr_open', 'tr', 1)\n  token_htro.map = [startLine, startLine + 1]\n\n  for (let i = 0; i < columns.length; i++) {\n    const token_ho = state.push('th_open', 'th', 1)\n    if (aligns[i]) {\n      token_ho.attrs  = [['style', 'text-align:' + aligns[i]]]\n    }\n\n    const token_il = state.push('inline', '', 0)\n    token_il.content  = columns[i].trim()\n    token_il.children = []\n\n    state.push('th_close', 'th', -1)\n  }\n\n  state.push('tr_close', 'tr', -1)\n  state.push('thead_close', 'thead', -1)\n\n  let tbodyLines\n  let autocompletedCells = 0\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) { break }\n    lineText = getLine(state, nextLine).trim()\n    if (!lineText) { break }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n    columns = escapedSplit(lineText)\n    if (columns.length && columns[0] === '') columns.shift()\n    if (columns.length && columns[columns.length - 1] === '') columns.pop()\n\n    // note: autocomplete count can be negative if user specifies more columns than header,\n    // but that does not affect intended use (which is limiting expansion)\n    autocompletedCells += columnCount - columns.length\n    if (autocompletedCells > MAX_AUTOCOMPLETED_CELLS) { break }\n\n    if (nextLine === startLine + 2) {\n      const token_tbo = state.push('tbody_open', 'tbody', 1)\n      token_tbo.map = tbodyLines = [startLine + 2, 0]\n    }\n\n    const token_tro = state.push('tr_open', 'tr', 1)\n    token_tro.map = [nextLine, nextLine + 1]\n\n    for (let i = 0; i < columnCount; i++) {\n      const token_tdo = state.push('td_open', 'td', 1)\n      if (aligns[i]) {\n        token_tdo.attrs  = [['style', 'text-align:' + aligns[i]]]\n      }\n\n      const token_il = state.push('inline', '', 0)\n      token_il.content  = columns[i] ? columns[i].trim() : ''\n      token_il.children = []\n\n      state.push('td_close', 'td', -1)\n    }\n    state.push('tr_close', 'tr', -1)\n  }\n\n  if (tbodyLines) {\n    state.push('tbody_close', 'tbody', -1)\n    tbodyLines[1] = nextLine\n  }\n\n  state.push('table_close', 'table', -1)\n  tableLines[1] = nextLine\n\n  state.parentType = oldParentType\n  state.line = nextLine\n  return true\n}\n","// Code block (4 spaces padded)\n\nexport default function code (state, startLine, endLine/*, silent */) {\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false }\n\n  let nextLine = startLine + 1\n  let last = nextLine\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++\n      continue\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++\n      last = nextLine\n      continue\n    }\n    break\n  }\n\n  state.line = last\n\n  const token   = state.push('code_block', 'code', 0)\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n'\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// fences (``` lang, ~~~ lang)\n\nexport default function fence (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (pos + 3 > max) { return false }\n\n  const marker = state.src.charCodeAt(pos)\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false\n  }\n\n  // scan marker length\n  let mem = pos\n  pos = state.skipChars(pos, marker)\n\n  let len = pos - mem\n\n  if (len < 3) { return false }\n\n  const markup = state.src.slice(mem, pos)\n  const params = state.src.slice(pos, max)\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true }\n\n  // search end of block\n  let nextLine = startLine\n  let haveEndMarker = false\n\n  for (;;) {\n    nextLine++\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue\n    }\n\n    pos = state.skipChars(pos, marker)\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos)\n\n    if (pos < max) { continue }\n\n    haveEndMarker = true\n    // found!\n    break\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine]\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0)\n\n  const token   = state.push('fence', 'code', 0)\n  token.info    = params\n  token.content = state.getLines(startLine + 1, nextLine, len, true)\n  token.markup  = markup\n  token.map     = [startLine, state.line]\n\n  return true\n}\n","// Block quotes\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function blockquote (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  const oldLineMax = state.lineMax\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos) !== 0x3E/* > */) { return false }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true }\n\n  const oldBMarks  = []\n  const oldBSCount = []\n  const oldSCount  = []\n  const oldTShift  = []\n\n  const terminatorRules = state.md.block.ruler.getRules('blockquote')\n\n  const oldParentType = state.parentType\n  state.parentType = 'blockquote'\n  let lastLineEmpty = false\n  let nextLine\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    const isOutdented = state.sCount[nextLine] < state.blkIndent\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    max = state.eMarks[nextLine]\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      let initial = state.sCount[nextLine] + 1\n      let spaceAfterMarker\n      let adjustTab\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++\n        initial++\n        adjustTab = false\n        spaceAfterMarker = true\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true\n\n        if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++\n          initial++\n          adjustTab = false\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true\n        }\n      } else {\n        spaceAfterMarker = false\n      }\n\n      let offset = initial\n      oldBMarks.push(state.bMarks[nextLine])\n      state.bMarks[nextLine] = pos\n\n      while (pos < max) {\n        const ch = state.src.charCodeAt(pos)\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4\n          } else {\n            offset++\n          }\n        } else {\n          break\n        }\n\n        pos++\n      }\n\n      lastLineEmpty = pos >= max\n\n      oldBSCount.push(state.bsCount[nextLine])\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0)\n\n      oldSCount.push(state.sCount[nextLine])\n      state.sCount[nextLine] = offset - initial\n\n      oldTShift.push(state.tShift[nextLine])\n      state.tShift[nextLine] = pos - state.bMarks[nextLine]\n      continue\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break }\n\n    // Case 3: another tag found.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine])\n        oldBSCount.push(state.bsCount[nextLine])\n        oldTShift.push(state.tShift[nextLine])\n        oldSCount.push(state.sCount[nextLine])\n        state.sCount[nextLine] -= state.blkIndent\n      }\n\n      break\n    }\n\n    oldBMarks.push(state.bMarks[nextLine])\n    oldBSCount.push(state.bsCount[nextLine])\n    oldTShift.push(state.tShift[nextLine])\n    oldSCount.push(state.sCount[nextLine])\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1\n  }\n\n  const oldIndent = state.blkIndent\n  state.blkIndent = 0\n\n  const token_o  = state.push('blockquote_open', 'blockquote', 1)\n  token_o.markup = '>'\n  const lines = [startLine, 0]\n  token_o.map    = lines\n\n  state.md.block.tokenize(state, startLine, nextLine)\n\n  const token_c  = state.push('blockquote_close', 'blockquote', -1)\n  token_c.markup = '>'\n\n  state.lineMax = oldLineMax\n  state.parentType = oldParentType\n  lines[1] = state.line\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (let i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i]\n    state.tShift[i + startLine] = oldTShift[i]\n    state.sCount[i + startLine] = oldSCount[i]\n    state.bsCount[i + startLine] = oldBSCount[i]\n  }\n  state.blkIndent = oldIndent\n\n  return true\n}\n","// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n","// Lists\n\nimport { isSpace } from '../common/utils.mjs'\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker (state, startLine) {\n  const max = state.eMarks[startLine]\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n\n  const marker = state.src.charCodeAt(pos++)\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1\n  }\n\n  if (pos < max) {\n    const ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1\n    }\n  }\n\n  return pos\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker (state, startLine) {\n  const start = state.bMarks[startLine] + state.tShift[startLine]\n  const max = state.eMarks[startLine]\n  let pos = start\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1 }\n\n  let ch = state.src.charCodeAt(pos++)\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1 }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1 }\n\n    ch = state.src.charCodeAt(pos++)\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1 }\n\n      continue\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break\n    }\n\n    return -1\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos)\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1\n    }\n  }\n  return pos\n}\n\nfunction markTightParagraphs (state, idx) {\n  const level = state.level + 2\n\n  for (let i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true\n      state.tokens[i].hidden = true\n      i += 2\n    }\n  }\n}\n\nexport default function list (state, startLine, endLine, silent) {\n  let max, pos, start, token\n  let nextLine = startLine\n  let tight = true\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[nextLine] - state.listIndent >= 4 &&\n      state.sCount[nextLine] < state.blkIndent) {\n    return false\n  }\n\n  let isTerminatingParagraph = false\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true\n    }\n  }\n\n  // Detect list type and position after marker\n  let isOrdered\n  let markerValue\n  let posAfterMarker\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true\n    start = state.bMarks[nextLine] + state.tShift[nextLine]\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1))\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false\n  } else {\n    return false\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false\n  }\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true }\n\n  // We should terminate list on style change. Remember first one to compare.\n  const markerCharCode = state.src.charCodeAt(posAfterMarker - 1)\n\n  // Start list\n  const listTokIdx = state.tokens.length\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1)\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]]\n    }\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1)\n  }\n\n  const listLines = [nextLine, 0]\n  token.map    = listLines\n  token.markup = String.fromCharCode(markerCharCode)\n\n  //\n  // Iterate list items\n  //\n\n  let prevEmptyEnd = false\n  const terminatorRules = state.md.block.ruler.getRules('list')\n\n  const oldParentType = state.parentType\n  state.parentType = 'list'\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker\n    max = state.eMarks[nextLine]\n\n    const initial = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4\n      } else if (ch === 0x20) {\n        offset++\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    const contentStart = pos\n    let indentAfterMarker\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1\n    } else {\n      indentAfterMarker = offset - initial\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1 }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    const indent = initial + indentAfterMarker\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1)\n    token.markup = String.fromCharCode(markerCharCode)\n    const itemLines = [nextLine, 0]\n    token.map    = itemLines\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1)\n    }\n\n    // change current state, then restore it after parser subcall\n    const oldTight = state.tight\n    const oldTShift = state.tShift[nextLine]\n    const oldSCount = state.sCount[nextLine]\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    const oldListIndent = state.listIndent\n    state.listIndent = state.blkIndent\n    state.blkIndent = indent\n\n    state.tight = true\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine]\n    state.sCount[nextLine] = offset\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine)\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true)\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - nextLine) > 1 && state.isEmpty(state.line - 1)\n\n    state.blkIndent = state.listIndent\n    state.listIndent = oldListIndent\n    state.tShift[nextLine] = oldTShift\n    state.sCount[nextLine] = oldSCount\n    state.tight = oldTight\n\n    token        = state.push('list_item_close', 'li', -1)\n    token.markup = String.fromCharCode(markerCharCode)\n\n    nextLine = state.line\n    itemLines[1] = nextLine\n\n    if (nextLine >= endLine) { break }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break }\n\n    // fail if terminating block found\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n      start = state.bMarks[nextLine] + state.tShift[nextLine]\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine)\n      if (posAfterMarker < 0) { break }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1)\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1)\n  }\n  token.markup = String.fromCharCode(markerCharCode)\n\n  listLines[1] = nextLine\n  state.line = nextLine\n\n  state.parentType = oldParentType\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx)\n  }\n\n  return true\n}\n","import { isSpace, normalizeReference } from '../common/utils.mjs'\n\nexport default function reference (state, startLine, _endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n  let nextLine = startLine + 1\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false }\n\n  function getNextLine (nextLine) {\n    const endLine = state.lineMax\n\n    if (nextLine >= endLine || state.isEmpty(nextLine)) {\n      // empty line or end of input\n      return null\n    }\n\n    let isContinuation = false\n\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { isContinuation = true }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { isContinuation = true }\n\n    if (!isContinuation) {\n      const terminatorRules = state.md.block.ruler.getRules('reference')\n      const oldParentType = state.parentType\n      state.parentType = 'reference'\n\n      // Some tags can terminate paragraph without empty line.\n      let terminate = false\n      for (let i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true\n          break\n        }\n      }\n\n      state.parentType = oldParentType\n      if (terminate) {\n        // terminated by another block\n        return null\n      }\n    }\n\n    const pos = state.bMarks[nextLine] + state.tShift[nextLine]\n    const max = state.eMarks[nextLine]\n\n    // max + 1 explicitly includes the newline\n    return state.src.slice(pos, max + 1)\n  }\n\n  let str = state.src.slice(pos, max + 1)\n\n  max = str.length\n  let labelEnd = -1\n\n  for (pos = 1; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x5B /* [ */) {\n      return false\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos\n      break\n    } else if (ch === 0x0A /* \\n */) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (ch === 0x5C /* \\ */) {\n      pos++\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        const lineContent = getNextLine(nextLine)\n        if (lineContent !== null) {\n          str += lineContent\n          max = str.length\n          nextLine++\n        }\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  const destRes = state.md.helpers.parseLinkDestination(str, pos, max)\n  if (!destRes.ok) { return false }\n\n  const href = state.md.normalizeLink(destRes.str)\n  if (!state.md.validateLink(href)) { return false }\n\n  pos = destRes.pos\n\n  // save cursor state, we could require to rollback later\n  const destEndPos = pos\n  const destEndLineNo = nextLine\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  const start = pos\n  for (; pos < max; pos++) {\n    const ch = str.charCodeAt(pos)\n    if (ch === 0x0A) {\n      const lineContent = getNextLine(nextLine)\n      if (lineContent !== null) {\n        str += lineContent\n        max = str.length\n        nextLine++\n      }\n    } else if (isSpace(ch)) {\n      /* eslint no-empty:0 */\n    } else {\n      break\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  let titleRes = state.md.helpers.parseLinkTitle(str, pos, max)\n  while (titleRes.can_continue) {\n    const lineContent = getNextLine(nextLine)\n    if (lineContent === null) break\n    str += lineContent\n    pos = max\n    max = str.length\n    nextLine++\n    titleRes = state.md.helpers.parseLinkTitle(str, pos, max, titleRes)\n  }\n  let title\n\n  if (pos < max && start !== pos && titleRes.ok) {\n    title = titleRes.str\n    pos = titleRes.pos\n  } else {\n    title = ''\n    pos = destEndPos\n    nextLine = destEndLineNo\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    const ch = str.charCodeAt(pos)\n    if (!isSpace(ch)) { break }\n    pos++\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = ''\n      pos = destEndPos\n      nextLine = destEndLineNo\n      while (pos < max) {\n        const ch = str.charCodeAt(pos)\n        if (!isSpace(ch)) { break }\n        pos++\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false\n  }\n\n  const label = normalizeReference(str.slice(1, labelEnd))\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /* istanbul ignore if */\n  if (silent) { return true }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {}\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title, href }\n  }\n\n  state.line = nextLine\n  return true\n}\n","// List of valid html blocks names, according to commonmark spec\n// https://spec.commonmark.org/0.30/#html-blocks\n\nexport default [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n","// Regexps to match html elements\n\nconst attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*'\n\nconst unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+'\nconst single_quoted = \"'[^']*'\"\nconst double_quoted = '\"[^\"]*\"'\n\nconst attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')'\n\nconst attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)'\n\nconst open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>'\n\nconst close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>'\nconst comment     = '<!---?>|<!--(?:[^-]|-[^-]|--[^>])*-->'\nconst processing  = '<[?][\\\\s\\\\S]*?[?]>'\nconst declaration = '<![A-Za-z][^>]*>'\nconst cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>'\n\nconst HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')')\nconst HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')')\n\nexport { HTML_TAG_RE, HTML_OPEN_CLOSE_TAG_RE }\n","// HTML block\n\nimport block_names from '../common/html_blocks.mjs'\nimport { HTML_OPEN_CLOSE_TAG_RE } from '../common/html_re.mjs'\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nconst HTML_SEQUENCES = [\n  [/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true],\n  [/^<!--/,        /-->/,   true],\n  [/^<\\?/,         /\\?>/,   true],\n  [/^<![A-Z]/,     />/,     true],\n  [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n  [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n  [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false]\n]\n\nexport default function html_block (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  if (!state.md.options.html) { return false }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  let lineText = state.src.slice(pos, max)\n\n  let i = 0\n  for (; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break }\n  }\n  if (i === HTML_SEQUENCES.length) { return false }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2]\n  }\n\n  let nextLine = startLine + 1\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      max = state.eMarks[nextLine]\n      lineText = state.src.slice(pos, max)\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++ }\n        break\n      }\n    }\n  }\n\n  state.line = nextLine\n\n  const token   = state.push('html_block', '', 0)\n  token.map     = [startLine, nextLine]\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true)\n\n  return true\n}\n","// heading (#, ##, ...)\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function heading (state, startLine, endLine, silent) {\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  let max = state.eMarks[startLine]\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let ch  = state.src.charCodeAt(pos)\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false }\n\n  // count heading level\n  let level = 1\n  ch = state.src.charCodeAt(++pos)\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++\n    ch = state.src.charCodeAt(++pos)\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false }\n\n  if (silent) { return true }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos)\n  const tmp = state.skipCharsBack(max, 0x23, pos) // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp\n  }\n\n  state.line = startLine + 1\n\n  const token_o  = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup = '########'.slice(0, level)\n  token_o.map    = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = state.src.slice(pos, max).trim()\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  const token_c  = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup = '########'.slice(0, level)\n\n  return true\n}\n","// lheading (---, ===)\n\nexport default function lheading (state, startLine, endLine/*, silent */) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  const oldParentType = state.parentType\n  state.parentType = 'paragraph' // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  let level = 0\n  let marker\n  let nextLine = startLine + 1\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      let pos = state.bMarks[nextLine] + state.tShift[nextLine]\n      const max = state.eMarks[nextLine]\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos)\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker)\n          pos = state.skipSpaces(pos)\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2)\n            break\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine + 1\n\n  const token_o    = state.push('heading_open', 'h' + String(level), 1)\n  token_o.markup   = String.fromCharCode(marker)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line - 1]\n  token_i.children = []\n\n  const token_c    = state.push('heading_close', 'h' + String(level), -1)\n  token_c.markup   = String.fromCharCode(marker)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateBlock from './rules_block/state_block.mjs'\n\nimport r_table from './rules_block/table.mjs'\nimport r_code from './rules_block/code.mjs'\nimport r_fence from './rules_block/fence.mjs'\nimport r_blockquote from './rules_block/blockquote.mjs'\nimport r_hr from './rules_block/hr.mjs'\nimport r_list from './rules_block/list.mjs'\nimport r_reference from './rules_block/reference.mjs'\nimport r_html_block from './rules_block/html_block.mjs'\nimport r_heading from './rules_block/heading.mjs'\nimport r_lheading from './rules_block/lheading.mjs'\nimport r_paragraph from './rules_block/paragraph.mjs'\n\nconst _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  ['table',      r_table,      ['paragraph', 'reference']],\n  ['code',       r_code],\n  ['fence',      r_fence,      ['paragraph', 'reference', 'blockquote', 'list']],\n  ['blockquote', r_blockquote, ['paragraph', 'reference', 'blockquote', 'list']],\n  ['hr',         r_hr,         ['paragraph', 'reference', 'blockquote', 'list']],\n  ['list',       r_list,       ['paragraph', 'reference', 'blockquote']],\n  ['reference',  r_reference],\n  ['html_block', r_html_block, ['paragraph', 'reference', 'blockquote']],\n  ['heading',    r_heading,    ['paragraph', 'reference', 'blockquote']],\n  ['lheading',   r_lheading],\n  ['paragraph',  r_paragraph]\n]\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock () {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() })\n  }\n}\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  let line = startLine\n  let hasEmptyLines = false\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line)\n    if (line >= endLine) { break }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine\n      break\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n    const prevLine = state.line\n    let ok = false\n\n    for (let i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false)\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\")\n        }\n        break\n      }\n    }\n\n    // this can only happen if user disables paragraph rule\n    if (!ok) throw new Error('none of the block rules matched')\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true\n    }\n\n    line = state.line\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true\n      line++\n      state.line = line\n    }\n  }\n}\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  if (!src) { return }\n\n  const state = new this.State(src, md, env, outTokens)\n\n  this.tokenize(state, state.line, state.lineMax)\n}\n\nParserBlock.prototype.State = StateBlock\n\nexport default ParserBlock\n","// Inline parser state\n\nimport Token from '../token.mjs'\nimport { isWhiteSpace, isPunctChar, isMdAsciiPunct } from '../common/utils.mjs'\n\nfunction StateInline (src, md, env, outTokens) {\n  this.src = src\n  this.env = env\n  this.md = md\n  this.tokens = outTokens\n  this.tokens_meta = Array(outTokens.length)\n\n  this.pos = 0\n  this.posMax = this.src.length\n  this.level = 0\n  this.pending = ''\n  this.pendingLevel = 0\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {}\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = []\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = []\n\n  // backtick length => last seen position\n  this.backticks = {}\n  this.backticksScanned = false\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  const token = new Token('text', '', 0)\n  token.content = this.pending\n  token.level = this.pendingLevel\n  this.tokens.push(token)\n  this.pending = ''\n  return token\n}\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending()\n  }\n\n  const token = new Token(type, tag, nesting)\n  let token_meta = null\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--\n    this.delimiters = this._prev_delimiters.pop()\n  }\n\n  token.level = this.level\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++\n    this._prev_delimiters.push(this.delimiters)\n    this.delimiters = []\n    token_meta = { delimiters: this.delimiters }\n  }\n\n  this.pendingLevel = this.level\n  this.tokens.push(token)\n  this.tokens_meta.push(token_meta)\n  return token\n}\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  const max = this.posMax\n  const marker = this.src.charCodeAt(start)\n\n  // treat beginning of the line as a whitespace\n  const lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20\n\n  let pos = start\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++ }\n\n  const count = pos - start\n\n  // treat end of the line as a whitespace\n  const nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20\n\n  const isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar))\n  const isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar))\n\n  const isLastWhiteSpace = isWhiteSpace(lastChar)\n  const isNextWhiteSpace = isWhiteSpace(nextChar)\n\n  const left_flanking =\n    !isNextWhiteSpace && (!isNextPunctChar || isLastWhiteSpace || isLastPunctChar)\n  const right_flanking =\n    !isLastWhiteSpace && (!isLastPunctChar || isNextWhiteSpace || isNextPunctChar)\n\n  const can_open  = left_flanking  && (canSplitWord || !right_flanking || isLastPunctChar)\n  const can_close = right_flanking && (canSplitWord || !left_flanking  || isNextPunctChar)\n\n  return { can_open, can_close, length: count }\n}\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token\n\nexport default StateInline\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar (ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true\n    default:\n      return false\n  }\n}\n\nexport default function text (state, silent) {\n  let pos = state.pos\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++\n  }\n\n  if (pos === state.pos) { return false }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos) }\n\n  state.pos = pos\n\n  return true\n}\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParserInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n}; */\n","// Process links like https://example.org/\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nconst SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i\n\nexport default function linkify (state, silent) {\n  if (!state.md.options.linkify) return false\n  if (state.linkLevel > 0) return false\n\n  const pos = state.pos\n  const max = state.posMax\n\n  if (pos + 3 > max) return false\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false\n\n  const match = state.pending.match(SCHEME_RE)\n  if (!match) return false\n\n  const proto = match[1]\n\n  const link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length))\n  if (!link) return false\n\n  let url = link.url\n\n  // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n  if (url.length <= proto.length) return false\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '')\n\n  const fullUrl = state.md.normalizeLink(url)\n  if (!state.md.validateLink(fullUrl)) return false\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length)\n\n    const token_o = state.push('link_open', 'a', 1)\n    token_o.attrs = [['href', fullUrl]]\n    token_o.markup = 'linkify'\n    token_o.info = 'auto'\n\n    const token_t = state.push('text', '', 0)\n    token_t.content = state.md.normalizeLinkText(url)\n\n    const token_c = state.push('link_close', 'a', -1)\n    token_c.markup = 'linkify'\n    token_c.info = 'auto'\n  }\n\n  state.pos += url.length - proto.length\n  return true\n}\n","// Proceess '\\n'\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function newline (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false }\n\n  const pmax = state.pending.length - 1\n  const max = state.posMax\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        let ws = pmax - 1\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--\n\n        state.pending = state.pending.slice(0, ws)\n        state.push('hardbreak', 'br', 0)\n      } else {\n        state.pending = state.pending.slice(0, -1)\n        state.push('softbreak', 'br', 0)\n      }\n    } else {\n      state.push('softbreak', 'br', 0)\n    }\n  }\n\n  pos++\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++ }\n\n  state.pos = pos\n  return true\n}\n","// Process escaped chars and hardbreaks\n\nimport { isSpace } from '../common/utils.mjs'\n\nconst ESCAPED = []\n\nfor (let i = 0; i < 256; i++) { ESCAPED.push(0) }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1 })\n\nexport default function escape (state, silent) {\n  let pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false\n  pos++\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false\n\n  let ch1 = state.src.charCodeAt(pos)\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0)\n    }\n\n    pos++\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos)\n      if (!isSpace(ch1)) break\n      pos++\n    }\n\n    state.pos = pos\n    return true\n  }\n\n  let escapedStr = state.src[pos]\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    const ch2 = state.src.charCodeAt(pos + 1)\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1]\n      pos++\n    }\n  }\n\n  const origStr = '\\\\' + escapedStr\n\n  if (!silent) {\n    const token = state.push('text_special', '', 0)\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr\n    } else {\n      token.content = origStr\n    }\n\n    token.markup = origStr\n    token.info   = 'escape'\n  }\n\n  state.pos = pos + 1\n  return true\n}\n","// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n","// ~~strike through~~\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction strikethrough_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x7E/* ~ */) { return false }\n\n  const scanned = state.scanDelims(state.pos, true)\n  let len = scanned.length\n  const ch = String.fromCharCode(marker)\n\n  if (len < 2) { return false }\n\n  let token\n\n  if (len % 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch\n    len--\n  }\n\n  for (let i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0)\n    token.content = ch + ch\n\n    state.delimiters.push({\n      marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  let token\n  const loneMarkers = []\n  const max = delimiters.length\n\n  for (let i = 0; i < max; i++) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue\n    }\n\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    token         = state.tokens[startDelim.token]\n    token.type    = 's_open'\n    token.tag     = 's'\n    token.nesting = 1\n    token.markup  = '~~'\n    token.content = ''\n\n    token         = state.tokens[endDelim.token]\n    token.type    = 's_close'\n    token.tag     = 's'\n    token.nesting = -1\n    token.markup  = '~~'\n    token.content = ''\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1)\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    const i = loneMarkers.pop()\n    let j = i + 1\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++\n    }\n\n    j--\n\n    if (i !== j) {\n      token = state.tokens[j]\n      state.tokens[j] = state.tokens[i]\n      state.tokens[i] = token\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction strikethrough_postProcess (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: strikethrough_tokenize,\n  postProcess: strikethrough_postProcess\n}\n","// Process *this* and _that_\n//\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nfunction emphasis_tokenize (state, silent) {\n  const start = state.pos\n  const marker = state.src.charCodeAt(start)\n\n  if (silent) { return false }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false }\n\n  const scanned = state.scanDelims(state.pos, marker === 0x2A)\n\n  for (let i = 0; i < scanned.length; i++) {\n    const token = state.push('text', '', 0)\n    token.content = String.fromCharCode(marker)\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    })\n  }\n\n  state.pos += scanned.length\n\n  return true\n}\n\nfunction postProcess (state, delimiters) {\n  const max = delimiters.length\n\n  for (let i = max - 1; i >= 0; i--) {\n    const startDelim = delimiters[i]\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue\n    }\n\n    const endDelim = delimiters[startDelim.end]\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    const isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1\n\n    const ch = String.fromCharCode(startDelim.marker)\n\n    const token_o   = state.tokens[startDelim.token]\n    token_o.type    = isStrong ? 'strong_open' : 'em_open'\n    token_o.tag     = isStrong ? 'strong' : 'em'\n    token_o.nesting = 1\n    token_o.markup  = isStrong ? ch + ch : ch\n    token_o.content = ''\n\n    const token_c   = state.tokens[endDelim.token]\n    token_c.type    = isStrong ? 'strong_close' : 'em_close'\n    token_c.tag     = isStrong ? 'strong' : 'em'\n    token_c.nesting = -1\n    token_c.markup  = isStrong ? ch + ch : ch\n    token_c.content = ''\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = ''\n      state.tokens[delimiters[startDelim.end + 1].token].content = ''\n      i--\n    }\n  }\n}\n\n// Walk through delimiter list and replace text tokens with tags\n//\nfunction emphasis_post_process (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  postProcess(state, state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters)\n    }\n  }\n}\n\nexport default {\n  tokenize: emphasis_tokenize,\n  postProcess: emphasis_post_process\n}\n","// Process [link](<to> \"stuff\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function link (state, silent) {\n  let code, label, res, ref\n  let href = ''\n  let title = ''\n  let start = state.pos\n  let parseReference = true\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false }\n\n  const oldPos = state.pos\n  const max = state.posMax\n  const labelStart = state.pos + 1\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  let pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str\n        pos = res.pos\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos)\n          if (!isSpace(code) && code !== 0x0A) { break }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true\n    }\n    pos++\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart\n    state.posMax = labelEnd\n\n    const token_o = state.push('link_open', 'a', 1)\n    const attrs = [['href', href]]\n    token_o.attrs  = attrs\n    if (title) {\n      attrs.push(['title', title])\n    }\n\n    state.linkLevel++\n    state.md.inline.tokenize(state)\n    state.linkLevel--\n\n    state.push('link_close', 'a', -1)\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process ![image](<src> \"title\")\n\nimport { normalizeReference, isSpace } from '../common/utils.mjs'\n\nexport default function image (state, silent) {\n  let code, content, label, pos, ref, res, title, start\n  let href = ''\n  const oldPos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false }\n\n  const labelStart = state.pos + 2\n  const labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false)\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false }\n\n  pos = labelEnd + 1\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n    if (pos >= max) { return false }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax)\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str)\n      if (state.md.validateLink(href)) {\n        pos = res.pos\n      } else {\n        href = ''\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos)\n      if (!isSpace(code) && code !== 0x0A) { break }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax)\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str\n      pos = res.pos\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos)\n        if (!isSpace(code) && code !== 0x0A) { break }\n      }\n    } else {\n      title = ''\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos\n      return false\n    }\n    pos++\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1\n      pos = state.md.helpers.parseLinkLabel(state, pos)\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++)\n      } else {\n        pos = labelEnd + 1\n      }\n    } else {\n      pos = labelEnd + 1\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd) }\n\n    ref = state.env.references[normalizeReference(label)]\n    if (!ref) {\n      state.pos = oldPos\n      return false\n    }\n    href = ref.href\n    title = ref.title\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd)\n\n    const tokens = []\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens\n    )\n\n    const token = state.push('image', 'img', 0)\n    const attrs = [['src', href], ['alt', '']]\n    token.attrs = attrs\n    token.children = tokens\n    token.content = content\n\n    if (title) {\n      attrs.push(['title', title])\n    }\n  }\n\n  state.pos = pos\n  state.posMax = max\n  return true\n}\n","// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n","// Process html tags\n\nimport { HTML_TAG_RE } from '../common/html_re.mjs'\n\nfunction isLinkOpen (str) {\n  return /^<a[>\\s]/i.test(str)\n}\nfunction isLinkClose (str) {\n  return /^<\\/a\\s*>/i.test(str)\n}\n\nfunction isLetter (ch) {\n  /* eslint no-bitwise:0 */\n  const lc = ch | 0x20 // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */)\n}\n\nexport default function html_inline (state, silent) {\n  if (!state.md.options.html) { return false }\n\n  // Check start\n  const max = state.posMax\n  const pos = state.pos\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false\n  }\n\n  // Quick fail on second char\n  const ch = state.src.charCodeAt(pos + 1)\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false\n  }\n\n  const match = state.src.slice(pos).match(HTML_TAG_RE)\n  if (!match) { return false }\n\n  if (!silent) {\n    const token = state.push('html_inline', '', 0)\n    token.content = match[0]\n\n    if (isLinkOpen(token.content))  state.linkLevel++\n    if (isLinkClose(token.content)) state.linkLevel--\n  }\n  state.pos += match[0].length\n  return true\n}\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\nimport { decodeHTML } from 'entities'\nimport { isValidEntityCode, fromCodePoint } from '../common/utils.mjs'\n\nconst DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i\nconst NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i\n\nexport default function entity (state, silent) {\n  const pos = state.pos\n  const max = state.posMax\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false\n\n  if (pos + 1 >= max) return false\n\n  const ch = state.src.charCodeAt(pos + 1)\n\n  if (ch === 0x23 /* # */) {\n    const match = state.src.slice(pos).match(DIGITAL_RE)\n    if (match) {\n      if (!silent) {\n        const code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10)\n\n        const token   = state.push('text_special', '', 0)\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD)\n        token.markup  = match[0]\n        token.info    = 'entity'\n      }\n      state.pos += match[0].length\n      return true\n    }\n  } else {\n    const match = state.src.slice(pos).match(NAMED_RE)\n    if (match) {\n      const decoded = decodeHTML(match[0])\n      if (decoded !== match[0]) {\n        if (!silent) {\n          const token   = state.push('text_special', '', 0)\n          token.content = decoded\n          token.markup  = match[0]\n          token.info    = 'entity'\n        }\n        state.pos += match[0].length\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","// For each opening emphasis-like marker find a matching closing one\n//\n\nfunction processDelimiters (delimiters) {\n  const openersBottom = {}\n  const max = delimiters.length\n\n  if (!max) return\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  let headerIdx = 0\n  let lastTokenIdx = -2 // needs any value lower than -1\n  const jumps = []\n\n  for (let closerIdx = 0; closerIdx < max; closerIdx++) {\n    const closer = delimiters[closerIdx]\n\n    jumps.push(0)\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx\n    }\n\n    lastTokenIdx = closer.token\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0\n\n    if (!closer.close) continue\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    /* eslint-disable-next-line no-prototype-builtins */\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1]\n    }\n\n    const minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)]\n\n    let openerIdx = headerIdx - jumps[headerIdx] - 1\n\n    let newMinOpenerIdx = openerIdx\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      const opener = delimiters[openerIdx]\n\n      if (opener.marker !== closer.marker) continue\n\n      if (opener.open && opener.end < 0) {\n        let isOddMatch = false\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          const lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open\n            ? jumps[openerIdx - 1] + 1\n            : 0\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump\n          jumps[openerIdx] = lastJump\n\n          closer.open  = false\n          opener.end   = closerIdx\n          opener.close = false\n          newMinOpenerIdx = -1\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2\n          break\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx\n    }\n  }\n}\n\nexport default function link_pairs (state) {\n  const tokens_meta = state.tokens_meta\n  const max = state.tokens_meta.length\n\n  processDelimiters(state.delimiters)\n\n  for (let curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters)\n    }\n  }\n}\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\nexport default function fragments_join (state) {\n  let curr, last\n  let level = 0\n  const tokens = state.tokens\n  const max = state.tokens.length\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level-- // closing tag\n    tokens[curr].level = level\n    if (tokens[curr].nesting > 0) level++ // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr] }\n\n      last++\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last\n  }\n}\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateInline from './rules_inline/state_inline.mjs'\n\nimport r_text from './rules_inline/text.mjs'\nimport r_linkify from './rules_inline/linkify.mjs'\nimport r_newline from './rules_inline/newline.mjs'\nimport r_escape from './rules_inline/escape.mjs'\nimport r_backticks from './rules_inline/backticks.mjs'\nimport r_strikethrough from './rules_inline/strikethrough.mjs'\nimport r_emphasis from './rules_inline/emphasis.mjs'\nimport r_link from './rules_inline/link.mjs'\nimport r_image from './rules_inline/image.mjs'\nimport r_autolink from './rules_inline/autolink.mjs'\nimport r_html_inline from './rules_inline/html_inline.mjs'\nimport r_entity from './rules_inline/entity.mjs'\n\nimport r_balance_pairs from './rules_inline/balance_pairs.mjs'\nimport r_fragments_join from './rules_inline/fragments_join.mjs'\n\n// Parser rules\n\nconst _rules = [\n  ['text',            r_text],\n  ['linkify',         r_linkify],\n  ['newline',         r_newline],\n  ['escape',          r_escape],\n  ['backticks',       r_backticks],\n  ['strikethrough',   r_strikethrough.tokenize],\n  ['emphasis',        r_emphasis.tokenize],\n  ['link',            r_link],\n  ['image',           r_image],\n  ['autolink',        r_autolink],\n  ['html_inline',     r_html_inline],\n  ['entity',          r_entity]\n]\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nconst _rules2 = [\n  ['balance_pairs',   r_balance_pairs],\n  ['strikethrough',   r_strikethrough.postProcess],\n  ['emphasis',        r_emphasis.postProcess],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  ['fragments_join',  r_fragments_join]\n]\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline () {\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler()\n\n  for (let i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1])\n  }\n}\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  const pos = state.pos\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const maxNesting = state.md.options.maxNesting\n  const cache = state.cache\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos]\n    return\n  }\n\n  let ok = false\n\n  if (state.level < maxNesting) {\n    for (let i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++\n      ok = rules[i](state, true)\n      state.level--\n\n      if (ok) {\n        if (pos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n        break\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax\n  }\n\n  if (!ok) { state.pos++ }\n  cache[pos] = state.pos\n}\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  const rules = this.ruler.getRules('')\n  const len = rules.length\n  const end = state.posMax\n  const maxNesting = state.md.options.maxNesting\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    const prevPos = state.pos\n    let ok = false\n\n    if (state.level < maxNesting) {\n      for (let i = 0; i < len; i++) {\n        ok = rules[i](state, false)\n        if (ok) {\n          if (prevPos >= state.pos) { throw new Error(\"inline rule didn't increment state.pos\") }\n          break\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break }\n      continue\n    }\n\n    state.pending += state.src[state.pos++]\n  }\n\n  if (state.pending) {\n    state.pushPending()\n  }\n}\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  const state = new this.State(str, md, env, outTokens)\n\n  this.tokenize(state)\n\n  const rules = this.ruler2.getRules('')\n  const len = rules.length\n\n  for (let i = 0; i < len; i++) {\n    rules[i](state)\n  }\n}\n\nParserInline.prototype.State = StateInline\n\nexport default ParserInline\n","import { Any, Cc, Z, P } from 'uc.micro'\n\nexport default function (opts) {\n  const re = {}\n  opts = opts || {}\n\n  re.src_Any = Any.source\n  re.src_Cc = Cc.source\n  re.src_Z = Z.source\n  re.src_P = P.source\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|')\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|')\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  const text_separators = '[><\\uff5c]'\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?'\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?'\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))'\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n\n          // allow `I'm_king` if no pair found\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +\n\n          // google has many dots in \"google search\" links (#66, #81).\n          // github has ... in commit range links,\n          // Restrict to\n          // - english\n          // - percent-encoded\n          // - parts of file path\n          // - params separator\n          // until more examples found.\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' +\n\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---']\n            ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            : '\\\\-+|'\n          ) +\n          // allow `,,,` in paths\n          ',(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `;` if not followed by space-like char\n          ';(?!' + re.src_ZCc + '|$)|' +\n\n          // allow `!!!` in paths, but not at the end\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +\n\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?'\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*'\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}'\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')'\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')'\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/* _root */ + ')' +\n    ')'\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')'\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))'\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator\n\n  //\n  // Main rules\n  //\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))'\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')'\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')'\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')'\n\n  return re\n}\n","import reFactory from './lib/re.mjs'\n\n//\n// Helpers\n//\n\n// Merge objects\n//\nfunction assign (obj /* from1, from2, from3, ... */) {\n  const sources = Array.prototype.slice.call(arguments, 1)\n\n  sources.forEach(function (source) {\n    if (!source) { return }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key]\n    })\n  })\n\n  return obj\n}\n\nfunction _class (obj) { return Object.prototype.toString.call(obj) }\nfunction isString (obj) { return _class(obj) === '[object String]' }\nfunction isObject (obj) { return _class(obj) === '[object Object]' }\nfunction isRegExp (obj) { return _class(obj) === '[object RegExp]' }\nfunction isFunction (obj) { return _class(obj) === '[object Function]' }\n\nfunction escapeRE (str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&') }\n\n//\n\nconst defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n}\n\nfunction isOptionsObj (obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    /* eslint-disable-next-line no-prototype-builtins */\n    return acc || defaultOptions.hasOwnProperty(k)\n  }, false)\n}\n\nconst defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        )\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length\n      }\n      return 0\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        )\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0 }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0 }\n        return tail.match(self.re.no_http)[0].length\n      }\n      return 0\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      const tail = text.slice(pos)\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        )\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length\n      }\n      return 0\n    }\n  }\n}\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n/* eslint-disable-next-line max-len */\nconst tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nconst tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|')\n\nfunction resetScanCache (self) {\n  self.__index__ = -1\n  self.__text_cache__ = ''\n}\n\nfunction createValidator (re) {\n  return function (text, pos) {\n    const tail = text.slice(pos)\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length\n    }\n    return 0\n  }\n}\n\nfunction createNormalizer () {\n  return function (match, self) {\n    self.normalize(match)\n  }\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile (self) {\n  // Load & clone RE patterns.\n  const re = self.re = reFactory(self.__opts__)\n\n  // Define dynamic patterns\n  const tlds = self.__tlds__.slice()\n\n  self.onCompile()\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re)\n  }\n  tlds.push(re.src_xn)\n\n  re.src_tlds = tlds.join('|')\n\n  function untpl (tpl) { return tpl.replace('%TLDS%', re.src_tlds) }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i')\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i')\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i')\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i')\n\n  //\n  // Compile each schema\n  //\n\n  const aliases = []\n\n  self.__compiled__ = {} // Reset compiled data\n\n  function schemaError (name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val)\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    const val = self.__schemas__[name]\n\n    // skip disabled methods\n    if (val === null) { return }\n\n    const compiled = { validate: null, link: null }\n\n    self.__compiled__[name] = compiled\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate)\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate\n      } else {\n        schemaError(name, val)\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer()\n      } else {\n        schemaError(name, val)\n      }\n\n      return\n    }\n\n    if (isString(val)) {\n      aliases.push(name)\n      return\n    }\n\n    schemaError(name, val)\n  })\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize\n  })\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() }\n\n  //\n  // Build schema condition\n  //\n  const slist = Object.keys(self.__compiled__)\n    .filter(function (name) {\n      // Filter disabled & fake schemas\n      return name.length > 0 && self.__compiled__[name]\n    })\n    .map(escapeRE)\n    .join('|')\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i')\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig')\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i')\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  )\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self)\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match (self, shift) {\n  const start = self.__index__\n  const end = self.__last_index__\n  const text = self.__text_cache__.slice(start, end)\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema = self.__schema__.toLowerCase()\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index = start + shift\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw = text\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text = text\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url = text\n}\n\nfunction createMatch (self, shift) {\n  const match = new Match(self, shift)\n\n  self.__compiled__[match.schema].normalize(match, self)\n\n  return match\n}\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt (schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options)\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas\n      schemas = {}\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options)\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__ = -1\n  this.__last_index__ = -1 // Next scan position\n  this.__schema__ = ''\n  this.__text_cache__ = ''\n\n  this.__schemas__ = assign({}, defaultSchemas, schemas)\n  this.__compiled__ = {}\n\n  this.__tlds__ = tlds_default\n  this.__tlds_replaced__ = false\n\n  this.re = {}\n\n  compile(this)\n}\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add (schema, definition) {\n  this.__schemas__[schema] = definition\n  compile(this)\n  return this\n}\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set (options) {\n  this.__opts__ = assign(this.__opts__, options)\n  return this\n}\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) { return false }\n\n  let m, ml, me, len, shift, next, re, tld_pos, at_pos\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search\n    re.lastIndex = 0\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex)\n      if (len) {\n        this.__schema__ = m[2]\n        this.__index__ = m.index + m[1].length\n        this.__last_index__ = m.index + m[0].length + len\n        break\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test)\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = ''\n            this.__index__ = shift\n            this.__last_index__ = ml.index + ml[0].length\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@')\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length\n        next = me.index + me[0].length\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__ = 'mailto:'\n          this.__index__ = shift\n          this.__last_index__ = next\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0\n}\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest (text) {\n  return this.re.pretest.test(text)\n}\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt (text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this)\n}\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match (text) {\n  const result = []\n  let shift = 0\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift))\n    shift = this.__last_index__\n  }\n\n  // Cut head if cache was used\n  let tail = shift ? text.slice(shift) : text\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift))\n\n    tail = tail.slice(this.__last_index__)\n    shift += this.__last_index__\n  }\n\n  if (result.length) {\n    return result\n  }\n\n  return null\n}\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart (text) {\n  // Reset scan cache\n  this.__text_cache__ = text\n  this.__index__ = -1\n\n  if (!text.length) return null\n\n  const m = this.re.schema_at_start.exec(text)\n  if (!m) return null\n\n  const len = this.testSchemaAt(text, m[2], m[0].length)\n  if (!len) return null\n\n  this.__schema__ = m[2]\n  this.__index__ = m.index + m[1].length\n  this.__last_index__ = m.index + m[0].length + len\n\n  return createMatch(this, 0)\n}\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds (list, keepOld) {\n  list = Array.isArray(list) ? list : [list]\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice()\n    this.__tlds_replaced__ = true\n    compile(this)\n    return this\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n    .sort()\n    .filter(function (el, idx, arr) {\n      return el !== arr[idx - 1]\n    })\n    .reverse()\n\n  compile(this)\n  return this\n}\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize (match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url\n  }\n}\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile () {\n}\n\nexport default LinkifyIt\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7F]/; // Note: U+007F DEL is excluded too.\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, callback) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = callback(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {String} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(domain, callback) {\n\tconst parts = domain.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tdomain = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tdomain = domain.replace(regexSeparators, '\\x2E');\n\tconst labels = domain.split('.');\n\tconst encoded = map(labels, callback).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = codePoints => String.fromCodePoint(...codePoints);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint >= 0x30 && codePoint < 0x3A) {\n\t\treturn 26 + (codePoint - 0x30);\n\t}\n\tif (codePoint >= 0x41 && codePoint < 0x5B) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint >= 0x61 && codePoint < 0x7B) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tconst oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\t\t\tif (digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tconst inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tconst basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue === n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.3.1',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","// markdown-it default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 100\n  },\n\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n}\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: false,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: false,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Commonmark default options\n\nexport default {\n  options: {\n    // Enable HTML tags in source\n    html: true,\n\n    // Use '/' to close single tags (<br />)\n    xhtmlOut: true,\n\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n\n    // CSS language prefix for fenced blocks\n    langPrefix: 'language-',\n\n    // autoconvert URL-like texts to links\n    linkify: false,\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    // Internal protection, recursion limit\n    maxNesting: 20\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n}\n","// Main parser class\n\nimport * as utils from './common/utils.mjs'\nimport * as helpers from './helpers/index.mjs'\nimport Renderer from './renderer.mjs'\nimport ParserCore from './parser_core.mjs'\nimport ParserBlock from './parser_block.mjs'\nimport ParserInline from './parser_inline.mjs'\nimport LinkifyIt from 'linkify-it'\nimport * as mdurl from 'mdurl'\nimport punycode from 'punycode.js'\n\nimport cfg_default from './presets/default.mjs'\nimport cfg_zero from './presets/zero.mjs'\nimport cfg_commonmark from './presets/commonmark.mjs'\n\nconst config = {\n  default: cfg_default,\n  zero: cfg_zero,\n  commonmark: cfg_commonmark\n}\n\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nconst BAD_PROTO_RE = /^(vbscript|javascript|file|data):/\nconst GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/\n\nfunction validateLink (url) {\n  // url should be normalized at this point, and existing entities are decoded\n  const str = url.trim().toLowerCase()\n\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) : true\n}\n\nconst RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:']\n\nfunction normalizeLink (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed))\n}\n\nfunction normalizeLinkText (url) {\n  const parsed = mdurl.parse(url, true)\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname)\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%')\n}\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.mjs) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.mjs) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.mjs) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.mjs) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>` or `<code>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre><code class=\"hljs\">' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre><code class=\"hljs\">' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt (presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options)\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {}\n      presetName = 'default'\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline()\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock()\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore()\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.mjs).\n   **/\n  this.renderer = new Renderer()\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.mjs)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt()\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.mjs).\n   **/\n  this.utils = utils\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers)\n\n  this.options = {}\n  this.configure(presetName)\n\n  if (options) { this.set(options) }\n}\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options)\n  return this\n}\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  const self = this\n\n  if (utils.isString(presets)) {\n    const presetName = presets\n    presets = config[presetName]\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name') }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty') }\n\n  if (presets.options) { self.set(presets.options) }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules)\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2)\n      }\n    })\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.enable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed)\n  }\n\n  return this\n}\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  let result = []\n\n  if (!Array.isArray(list)) { list = [list] }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true))\n  }, this)\n\n  result = result.concat(this.inline.ruler2.disable(list, true))\n\n  const missed = list.filter(function (name) { return result.indexOf(name) < 0 })\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed)\n  }\n  return this\n}\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  const args = [this].concat(Array.prototype.slice.call(arguments, 1))\n  plugin.apply(plugin, args)\n  return this\n}\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String')\n  }\n\n  const state = new this.core.State(src, this, env)\n\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parse(src, env), this.options, env)\n}\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  const state = new this.core.State(src, this, env)\n\n  state.inlineMode = true\n  this.core.process(state)\n\n  return state.tokens\n}\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {}\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env)\n}\n\nexport default MarkdownIt\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","// Markdown rendering service with sanitization for IPLC Forms v3\r\n// Provides secure markdown processing for Title/Subtitle elements\r\n\r\nimport MarkdownIt from 'markdown-it';\r\nimport DOMPurify from 'dompurify';\r\n\r\n// Configure markdown-it with safe settings\r\nconst markdown = new MarkdownIt({\r\n  html: false,        // Disable raw HTML in markdown\r\n  xhtmlOut: true,     // Use '/' to close single tags (<br />)\r\n  breaks: true,       // Convert '\\n' in paragraphs into <br>\r\n  linkify: true,      // Autoconvert URL-like text to links\r\n  typographer: true,  // Enable smart quotes and other typographic replacements\r\n});\r\n\r\n// Configure DOMPurify with strict settings for form elements\r\nconst purifyConfig = {\r\n  ALLOWED_TAGS: [\r\n    'p', 'br', 'strong', 'em', 'u', 'code', \r\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\r\n    'ul', 'ol', 'li', 'blockquote'\r\n  ],\r\n  ALLOWED_ATTR: [],\r\n  ALLOW_DATA_ATTR: false,\r\n  ALLOW_UNKNOWN_PROTOCOLS: false,\r\n  FORBID_TAGS: ['script', 'object', 'embed', 'form', 'input', 'textarea', 'select'],\r\n  FORBID_ATTR: ['onclick', 'onload', 'onerror', 'style'],\r\n  KEEP_CONTENT: true,\r\n  RETURN_DOM: false,\r\n  RETURN_DOM_FRAGMENT: false,\r\n  SANITIZE_DOM: true\r\n};\r\n\r\n/**\r\n * Renders markdown text to sanitized HTML\r\n * @param markdownText - The markdown text to render\r\n * @param options - Optional configuration overrides\r\n * @returns Sanitized HTML string\r\n */\r\nexport function renderMarkdown(\r\n  markdownText: string,\r\n  options?: {\r\n    allowedTags?: string[];\r\n    enableTypographer?: boolean;\r\n    enableBreaks?: boolean;\r\n  }\r\n): string {\r\n  if (!markdownText || typeof markdownText !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  try {\r\n    // Create a custom markdown instance if options are provided\r\n    let mdInstance = markdown;\r\n    if (options?.enableTypographer !== undefined || options?.enableBreaks !== undefined) {\r\n      mdInstance = new MarkdownIt({\r\n        html: false,\r\n        xhtmlOut: true,\r\n        breaks: options?.enableBreaks ?? true,\r\n        linkify: true,\r\n        typographer: options?.enableTypographer ?? true,\r\n      });\r\n    }\r\n\r\n    // Render markdown to HTML\r\n    const renderedHtml = mdInstance.render(markdownText);\r\n    \r\n    // Create custom purify config if allowedTags specified\r\n    const customConfig = options?.allowedTags\r\n      ? { ...purifyConfig, ALLOWED_TAGS: options.allowedTags }\r\n      : purifyConfig;\r\n    \r\n    // Sanitize the HTML output\r\n    const sanitizedHtml = DOMPurify.sanitize(renderedHtml, customConfig);\r\n    \r\n    return sanitizedHtml;\r\n  } catch (error) {\r\n    console.error('Markdown rendering error:', error);\r\n    // Return the original text as plain text fallback\r\n    return DOMPurify.sanitize(markdownText, { ALLOWED_TAGS: [], ALLOWED_ATTR: [] });\r\n  }\r\n}\r\n\r\n/**\r\n * Renders inline markdown (no block elements like paragraphs)\r\n * Useful for titles and labels where you want formatting but not structure\r\n * @param markdownText - The markdown text to render inline\r\n * @returns Sanitized HTML string without block elements\r\n */\r\nexport function renderInlineMarkdown(markdownText: string): string {\r\n  if (!markdownText || typeof markdownText !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  try {\r\n    // Use inline rendering method\r\n    const renderedHtml = markdown.renderInline(markdownText);\r\n    \r\n    // Use more restrictive config for inline content\r\n    const inlineConfig = {\r\n      ...purifyConfig,\r\n      ALLOWED_TAGS: ['strong', 'em', 'u', 'code'], // Only inline formatting\r\n      ALLOWED_ATTR: []\r\n    };\r\n    \r\n    const sanitizedHtml = DOMPurify.sanitize(renderedHtml, inlineConfig);\r\n    \r\n    return sanitizedHtml;\r\n  } catch (error) {\r\n    console.error('Inline markdown rendering error:', error);\r\n    // Return the original text as plain text fallback\r\n    return DOMPurify.sanitize(markdownText, { ALLOWED_TAGS: [], ALLOWED_ATTR: [] });\r\n  }\r\n}\r\n\r\n/**\r\n * Validates if markdown text contains only safe content\r\n * @param markdownText - The markdown text to validate\r\n * @returns Object with validation result and any warnings\r\n */\r\nexport function validateMarkdown(markdownText: string): {\r\n  isValid: boolean;\r\n  warnings: string[];\r\n  sanitizedText: string;\r\n} {\r\n  const warnings: string[] = [];\r\n  \r\n  if (!markdownText || typeof markdownText !== 'string') {\r\n    return { isValid: true, warnings: [], sanitizedText: '' };\r\n  }\r\n\r\n  // Check for potentially unsafe patterns\r\n  const unsafePatterns = [\r\n    { pattern: /<script/i, warning: 'Script tags are not allowed' },\r\n    { pattern: /javascript:/i, warning: 'JavaScript URLs are not allowed' },\r\n    { pattern: /on\\w+\\s*=/i, warning: 'Event handlers are not allowed' },\r\n    { pattern: /<iframe/i, warning: 'IFrame tags are not allowed' },\r\n    { pattern: /<object/i, warning: 'Object tags are not allowed' },\r\n    { pattern: /<embed/i, warning: 'Embed tags are not allowed' },\r\n  ];\r\n\r\n  unsafePatterns.forEach(({ pattern, warning }) => {\r\n    if (pattern.test(markdownText)) {\r\n      warnings.push(warning);\r\n    }\r\n  });\r\n\r\n  try {\r\n    const sanitizedText = renderMarkdown(markdownText);\r\n    return {\r\n      isValid: warnings.length === 0,\r\n      warnings,\r\n      sanitizedText\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      isValid: false,\r\n      warnings: [...warnings, 'Failed to process markdown'],\r\n      sanitizedText: DOMPurify.sanitize(markdownText, { ALLOWED_TAGS: [], ALLOWED_ATTR: [] })\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Strips all markdown formatting and returns plain text\r\n * @param markdownText - The markdown text to convert to plain text\r\n * @returns Plain text string\r\n */\r\nexport function stripMarkdown(markdownText: string): string {\r\n  if (!markdownText || typeof markdownText !== 'string') {\r\n    return '';\r\n  }\r\n\r\n  try {\r\n    // Render markdown then strip all HTML tags\r\n    const htmlText = markdown.render(markdownText);\r\n    const plainText = DOMPurify.sanitize(htmlText, { \r\n      ALLOWED_TAGS: [], \r\n      ALLOWED_ATTR: [],\r\n      KEEP_CONTENT: true \r\n    });\r\n    \r\n    // Clean up extra whitespace\r\n    return plainText.replace(/\\s+/g, ' ').trim();\r\n  } catch (error) {\r\n    console.error('Strip markdown error:', error);\r\n    return markdownText.replace(/[*_`#>\\-+]/g, '').replace(/\\s+/g, ' ').trim();\r\n  }\r\n}\r\n\r\n/**\r\n * Configuration object for markdown service\r\n */\r\nexport const MarkdownConfig = {\r\n  // Default allowed tags for different contexts\r\n  TITLE_TAGS: ['strong', 'em', 'u', 'code'],\r\n  CONTENT_TAGS: ['p', 'br', 'strong', 'em', 'u', 'code', 'ul', 'ol', 'li', 'blockquote'],\r\n  HEADING_TAGS: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'strong', 'em', 'u', 'code'],\r\n  \r\n  // Security settings\r\n  MAX_LENGTH: 10000, // Maximum characters to process\r\n  TIMEOUT: 5000,     // Processing timeout in milliseconds\r\n} as const;\r\n\r\nexport default {\r\n  renderMarkdown,\r\n  renderInlineMarkdown,\r\n  validateMarkdown,\r\n  stripMarkdown,\r\n  MarkdownConfig\r\n};","// Title Element Component for IPLC Forms v3\r\n// Renders configurable titles with markdown support and typography options\r\n\r\nimport React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Switch } from '@/components/ui/switch';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { Type, Palette, Settings } from 'lucide-react';\r\nimport type { FormComponent } from '@/lib/api-form-builder';\r\nimport { renderMarkdown, renderInlineMarkdown } from '@/lib/services/markdown';\r\n\r\nexport interface TitleSubtitleProps {\r\n  text: string;\r\n  level: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n  fontFamily: 'system' | 'serif' | 'sans-serif' | 'monospace';\r\n  fontSize: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\r\n  fontWeight: 'normal' | 'medium' | 'semibold' | 'bold';\r\n  color: string;\r\n  alignment: 'left' | 'center' | 'right';\r\n  marginTop: number;\r\n  marginBottom: number;\r\n  enableMarkdown?: boolean;\r\n}\r\n\r\ninterface TitleElementProps {\r\n  component: FormComponent;\r\n  isEditing?: boolean;\r\n  onUpdate?: (updates: Partial<FormComponent>) => void;\r\n  onRemove?: () => void;\r\n}\r\n\r\nconst fontFamilyMap = {\r\n  system: 'font-system',\r\n  serif: 'font-serif',\r\n  'sans-serif': 'font-sans',\r\n  monospace: 'font-mono'\r\n};\r\n\r\nconst fontSizeMap = {\r\n  xs: 'text-xs',\r\n  sm: 'text-sm',\r\n  base: 'text-base',\r\n  lg: 'text-lg',\r\n  xl: 'text-xl',\r\n  '2xl': 'text-2xl',\r\n  '3xl': 'text-3xl',\r\n  '4xl': 'text-4xl'\r\n};\r\n\r\nconst fontWeightMap = {\r\n  normal: 'font-normal',\r\n  medium: 'font-medium',\r\n  semibold: 'font-semibold',\r\n  bold: 'font-bold'\r\n};\r\n\r\nconst alignmentMap = {\r\n  left: 'text-left',\r\n  center: 'text-center',\r\n  right: 'text-right'\r\n};\r\n\r\nexport const TitleElement: React.FC<TitleElementProps> = ({\r\n  component,\r\n  isEditing = false,\r\n  onUpdate,\r\n  onRemove\r\n}) => {\r\n  const [showSettings, setShowSettings] = useState(false);\r\n  \r\n  // Extract props with defaults\r\n  const props = component.props as TitleSubtitleProps;\r\n  const {\r\n    text = 'Title Text',\r\n    level = 'h2',\r\n    fontFamily = 'system',\r\n    fontSize = 'xl',\r\n    fontWeight = 'semibold',\r\n    color = '#1f2937',\r\n    alignment = 'left',\r\n    marginTop = 16,\r\n    marginBottom = 16,\r\n    enableMarkdown = false\r\n  } = props;\r\n\r\n  const updateProps = (updates: Partial<TitleSubtitleProps>) => {\r\n    if (onUpdate) {\r\n      onUpdate({\r\n        props: {\r\n          ...component.props,\r\n          ...updates\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderTitle = () => {\r\n    const className = `\r\n      ${fontFamilyMap[fontFamily]}\r\n      ${fontSizeMap[fontSize]}\r\n      ${fontWeightMap[fontWeight]}\r\n      ${alignmentMap[alignment]}\r\n      leading-tight\r\n    `.trim().replace(/\\s+/g, ' ');\r\n\r\n    const style = {\r\n      color,\r\n      marginTop: `${marginTop}px`,\r\n      marginBottom: `${marginBottom}px`\r\n    };\r\n\r\n    const commonProps = {\r\n      className,\r\n      style\r\n    };\r\n\r\n    if (enableMarkdown && text) {\r\n      const renderedContent = renderInlineMarkdown(text);\r\n      return React.createElement(level, {\r\n        ...commonProps,\r\n        dangerouslySetInnerHTML: { __html: renderedContent }\r\n      });\r\n    }\r\n\r\n    return React.createElement(level, commonProps, text);\r\n  };\r\n\r\n  const renderPropertyPanel = () => (\r\n    <div className=\"space-y-4 p-4 bg-gray-50 border-t\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <Label className=\"text-sm font-medium\">Title Properties</Label>\r\n        <Button\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => setShowSettings(!showSettings)}\r\n        >\r\n          <Settings className=\"h-4 w-4\" />\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Basic Properties */}\r\n      <div className=\"space-y-3\">\r\n        <div>\r\n          <Label htmlFor=\"title-text\" className=\"text-xs text-gray-600\">Text Content</Label>\r\n          <Input\r\n            id=\"title-text\"\r\n            value={text}\r\n            onChange={(e) => updateProps({ text: e.target.value })}\r\n            placeholder=\"Enter title text...\"\r\n            className=\"mt-1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          <div>\r\n            <Label htmlFor=\"title-level\" className=\"text-xs text-gray-600\">Heading Level</Label>\r\n            <Select value={level} onValueChange={(value) => updateProps({ level: value as TitleSubtitleProps['level'] })}>\r\n              <SelectTrigger className=\"mt-1\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"h1\">H1 - Largest</SelectItem>\r\n                <SelectItem value=\"h2\">H2 - Large</SelectItem>\r\n                <SelectItem value=\"h3\">H3 - Medium</SelectItem>\r\n                <SelectItem value=\"h4\">H4 - Small</SelectItem>\r\n                <SelectItem value=\"h5\">H5 - Smaller</SelectItem>\r\n                <SelectItem value=\"h6\">H6 - Smallest</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <Label htmlFor=\"title-size\" className=\"text-xs text-gray-600\">Font Size</Label>\r\n            <Select value={fontSize} onValueChange={(value) => updateProps({ fontSize: value as TitleSubtitleProps['fontSize'] })}>\r\n              <SelectTrigger className=\"mt-1\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"xs\">Extra Small</SelectItem>\r\n                <SelectItem value=\"sm\">Small</SelectItem>\r\n                <SelectItem value=\"base\">Base</SelectItem>\r\n                <SelectItem value=\"lg\">Large</SelectItem>\r\n                <SelectItem value=\"xl\">Extra Large</SelectItem>\r\n                <SelectItem value=\"2xl\">2X Large</SelectItem>\r\n                <SelectItem value=\"3xl\">3X Large</SelectItem>\r\n                <SelectItem value=\"4xl\">4X Large</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-3\">\r\n          <div>\r\n            <Label htmlFor=\"title-weight\" className=\"text-xs text-gray-600\">Font Weight</Label>\r\n            <Select value={fontWeight} onValueChange={(value) => updateProps({ fontWeight: value as TitleSubtitleProps['fontWeight'] })}>\r\n              <SelectTrigger className=\"mt-1\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"normal\">Normal</SelectItem>\r\n                <SelectItem value=\"medium\">Medium</SelectItem>\r\n                <SelectItem value=\"semibold\">Semi Bold</SelectItem>\r\n                <SelectItem value=\"bold\">Bold</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div>\r\n            <Label htmlFor=\"title-family\" className=\"text-xs text-gray-600\">Font Family</Label>\r\n            <Select value={fontFamily} onValueChange={(value) => updateProps({ fontFamily: value as TitleSubtitleProps['fontFamily'] })}>\r\n              <SelectTrigger className=\"mt-1\">\r\n                <SelectValue />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                <SelectItem value=\"system\">System</SelectItem>\r\n                <SelectItem value=\"serif\">Serif</SelectItem>\r\n                <SelectItem value=\"sans-serif\">Sans Serif</SelectItem>\r\n                <SelectItem value=\"monospace\">Monospace</SelectItem>\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <Label htmlFor=\"title-alignment\" className=\"text-xs text-gray-600\">Text Alignment</Label>\r\n          <Select value={alignment} onValueChange={(value) => updateProps({ alignment: value as TitleSubtitleProps['alignment'] })}>\r\n            <SelectTrigger className=\"mt-1\">\r\n              <SelectValue />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"left\">Left</SelectItem>\r\n              <SelectItem value=\"center\">Center</SelectItem>\r\n              <SelectItem value=\"right\">Right</SelectItem>\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n\r\n        <div>\r\n          <Label htmlFor=\"title-color\" className=\"text-xs text-gray-600\">Text Color</Label>\r\n          <div className=\"flex gap-2 mt-1\">\r\n            <Input\r\n              id=\"title-color\"\r\n              type=\"color\"\r\n              value={color}\r\n              onChange={(e) => updateProps({ color: e.target.value })}\r\n              className=\"w-16 h-9 p-1 border rounded\"\r\n            />\r\n            <Input\r\n              value={color}\r\n              onChange={(e) => updateProps({ color: e.target.value })}\r\n              placeholder=\"#000000\"\r\n              className=\"flex-1\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {showSettings && (\r\n          <>\r\n            <div className=\"grid grid-cols-2 gap-3\">\r\n              <div>\r\n                <Label htmlFor=\"title-margin-top\" className=\"text-xs text-gray-600\">Margin Top (px)</Label>\r\n                <Input\r\n                  id=\"title-margin-top\"\r\n                  type=\"number\"\r\n                  value={marginTop}\r\n                  onChange={(e) => updateProps({ marginTop: parseInt(e.target.value) || 0 })}\r\n                  className=\"mt-1\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"title-margin-bottom\" className=\"text-xs text-gray-600\">Margin Bottom (px)</Label>\r\n                <Input\r\n                  id=\"title-margin-bottom\"\r\n                  type=\"number\"\r\n                  value={marginBottom}\r\n                  onChange={(e) => updateProps({ marginBottom: parseInt(e.target.value) || 0 })}\r\n                  className=\"mt-1\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <Label className=\"text-xs text-gray-600\">Enable Markdown</Label>\r\n                <p className=\"text-xs text-gray-500\">Allow basic markdown formatting</p>\r\n              </div>\r\n              <Switch\r\n                checked={enableMarkdown}\r\n                onCheckedChange={(checked) => updateProps({ enableMarkdown: checked })}\r\n              />\r\n            </div>\r\n\r\n            {enableMarkdown && (\r\n              <Alert>\r\n                <Type className=\"h-4 w-4\" />\r\n                <AlertDescription className=\"text-xs\">\r\n                  Markdown enabled. You can use **bold**, *italic*, `code`, and other basic formatting.\r\n                </AlertDescription>\r\n              </Alert>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {onRemove && (\r\n        <Button\r\n          variant=\"destructive\"\r\n          size=\"sm\"\r\n          onClick={onRemove}\r\n          className=\"w-full\"\r\n        >\r\n          Remove Title\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (isEditing) {\r\n    return (\r\n      <Card className=\"w-full\">\r\n        <CardHeader className=\"pb-3\">\r\n          <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n            <Type className=\"h-4 w-4\" />\r\n            {component.label || 'Title Element'}\r\n            <Badge variant=\"secondary\" className=\"ml-auto\">\r\n              {level.toUpperCase()}\r\n            </Badge>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"pt-0\">\r\n          <div className=\"border rounded-lg p-4 bg-white\">\r\n            {renderTitle()}\r\n          </div>\r\n          {renderPropertyPanel()}\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  // Live form view - just render the title\r\n  return (\r\n    <div className=\"w-full\">\r\n      {renderTitle()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleElement;","import React from 'react';\r\nimport { renderInlineMarkdown } from '../../../lib/services/markdown';\r\n\r\n// Props interface matching the architecture specification\r\nexport interface TitleSubtitleProps {\r\n  text: string;\r\n  level: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\r\n  fontFamily: 'system' | 'serif' | 'sans-serif' | 'monospace';\r\n  fontSize: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\r\n  fontWeight: 'normal' | 'medium' | 'semibold' | 'bold';\r\n  color: string;\r\n  alignment: 'left' | 'center' | 'right';\r\n  marginTop: number;\r\n  marginBottom: number;\r\n  enableMarkdown?: boolean;\r\n}\r\n\r\ninterface SubtitleElementProps {\r\n  props: TitleSubtitleProps;\r\n  isSelected?: boolean;\r\n  onPropsChange?: (newProps: TitleSubtitleProps) => void;\r\n}\r\n\r\nconst SubtitleElement: React.FC<SubtitleElementProps> = ({\r\n  props: {\r\n    text = 'Subtitle text',\r\n    level = 'h3',\r\n    fontFamily = 'system',\r\n    fontSize = 'lg',\r\n    fontWeight = 'medium',\r\n    color = '#6b7280',\r\n    alignment = 'left',\r\n    marginTop = 8,\r\n    marginBottom = 12,\r\n    enableMarkdown = false\r\n  },\r\n  isSelected,\r\n  onPropsChange\r\n}) => {\r\n  // Font family mapping\r\n  const fontFamilyMap = {\r\n    system: 'font-system',\r\n    serif: 'font-serif',\r\n    'sans-serif': 'font-sans',\r\n    monospace: 'font-mono'\r\n  };\r\n\r\n  // Font size mapping\r\n  const fontSizeMap = {\r\n    xs: 'text-xs',\r\n    sm: 'text-sm',\r\n    base: 'text-base',\r\n    lg: 'text-lg',\r\n    xl: 'text-xl',\r\n    '2xl': 'text-2xl',\r\n    '3xl': 'text-3xl',\r\n    '4xl': 'text-4xl'\r\n  };\r\n\r\n  // Font weight mapping\r\n  const fontWeightMap = {\r\n    normal: 'font-normal',\r\n    medium: 'font-medium',\r\n    semibold: 'font-semibold',\r\n    bold: 'font-bold'\r\n  };\r\n\r\n  // Alignment mapping\r\n  const alignmentMap = {\r\n    left: 'text-left',\r\n    center: 'text-center',\r\n    right: 'text-right'\r\n  };\r\n\r\n  const handleInputChange = (field: keyof TitleSubtitleProps, value: any) => {\r\n    if (onPropsChange) {\r\n      onPropsChange({\r\n        text,\r\n        level,\r\n        fontFamily,\r\n        fontSize,\r\n        fontWeight,\r\n        color,\r\n        alignment,\r\n        marginTop,\r\n        marginBottom,\r\n        enableMarkdown,\r\n        [field]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderSubtitle = () => {\r\n    const className = `\r\n      ${fontFamilyMap[fontFamily]} \r\n      ${fontSizeMap[fontSize]} \r\n      ${fontWeightMap[fontWeight]} \r\n      ${alignmentMap[alignment]}\r\n      leading-relaxed\r\n    `.trim().replace(/\\s+/g, ' ');\r\n\r\n    const style = {\r\n      color,\r\n      marginTop: `${marginTop}px`,\r\n      marginBottom: `${marginBottom}px`\r\n    };\r\n\r\n    const commonProps = {\r\n      className,\r\n      style\r\n    };\r\n\r\n    if (enableMarkdown && text) {\r\n      const renderedContent = renderInlineMarkdown(text);\r\n      return React.createElement(level, {\r\n        ...commonProps,\r\n        dangerouslySetInnerHTML: { __html: renderedContent }\r\n      });\r\n    }\r\n\r\n    return React.createElement(level, commonProps, text);\r\n  };\r\n\r\n  if (isSelected && onPropsChange) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {/* Preview */}\r\n        <div className=\"border rounded-lg p-4 bg-gray-50\">\r\n          <div className=\"text-sm text-gray-600 mb-2\">Preview:</div>\r\n          {renderSubtitle()}\r\n        </div>\r\n\r\n        {/* Property Panel */}\r\n        <div className=\"bg-white border rounded-lg p-4 space-y-4\">\r\n          <h3 className=\"font-medium text-gray-900\">Subtitle Properties</h3>\r\n          \r\n          {/* Text Content */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Text Content\r\n            </label>\r\n            <textarea\r\n              value={text}\r\n              onChange={(e) => handleInputChange('text', e.target.value)}\r\n              placeholder=\"Enter subtitle text...\"\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              rows={2}\r\n            />\r\n          </div>\r\n\r\n          {/* Markdown Toggle */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"enable-markdown\"\r\n              checked={enableMarkdown}\r\n              onChange={(e) => handleInputChange('enableMarkdown', e.target.checked)}\r\n              className=\"h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n            />\r\n            <label htmlFor=\"enable-markdown\" className=\"text-sm text-gray-700\">\r\n              Enable Markdown\r\n            </label>\r\n          </div>\r\n\r\n          {/* Heading Level */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Heading Level\r\n            </label>\r\n            <select\r\n              value={level}\r\n              onChange={(e) => handleInputChange('level', e.target.value as TitleSubtitleProps['level'])}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"h1\">H1</option>\r\n              <option value=\"h2\">H2</option>\r\n              <option value=\"h3\">H3</option>\r\n              <option value=\"h4\">H4</option>\r\n              <option value=\"h5\">H5</option>\r\n              <option value=\"h6\">H6</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Typography Controls */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {/* Font Family */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Font Family\r\n              </label>\r\n              <select\r\n                value={fontFamily}\r\n                onChange={(e) => handleInputChange('fontFamily', e.target.value as TitleSubtitleProps['fontFamily'])}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"system\">System</option>\r\n                <option value=\"serif\">Serif</option>\r\n                <option value=\"sans-serif\">Sans Serif</option>\r\n                <option value=\"monospace\">Monospace</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Font Size */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Font Size\r\n              </label>\r\n              <select\r\n                value={fontSize}\r\n                onChange={(e) => handleInputChange('fontSize', e.target.value as TitleSubtitleProps['fontSize'])}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"xs\">Extra Small</option>\r\n                <option value=\"sm\">Small</option>\r\n                <option value=\"base\">Base</option>\r\n                <option value=\"lg\">Large</option>\r\n                <option value=\"xl\">Extra Large</option>\r\n                <option value=\"2xl\">2X Large</option>\r\n                <option value=\"3xl\">3X Large</option>\r\n                <option value=\"4xl\">4X Large</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            {/* Font Weight */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Font Weight\r\n              </label>\r\n              <select\r\n                value={fontWeight}\r\n                onChange={(e) => handleInputChange('fontWeight', e.target.value as TitleSubtitleProps['fontWeight'])}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"normal\">Normal</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"semibold\">Semibold</option>\r\n                <option value=\"bold\">Bold</option>\r\n              </select>\r\n            </div>\r\n\r\n            {/* Alignment */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Alignment\r\n              </label>\r\n              <select\r\n                value={alignment}\r\n                onChange={(e) => handleInputChange('alignment', e.target.value as TitleSubtitleProps['alignment'])}\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                <option value=\"left\">Left</option>\r\n                <option value=\"center\">Center</option>\r\n                <option value=\"right\">Right</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Color */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Text Color\r\n            </label>\r\n            <div className=\"flex space-x-2\">\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                onChange={(e) => handleInputChange('color', e.target.value)}\r\n                className=\"h-10 w-16 border border-gray-300 rounded cursor-pointer\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                value={color}\r\n                onChange={(e) => handleInputChange('color', e.target.value)}\r\n                placeholder=\"#000000\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Spacing */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Margin Top (px)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={marginTop}\r\n                onChange={(e) => handleInputChange('marginTop', parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Margin Bottom (px)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={marginBottom}\r\n                onChange={(e) => handleInputChange('marginBottom', parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return renderSubtitle();\r\n};\r\n\r\nexport default SubtitleElement;","import React from 'react';\r\n\r\n// Props interface matching the architecture specification\r\nexport interface LineSeparatorProps {\r\n  style: 'solid' | 'dashed' | 'dotted';\r\n  thickness: number;\r\n  color: string;\r\n  width: number;\r\n  marginTop: number;\r\n  marginBottom: number;\r\n}\r\n\r\ninterface SeparatorElementProps {\r\n  props: LineSeparatorProps;\r\n  isSelected?: boolean;\r\n  onPropsChange?: (newProps: LineSeparatorProps) => void;\r\n}\r\n\r\nconst SeparatorElement: React.FC<SeparatorElementProps> = ({\r\n  props: {\r\n    style = 'solid',\r\n    thickness = 1,\r\n    color = '#e5e7eb',\r\n    width = 100,\r\n    marginTop = 16,\r\n    marginBottom = 16\r\n  },\r\n  isSelected,\r\n  onPropsChange\r\n}) => {\r\n  const handleInputChange = (field: keyof LineSeparatorProps, value: any) => {\r\n    if (onPropsChange) {\r\n      onPropsChange({\r\n        style,\r\n        thickness,\r\n        color,\r\n        width,\r\n        marginTop,\r\n        marginBottom,\r\n        [field]: value\r\n      });\r\n    }\r\n  };\r\n\r\n  const renderSeparator = () => {\r\n    const separatorStyle = {\r\n      borderTop: `${thickness}px ${style} ${color}`,\r\n      width: `${width}%`,\r\n      marginTop: `${marginTop}px`,\r\n      marginBottom: `${marginBottom}px`,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto'\r\n    };\r\n\r\n    return (\r\n      <hr \r\n        className=\"border-0\"\r\n        style={separatorStyle}\r\n      />\r\n    );\r\n  };\r\n\r\n  if (isSelected && onPropsChange) {\r\n    return (\r\n      <div className=\"space-y-4\">\r\n        {/* Preview */}\r\n        <div className=\"border rounded-lg p-4 bg-gray-50\">\r\n          <div className=\"text-sm text-gray-600 mb-2\">Preview:</div>\r\n          {renderSeparator()}\r\n        </div>\r\n\r\n        {/* Property Panel */}\r\n        <div className=\"bg-white border rounded-lg p-4 space-y-4\">\r\n          <h3 className=\"font-medium text-gray-900\">Separator Properties</h3>\r\n          \r\n          {/* Line Style */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Line Style\r\n            </label>\r\n            <select\r\n              value={style}\r\n              onChange={(e) => handleInputChange('style', e.target.value as LineSeparatorProps['style'])}\r\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"solid\">Solid</option>\r\n              <option value=\"dashed\">Dashed</option>\r\n              <option value=\"dotted\">Dotted</option>\r\n            </select>\r\n          </div>\r\n\r\n          {/* Thickness */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Thickness (px)\r\n            </label>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"1\"\r\n                max=\"10\"\r\n                value={thickness}\r\n                onChange={(e) => handleInputChange('thickness', parseInt(e.target.value))}\r\n                className=\"flex-1\"\r\n              />\r\n              <span className=\"text-sm text-gray-600 w-8\">{thickness}px</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Width */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Width (%)\r\n            </label>\r\n            <div className=\"flex items-center space-x-3\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"10\"\r\n                max=\"100\"\r\n                value={width}\r\n                onChange={(e) => handleInputChange('width', parseInt(e.target.value))}\r\n                className=\"flex-1\"\r\n              />\r\n              <span className=\"text-sm text-gray-600 w-10\">{width}%</span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Color */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Line Color\r\n            </label>\r\n            <div className=\"flex space-x-2\">\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                onChange={(e) => handleInputChange('color', e.target.value)}\r\n                className=\"h-10 w-16 border border-gray-300 rounded cursor-pointer\"\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                value={color}\r\n                onChange={(e) => handleInputChange('color', e.target.value)}\r\n                placeholder=\"#e5e7eb\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Spacing */}\r\n          <div className=\"grid grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Margin Top (px)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={marginTop}\r\n                onChange={(e) => handleInputChange('marginTop', parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                Margin Bottom (px)\r\n              </label>\r\n              <input\r\n                type=\"number\"\r\n                value={marginBottom}\r\n                onChange={(e) => handleInputChange('marginBottom', parseInt(e.target.value) || 0)}\r\n                min=\"0\"\r\n                max=\"100\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Preset Styles */}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Quick Presets\r\n            </label>\r\n            <div className=\"grid grid-cols-3 gap-2\">\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('style', 'solid');\r\n                  handleInputChange('thickness', 1);\r\n                  handleInputChange('color', '#e5e7eb');\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Subtle\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('style', 'solid');\r\n                  handleInputChange('thickness', 2);\r\n                  handleInputChange('color', '#9ca3af');\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Medium\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('style', 'solid');\r\n                  handleInputChange('thickness', 3);\r\n                  handleInputChange('color', '#6b7280');\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Bold\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('style', 'dashed');\r\n                  handleInputChange('thickness', 2);\r\n                  handleInputChange('color', '#9ca3af');\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Dashed\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('style', 'dotted');\r\n                  handleInputChange('thickness', 3);\r\n                  handleInputChange('color', '#9ca3af');\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Dotted\r\n              </button>\r\n              <button\r\n                onClick={() => {\r\n                  handleInputChange('width', 50);\r\n                  handleInputChange('style', 'solid');\r\n                  handleInputChange('thickness', 2);\r\n                }}\r\n                className=\"px-3 py-2 text-xs border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              >\r\n                Centered\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return renderSeparator();\r\n};\r\n\r\nexport default SeparatorElement;"],"names":["SWITCH_NAME","createSwitchContext","createSwitchScope","createContextScope","SwitchProvider","useSwitchContext","Switch","React.forwardRef","props","forwardedRef","__scopeSwitch","name","checkedProp","defaultChecked","required","disabled","value","onCheckedChange","form","switchProps","button","setButton","React.useState","composedRefs","useComposedRefs","node","hasConsumerStoppedPropagationRef","React.useRef","isFormControl","checked","setChecked","useControllableState","jsxs","jsx","Primitive","getState","composeEventHandlers","event","prevChecked","SwitchBubbleInput","THUMB_NAME","SwitchThumb","thumbProps","context","BUBBLE_INPUT_NAME","control","bubbles","ref","usePrevious","controlSize","useSize","React.useEffect","input","inputProto","Root","Thumb","className","SwitchPrimitive.Root","cn","SwitchPrimitive.Thumb","Progress","max","variant","percentage","variantStyles","decodeCache","getDecodeCache","exclude","cache","i","ch","decode","string","seq","result","l","b1","b2","chr","b3","b4","encodeCache","getEncodeCache","encode","keepEscaped","code","nextCode","format","url","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","slashes","rest","simplePath","proto","hostEnd","auth","atSign","host","ipv6Hostname","hostparts","part","newpart","j","k","validParts","notHost","bit","hash","qm","port","Any","Cc","regex$1","P","regex","Z","htmlDecodeTree","c","xmlDecodeTree","_a","decodeMap","fromCodePoint","codePoint","output","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","isHexadecimalCharacter","isAsciiAlphaNumeric","isEntityInAttributeInvalidEnd","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","decodeMode","str","offset","start","end","base","digitCount","startIdx","char","lastCp","expectedLength","current","valueLength","determineBranch","consumed","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","jumpOffset","lo","hi","mid","midVal","htmlDecoder","decodeHTML","mode","_class","obj","isString","_hasOwnProperty","has","object","key","assign","source","arrayReplaceAt","src","pos","newElements","isValidEntityCode","surrogate1","surrogate2","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","replaceEntityPattern","match","decoded","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","escapeHtml","REGEXP_ESCAPE_RE","escapeRE","isSpace","isWhiteSpace","isPunctChar","ucmicro.P","ucmicro.S","isMdAsciiPunct","normalizeReference","lib","mdurl","ucmicro","parseLinkLabel","state","disableNested","level","found","marker","prevPos","oldPos","labelEnd","parseLinkDestination","parseLinkTitle","prev_state","default_rules","tokens","idx","options","env","slf","token","info","langName","langAttrs","arr","highlighted","tmpAttrs","tmpToken","Renderer","needLf","nextToken","rules","type","Ruler","self","chains","rule","altName","chain","fn","index","opt","beforeName","ruleName","afterName","list","ignoreInvalid","chainName","Token","tag","nesting","attrs","attrData","StateCore","md","NEWLINES_RE","NULL_RE","normalize","block","inline","tok","isLinkOpen","isLinkClose","linkify","blockTokens","htmlLinkLevel","currentToken","text","links","nodes","lastPos","ln","fullUrl","urlText","token_o","token_t","token_c","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","replace","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","stack","thisLevel","OUTER","t","canOpen","canClose","isSingle","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","item","openQuote","closeQuote","smartquotes","text_join","curr","last","_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","StateBlock","s","indent","indent_found","line","from","min","begin","keepLastLF","queue","lineIndent","lineStart","first","MAX_AUTOCOMPLETED_CELLS","getLine","escapedSplit","isEscaped","table","startLine","endLine","silent","nextLine","firstCh","secondCh","lineText","columns","aligns","columnCount","oldParentType","terminatorRules","token_to","tableLines","token_tho","token_htro","token_ho","token_il","tbodyLines","autocompletedCells","terminate","token_tbo","token_tro","token_tdo","fence","mem","markup","params","haveEndMarker","blockquote","oldLineMax","oldBMarks","oldBSCount","oldSCount","oldTShift","lastLineEmpty","isOutdented","initial","spaceAfterMarker","adjustTab","oldIndent","lines","hr","cnt","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","tight","isTerminatingParagraph","isOrdered","markerValue","posAfterMarker","markerCharCode","listTokIdx","listLines","prevEmptyEnd","contentStart","indentAfterMarker","itemLines","oldTight","oldListIndent","reference","_endLine","getNextLine","isContinuation","lineContent","destRes","href","destEndPos","destEndLineNo","titleRes","title","label","block_names","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","html_block","heading","tmp","token_i","lheading","content","paragraph","r_table","r_code","r_fence","r_blockquote","r_hr","r_list","r_reference","r_html_block","r_heading","r_lheading","r_paragraph","ParserBlock","maxNesting","hasEmptyLines","prevLine","ok","outTokens","StateInline","token_meta","canSplitWord","count","left_flanking","right_flanking","isTerminatorChar","SCHEME_RE","link","newline","pmax","ws","ESCAPED","escape","ch1","escapedStr","ch2","origStr","backtick","openerLength","matchEnd","matchStart","closerLength","strikethrough_tokenize","scanned","postProcess","delimiters","loneMarkers","startDelim","endDelim","strikethrough_postProcess","tokens_meta","r_strikethrough","emphasis_tokenize","isStrong","emphasis_post_process","r_emphasis","res","parseReference","labelStart","image","EMAIL_RE","AUTOLINK_RE","autolink","isLetter","lc","html_inline","DIGITAL_RE","NAMED_RE","processDelimiters","openersBottom","headerIdx","lastTokenIdx","jumps","closerIdx","closer","minOpenerIdx","openerIdx","newMinOpenerIdx","opener","isOddMatch","lastJump","link_pairs","fragments_join","r_text","r_newline","r_escape","r_backticks","r_link","r_image","r_autolink","r_html_inline","r_entity","_rules2","r_balance_pairs","r_fragments_join","ParserInline","reFactory","opts","re","text_separators","isObject","isRegExp","isFunction","defaultOptions","isOptionsObj","acc","defaultSchemas","tail","tlds_2ch_src_re","tlds_default","resetScanCache","createValidator","createNormalizer","compile","tlds","untpl","tpl","aliases","schemaError","val","compiled","alias","slist","Match","shift","createMatch","LinkifyIt","schemas","schema","definition","m","ml","me","next","tld_pos","at_pos","keepOld","el","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","baseMinusTMin","floor","stringFromCharCode","error","map","array","callback","length","mapDomain","domain","parts","labels","encoded","ucs2decode","counter","extra","ucs2encode","codePoints","basicToDigit","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","toUnicode","toASCII","punycode","cfg_default","cfg_zero","cfg_commonmark","config","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","mdurl.parse","mdurl.encode","mdurl.format","normalizeLinkText","mdurl.decode","MarkdownIt","presetName","utils.isString","ParserCore","utils","utils.assign","helpers","presets","missed","plugin","args","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","func","thisArg","_len","_key","_len2","_key2","addToSet","set","transformCaseFunc","element","lcElement","cleanArray","clone","newObject","property","lookupGetter","prop","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","root","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","_forceRemove","_removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","body","_createNodeIterator","_isClobbered","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","_isBasicCustomElement","parentNode","childNodes","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attr","namespaceURI","attrValue","initValue","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","markdown","purifyConfig","renderInlineMarkdown","markdownText","renderedHtml","inlineConfig","fontFamilyMap","fontSizeMap","fontWeightMap","alignmentMap","TitleElement","component","isEditing","onUpdate","onRemove","showSettings","setShowSettings","useState","fontFamily","fontSize","fontWeight","color","alignment","marginTop","marginBottom","enableMarkdown","updateProps","updates","renderTitle","style","commonProps","renderedContent","React","renderPropertyPanel","Label","Button","Settings","Input","e","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Fragment","Alert","Type","AlertDescription","Card","CardHeader","CardTitle","Badge","CardContent","SubtitleElement","isSelected","onPropsChange","handleInputChange","field","renderSubtitle","SeparatorElement","thickness","width","renderSeparator","separatorStyle"],"mappings":"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","x_google_ignoreList":[0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71]}