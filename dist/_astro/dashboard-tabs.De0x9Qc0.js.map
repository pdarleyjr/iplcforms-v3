{"version":3,"file":"dashboard-tabs.De0x9Qc0.js","sources":["../../node_modules/@radix-ui/react-collapsible/dist/index.mjs","../../node_modules/@radix-ui/react-accordion/dist/index.mjs","../../src/components/ui/accordion.tsx","../../src/lib/api-endpoints.ts","../../src/components/admin/api-documentation.tsx","../../src/components/admin/dashboard-tabs.tsx"],"sourcesContent":["\"use client\";\n\n// src/collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? false,\n      onChange: onOpenChange,\n      caller: COLLAPSIBLE_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/accordion.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\nimport { createCollapsibleScope } from \"@radix-ui/react-collapsible\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ACCORDION_NAME = \"Accordion\";\nvar ACCORDION_KEYS = [\"Home\", \"End\", \"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\"];\nvar [Collection, useCollection, createCollectionScope] = createCollection(ACCORDION_NAME);\nvar [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope\n]);\nvar useCollapsibleScope = createCollapsibleScope();\nvar Accordion = React.forwardRef(\n  (props, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps;\n    const multipleProps = accordionProps;\n    return /* @__PURE__ */ jsx(Collection.Provider, { scope: props.__scopeAccordion, children: type === \"multiple\" ? /* @__PURE__ */ jsx(AccordionImplMultiple, { ...multipleProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(AccordionImplSingle, { ...singleProps, ref: forwardedRef }) });\n  }\n);\nAccordion.displayName = ACCORDION_NAME;\nvar [AccordionValueProvider, useAccordionValueContext] = createAccordionContext(ACCORDION_NAME);\nvar [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\nvar AccordionImplSingle = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {\n      },\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? \"\",\n      onChange: onValueChange,\n      caller: ACCORDION_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionValueProvider,\n      {\n        scope: props.__scopeAccordion,\n        value: React.useMemo(() => value ? [value] : [], [value]),\n        onItemOpen: setValue,\n        onItemClose: React.useCallback(() => collapsible && setValue(\"\"), [collapsible, setValue]),\n        children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionSingleProps, ref: forwardedRef }) })\n      }\n    );\n  }\n);\nvar AccordionImplMultiple = React.forwardRef((props, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {\n    },\n    ...accordionMultipleProps\n  } = props;\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue ?? [],\n    onChange: onValueChange,\n    caller: ACCORDION_NAME\n  });\n  const handleItemOpen = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n  const handleItemClose = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),\n    [setValue]\n  );\n  return /* @__PURE__ */ jsx(\n    AccordionValueProvider,\n    {\n      scope: props.__scopeAccordion,\n      value,\n      onItemOpen: handleItemOpen,\n      onItemClose: handleItemClose,\n      children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible: true, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionMultipleProps, ref: forwardedRef }) })\n    }\n  );\n});\nvar [AccordionImplProvider, useAccordionContext] = createAccordionContext(ACCORDION_NAME);\nvar AccordionImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = \"vertical\", ...accordionProps } = props;\n    const accordionRef = React.useRef(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === \"ltr\";\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n      if (triggerIndex === -1) return;\n      event.preventDefault();\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n      switch (event.key) {\n        case \"Home\":\n          nextIndex = homeIndex;\n          break;\n        case \"End\":\n          nextIndex = endIndex;\n          break;\n        case \"ArrowRight\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case \"ArrowDown\":\n          if (orientation === \"vertical\") {\n            moveNext();\n          }\n          break;\n        case \"ArrowLeft\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case \"ArrowUp\":\n          if (orientation === \"vertical\") {\n            movePrev();\n          }\n          break;\n      }\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionImplProvider,\n      {\n        scope: __scopeAccordion,\n        disabled,\n        direction: dir,\n        orientation,\n        children: /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            ...accordionProps,\n            \"data-orientation\": orientation,\n            ref: composedRefs,\n            onKeyDown: disabled ? void 0 : handleKeyDown\n          }\n        ) })\n      }\n    );\n  }\n);\nvar ITEM_NAME = \"AccordionItem\";\nvar [AccordionItemProvider, useAccordionItemContext] = createAccordionContext(ITEM_NAME);\nvar AccordionItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = value && valueContext.value.includes(value) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n    return /* @__PURE__ */ jsx(\n      AccordionItemProvider,\n      {\n        scope: __scopeAccordion,\n        open,\n        disabled,\n        triggerId,\n        children: /* @__PURE__ */ jsx(\n          CollapsiblePrimitive.Root,\n          {\n            \"data-orientation\": accordionContext.orientation,\n            \"data-state\": getState(open),\n            ...collapsibleScope,\n            ...accordionItemProps,\n            ref: forwardedRef,\n            disabled,\n            open,\n            onOpenChange: (open2) => {\n              if (open2) {\n                valueContext.onItemOpen(value);\n              } else {\n                valueContext.onItemClose(value);\n              }\n            }\n          }\n        )\n      }\n    );\n  }\n);\nAccordionItem.displayName = ITEM_NAME;\nvar HEADER_NAME = \"AccordionHeader\";\nvar AccordionHeader = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      Primitive.h3,\n      {\n        \"data-orientation\": accordionContext.orientation,\n        \"data-state\": getState(itemContext.open),\n        \"data-disabled\": itemContext.disabled ? \"\" : void 0,\n        ...headerProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nAccordionHeader.displayName = HEADER_NAME;\nvar TRIGGER_NAME = \"AccordionTrigger\";\nvar AccordionTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(Collection.ItemSlot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Trigger,\n      {\n        \"aria-disabled\": itemContext.open && !collapsibleContext.collapsible || void 0,\n        \"data-orientation\": accordionContext.orientation,\n        id: itemContext.triggerId,\n        ...collapsibleScope,\n        ...triggerProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nAccordionTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"AccordionContent\";\nvar AccordionContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Content,\n      {\n        role: \"region\",\n        \"aria-labelledby\": itemContext.triggerId,\n        \"data-orientation\": accordionContext.orientation,\n        ...collapsibleScope,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          [\"--radix-accordion-content-height\"]: \"var(--radix-collapsible-content-height)\",\n          [\"--radix-accordion-content-width\"]: \"var(--radix-collapsible-content-width)\",\n          ...props.style\n        }\n      }\n    );\n  }\n);\nAccordionContent.displayName = CONTENT_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Accordion;\nvar Item = AccordionItem;\nvar Header = AccordionHeader;\nvar Trigger2 = AccordionTrigger;\nvar Content2 = AccordionContent;\nexport {\n  Accordion,\n  AccordionContent,\n  AccordionHeader,\n  AccordionItem,\n  AccordionTrigger,\n  Content2 as Content,\n  Header,\n  Item,\n  Root2 as Root,\n  Trigger2 as Trigger,\n  createAccordionScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\";\r\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\";\r\nimport { ChevronDown } from \"lucide-react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst Accordion = AccordionPrimitive.Root;\r\n\r\nconst AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n));\r\nAccordionItem.displayName = \"AccordionItem\";\r\n\r\nconst AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\r\n        className,\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n));\r\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName;\r\n\r\nconst AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n));\r\nAccordionContent.displayName = AccordionPrimitive.Content.displayName;\r\n\r\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent };\r\n","interface APIResponse {\r\n  name?: string;\r\n  example: any;\r\n  description?: string;\r\n}\r\n\r\ninterface APIEndpoint {\r\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\" | \"PATCH\";\r\n  path: string;\r\n  description: string;\r\n  parameters?: {\r\n    name: string;\r\n    type: string;\r\n    required: boolean;\r\n    description: string;\r\n  }[];\r\n  requestBody?: {\r\n    example: any;\r\n    description?: string;\r\n  };\r\n  responses: APIResponse[];\r\n}\r\n\r\nconst apiEndpoints: APIEndpoint[] = [\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customers\",\r\n    description: \"Retrieve a list of all customers\",\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          customers: [\r\n            {\r\n              id: 1,\r\n              name: \"John Doe\",\r\n              email: \"john@example.com\",\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Jane Smith\",\r\n              email: \"jane@example.com\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of customer objects\",\r\n      },\r\n      {\r\n        name: \"Response (with subscriptions)\",\r\n        example: {\r\n          customers: [\r\n            {\r\n              id: 1,\r\n              name: \"John Doe\",\r\n              email: \"john@example.com\",\r\n              subscription: {\r\n                id: 1,\r\n                status: \"active\",\r\n              },\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Jane Smith\",\r\n              email: \"jane@example.com\",\r\n            },\r\n          ],\r\n        },\r\n        description:\r\n          \"If subscriptions are active for a customer, some information about the subscription will be included in the response.\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customers\",\r\n    description: \"Create a new customer\",\r\n    parameters: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Name of the customer\",\r\n      },\r\n      {\r\n        name: \"email\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Email address of the customer\",\r\n      },\r\n      {\r\n        name: \"notes\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"Notes about the customer\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        name: \"John Doe\",\r\n        email: \"john@example.com\",\r\n        notes: \"This is a note\",\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          message: \"Customer created successfully\",\r\n          success: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customers/:id\",\r\n    description: \"Retrieve a single customer\",\r\n    parameters: [\r\n      {\r\n        name: \"id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          customer: {\r\n            id: 1,\r\n            name: \"John Doe\",\r\n            email: \"john@example.com\",\r\n          },\r\n        },\r\n        description: \"Returns a customer object\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/subscriptions\",\r\n    description: \"Retrieve a list of all subscriptions\",\r\n    responses: [\r\n      {\r\n        example: {\r\n          subscriptions: [\r\n            {\r\n              id: 1,\r\n              name: \"Basic\",\r\n              description: \"$9.99 per month\",\r\n              price: 9.99,\r\n              created_at: \"2023-01-01T00:00:00.000Z\",\r\n              updated_at: \"2023-01-01T00:00:00.000Z\",\r\n            },\r\n            {\r\n              id: 2,\r\n              name: \"Pro\",\r\n              description: \"$19.99 per month\",\r\n              price: 19.99,\r\n              created_at: \"2023-01-01T00:00:00.000Z\",\r\n              updated_at: \"2023-01-01T00:00:00.000Z\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of subscription objects\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/subscriptions\",\r\n    description: \"Create a new subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"name\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Name of the subscription\",\r\n      },\r\n      {\r\n        name: \"description\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"Description of the subscription\",\r\n      },\r\n      {\r\n        name: \"price\",\r\n        type: \"number\",\r\n        required: true,\r\n        description: \"Price of the subscription\",\r\n      },\r\n      {\r\n        name: \"features\",\r\n        type: \"array\",\r\n        required: false,\r\n        description: \"Array of feature objects\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        name: \"Basic\",\r\n        description: \"$9.99 per month\",\r\n        price: 9.99,\r\n        features: [\r\n          {\r\n            name: \"Feature 1\",\r\n            description: \"This is a feature description\",\r\n          },\r\n          {\r\n            name: \"Feature 2\",\r\n            description: \"This is another feature description\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          message: \"Customer created successfully\",\r\n          success: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/subscriptions/:id\",\r\n    description: \"Retrieve a single subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the subscription\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Response\",\r\n        example: {\r\n          subscription: {\r\n            id: 1,\r\n            name: \"Basic\",\r\n            description: \"$9.99 per month\",\r\n            price: 9.99,\r\n            created_at: \"2023-01-01T00:00:00.000Z\",\r\n            updated_at: \"2023-01-01T00:00:00.000Z\",\r\n          },\r\n        },\r\n        description: \"Returns a subscription object\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"GET\",\r\n    path: \"/api/customer_subscriptions\",\r\n    description: \"Retrieve a list of all customer subscriptions\",\r\n    responses: [\r\n      {\r\n        example: {\r\n          customer_subscriptions: [\r\n            {\r\n              id: 1,\r\n              customer_id: 1,\r\n              subscription_id: 1,\r\n              status: \"active\",\r\n              subscription_starts_at: \"2024-12-23 21:57:21\",\r\n              subscription_ends_at: 1734993633434,\r\n              created_at: \"2024-12-23 21:57:21\",\r\n              updated_at: \"2024-12-23 21:57:21\",\r\n            },\r\n          ],\r\n        },\r\n        description: \"Returns an array of customer subscription objects\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customer-subscriptions\",\r\n    description: \"Create a new customer subscription\",\r\n    parameters: [\r\n      {\r\n        name: \"customer_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n      {\r\n        name: \"subscription_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the subscription plan\",\r\n      },\r\n      {\r\n        name: \"start_date\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"Start date of the subscription (ISO 8601 format)\",\r\n      },\r\n      {\r\n        name: \"end_date\",\r\n        type: \"string\",\r\n        required: false,\r\n        description: \"End date of the subscription (ISO 8601 format)\",\r\n      },\r\n    ],\r\n    requestBody: {\r\n      example: {\r\n        customer_id: \"456\",\r\n        subscription_id: \"789\",\r\n        start_date: \"2024-01-01\",\r\n        end_date: \"2025-01-01\",\r\n      },\r\n    },\r\n    responses: [\r\n      {\r\n        name: \"Success Response\",\r\n        example: {\r\n          message: \"Customer subscription created successfully\",\r\n          success: true,\r\n          customer_subscription: {\r\n            id: \"123\",\r\n            customer_id: \"456\",\r\n            subscription_id: \"789\",\r\n            status: \"active\",\r\n            start_date: \"2024-01-01\",\r\n            end_date: \"2025-01-01\",\r\n            current_period_start: \"2024-01-01\",\r\n            current_period_end: \"2024-02-01\",\r\n            cancel_at_period_end: false,\r\n            created_at: \"2024-01-01T00:00:00Z\",\r\n            updated_at: \"2024-01-01T00:00:00Z\",\r\n          },\r\n        },\r\n      },\r\n      {\r\n        name: \"Error Response\",\r\n        example: {\r\n          message: \"Couldn't create customer subscription\",\r\n          success: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    method: \"POST\",\r\n    path: \"/api/customer/[:id]/workflow\",\r\n    description: \"Start a workflow for a customer\",\r\n    parameters: [\r\n      {\r\n        name: \"customer_id\",\r\n        type: \"string\",\r\n        required: true,\r\n        description: \"ID of the customer\",\r\n      },\r\n    ],\r\n    responses: [\r\n      {\r\n        name: \"Success Response\",\r\n        description: \"Empty body with status code 202\",\r\n        example: null,\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport { apiEndpoints };\r\n","import {\r\n  Accordion,\r\n  AccordionContent,\r\n  AccordionItem,\r\n  AccordionTrigger,\r\n} from \"@/components/ui/accordion\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nimport { apiEndpoints } from \"@/lib/api-endpoints\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst methodStyles = (method: string) =>\r\n  cn(method === \"POST\" ? \"bg-green-700\" : \"\");\r\n\r\nexport const APIDocumentation = () => {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <Card className={cn(\"space-y-4\")}>\r\n        <CardHeader>\r\n          <CardTitle>Authentication</CardTitle>\r\n          <CardDescription>\r\n            All requests must be authenticated by passing the API token as a\r\n            request header. The API token is configured using{\" \"}\r\n            <a\r\n              className=\"text-primary underline\"\r\n              href=\"https://developers.cloudflare.com/workers/configuration/secrets/\"\r\n            >\r\n              secrets\r\n            </a>\r\n            .\r\n          </CardDescription>\r\n        </CardHeader>\r\n\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"space-y-2\">\r\n            <Label>Supported header styles</Label>\r\n\r\n            <div className=\"space-y-4\">\r\n              <Input value=\"Authorization: Bearer $apiToken\" readOnly />\r\n              <Input value=\"Authorization: Token $apiToken\" readOnly />\r\n              <Input value=\"x-api-token: $apiToken\" readOnly />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <div>\r\n        {apiEndpoints.map((endpoint, index) => (\r\n          <Card key={index} className=\"mb-4\">\r\n            <CardHeader>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Badge\r\n                  className={methodStyles(endpoint.method)}\r\n                  variant={\r\n                    endpoint.method === \"GET\"\r\n                      ? \"default\"\r\n                      : endpoint.method === \"POST\"\r\n                        ? \"destructive\"\r\n                        : endpoint.method === \"PUT\"\r\n                          ? \"outline\"\r\n                          : \"secondary\"\r\n                  }\r\n                >\r\n                  {endpoint.method}\r\n                </Badge>\r\n                <code className=\"text-sm font-mono\">{endpoint.path}</code>\r\n              </div>\r\n              <CardDescription>{endpoint.description}</CardDescription>\r\n            </CardHeader>\r\n\r\n            <CardContent>\r\n              <Accordion type=\"single\" collapsible>\r\n                {endpoint.parameters && endpoint.parameters.length > 0 && (\r\n                  <AccordionItem value=\"parameters\">\r\n                    <AccordionTrigger>Parameters</AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <div className=\"space-y-2\">\r\n                        {endpoint.parameters.map((param, paramIndex) => (\r\n                          <div key={paramIndex} className=\"border-b pb-2\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <code className=\"text-sm font-mono\">\r\n                                {param.name}\r\n                              </code>\r\n                              <Badge variant=\"outline\">{param.type}</Badge>\r\n                              {param.required && (\r\n                                <Badge variant=\"destructive\">Required</Badge>\r\n                              )}\r\n                            </div>\r\n                            <p className=\"text-sm text-muted-foreground mt-1\">\r\n                              {param.description}\r\n                            </p>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                )}\r\n\r\n                {endpoint.requestBody && (\r\n                  <AccordionItem value=\"request\">\r\n                    <AccordionTrigger>Request Body</AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <pre className=\"bg-muted p-4 rounded-lg overflow-auto\">\r\n                        {JSON.stringify(endpoint.requestBody.example, null, 2)}\r\n                      </pre>\r\n                      {endpoint.requestBody.description && (\r\n                        <p className=\"text-sm text-muted-foreground mt-2\">\r\n                          {endpoint.requestBody.description}\r\n                        </p>\r\n                      )}\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                )}\r\n\r\n                {endpoint.responses.map((response, responseIndex) => (\r\n                  <AccordionItem\r\n                    key={responseIndex}\r\n                    value={`response-${responseIndex}`}\r\n                  >\r\n                    <AccordionTrigger>\r\n                      {endpoint.responses.length === 1\r\n                        ? \"Response\"\r\n                        : response.name}\r\n                    </AccordionTrigger>\r\n                    <AccordionContent>\r\n                      <pre className=\"bg-muted p-4 rounded-lg overflow-auto\">\r\n                        {JSON.stringify(response.example, null, 2)}\r\n                      </pre>\r\n                      {response.description && (\r\n                        <p className=\"text-sm text-muted-foreground mt-2\">\r\n                          {response.description}\r\n                        </p>\r\n                      )}\r\n                    </AccordionContent>\r\n                  </AccordionItem>\r\n                ))}\r\n              </Accordion>\r\n            </CardContent>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Alert, AlertDescription } from '@/components/ui/alert';\r\nimport { APIDocumentation } from '@/components/admin/api-documentation';\r\n\r\ninterface DashboardTabsProps {\r\n  formTemplates: number;\r\n  subscriptions: number;\r\n  customers: number;\r\n  customerSubscriptions: number;\r\n  recentActivity: Array<{\r\n    action: string;\r\n    user: string;\r\n    time: string;\r\n    type: string;\r\n  }>;\r\n}\r\n\r\nexport const DashboardTabs: React.FC<DashboardTabsProps> = ({\r\n  formTemplates = 12,\r\n  subscriptions = 45,\r\n  customers = 38,\r\n  customerSubscriptions = 156,\r\n  recentActivity = [\r\n    {\r\n      action: \"New assessment created\",\r\n      user: \"Dr. Smith\",\r\n      time: \"2 minutes ago\",\r\n      type: \"assessment\"\r\n    },\r\n    {\r\n      action: \"Session completed\",\r\n      user: \"Jane Doe\",\r\n      time: \"15 minutes ago\",\r\n      type: \"session\"\r\n    },\r\n    {\r\n      action: \"Report generated\",\r\n      user: \"Dr. Johnson\",\r\n      time: \"1 hour ago\",\r\n      type: \"report\"\r\n    }\r\n  ]\r\n}) => {\r\n  return (\r\n    <Tabs defaultValue=\"overview\" className=\"space-y-6\">\r\n      <TabsList className=\"grid w-full grid-cols-4 lg:w-fit lg:grid-cols-4\">\r\n        <TabsTrigger value=\"overview\" className=\"text-sm\">Overview</TabsTrigger>\r\n        <TabsTrigger value=\"analytics\" className=\"text-sm\">Analytics</TabsTrigger>\r\n        <TabsTrigger value=\"clinical\" className=\"text-sm\">Clinical</TabsTrigger>\r\n        <TabsTrigger value=\"api\" className=\"text-sm\">API</TabsTrigger>\r\n      </TabsList>\r\n\r\n      {/* Overview Tab */}\r\n      <TabsContent value=\"overview\" className=\"space-y-6\">\r\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n          {/* Quick Actions */}\r\n          <Card className=\"lg:col-span-2\">\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <svg className=\"h-5 w-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\" />\r\n                </svg>\r\n                <span>Clinical Workflow Status</span>\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Current status of clinical operations and assessments\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"grid gap-4 md:grid-cols-2\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-slate-600\">Active Assessments</span>\r\n                    <span className=\"font-medium\">{formTemplates} forms</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-slate-200 rounded-full h-2\">\r\n                    <div className=\"bg-blue-600 h-2 rounded-full\" style={{ width: '75%' }}></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span className=\"text-slate-600\">Compliance Rate</span>\r\n                    <span className=\"font-medium\">98.5%</span>\r\n                  </div>\r\n                  <div className=\"w-full bg-slate-200 rounded-full h-2\">\r\n                    <div className=\"bg-green-600 h-2 rounded-full\" style={{ width: '98.5%' }}></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Recent Activity */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"text-base\">Recent Activity</CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-3\">\r\n              {recentActivity.map((activity, index) => (\r\n                <div key={index} className=\"flex items-start space-x-3 text-sm\">\r\n                  <div className={`rounded-full p-1 mt-0.5 ${\r\n                    activity.type === 'assessment' ? 'bg-blue-100' :\r\n                    activity.type === 'session' ? 'bg-green-100' :\r\n                    activity.type === 'report' ? 'bg-purple-100' : 'bg-orange-100'\r\n                  }`}>\r\n                    <div className={`w-2 h-2 rounded-full ${\r\n                      activity.type === 'assessment' ? 'bg-blue-600' :\r\n                      activity.type === 'session' ? 'bg-green-600' :\r\n                      activity.type === 'report' ? 'bg-purple-600' : 'bg-orange-600'\r\n                    }`}></div>\r\n                  </div>\r\n                  <div className=\"flex-1 space-y-1\">\r\n                    <p className=\"font-medium text-slate-900\">{activity.action}</p>\r\n                    <p className=\"text-slate-500\">{activity.user}</p>\r\n                    <p className=\"text-xs text-slate-400\">{activity.time}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </TabsContent>\r\n\r\n      {/* Analytics Tab */}\r\n      <TabsContent value=\"analytics\" className=\"space-y-6\">\r\n        <div className=\"grid gap-6 md:grid-cols-2\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Platform Subscriptions</CardTitle>\r\n              <CardDescription>Clinical subscription analytics</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Total Subscriptions</span>\r\n                  <span className=\"font-bold\">{subscriptions}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Active Customers</span>\r\n                  <span className=\"font-bold\">{customers}</span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-sm text-slate-600\">Customer Subscriptions</span>\r\n                  <span className=\"font-bold\">{customerSubscriptions}</span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>System Health</CardTitle>\r\n              <CardDescription>Platform performance metrics</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-3\">\r\n                <Alert className=\"border-green-200 bg-green-50\">\r\n                  <AlertDescription className=\"text-green-800\">\r\n                    All systems operational\r\n                  </AlertDescription>\r\n                </Alert>\r\n                <div className=\"text-sm space-y-2\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-slate-600\">API Response Time</span>\r\n                    <span className=\"text-green-600 font-medium\">145ms</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span className=\"text-slate-600\">Database Connection</span>\r\n                    <span className=\"text-green-600 font-medium\">Healthy</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </TabsContent>\r\n\r\n      {/* Clinical Tab */}\r\n      <TabsContent value=\"clinical\" className=\"space-y-6\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"flex items-center space-x-2\">\r\n              <svg className=\"h-5 w-5 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\r\n              </svg>\r\n              <span>Clinical Compliance Monitoring</span>\r\n            </CardTitle>\r\n            <CardDescription>\r\n              HIPAA, ASHA, and AOTA compliance tracking\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <div className=\"grid gap-4 md:grid-cols-3\">\r\n              <div className=\"text-center p-4 bg-green-50 rounded-lg border border-green-200\">\r\n                <div className=\"text-2xl font-bold text-green-700\">100%</div>\r\n                <div className=\"text-sm text-green-600\">HIPAA Compliance</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <div className=\"text-2xl font-bold text-blue-700\">100%</div>\r\n                <div className=\"text-sm text-blue-600\">ASHA Standards</div>\r\n              </div>\r\n              <div className=\"text-center p-4 bg-purple-50 rounded-lg border border-purple-200\">\r\n                <div className=\"text-2xl font-bold text-purple-700\">100%</div>\r\n                <div className=\"text-sm text-purple-600\">AOTA Guidelines</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      {/* API Tab */}\r\n      <TabsContent value=\"api\" className=\"space-y-6\">\r\n        <div>\r\n          <APIDocumentation />\r\n        </div>\r\n      </TabsContent>\r\n    </Tabs>\r\n  );\r\n};"],"names":["COLLAPSIBLE_NAME","createCollapsibleContext","createCollapsibleScope","createContextScope","CollapsibleProvider","useCollapsibleContext","Collapsible","React.forwardRef","props","forwardedRef","__scopeCollapsible","openProp","defaultOpen","disabled","onOpenChange","collapsibleProps","open","setOpen","useControllableState","jsx","useId","React.useCallback","prevOpen","Primitive","getState","TRIGGER_NAME","CollapsibleTrigger","triggerProps","context","composeEventHandlers","CONTENT_NAME","CollapsibleContent","forceMount","contentProps","Presence","present","CollapsibleContentImpl","children","isPresent","setIsPresent","React.useState","ref","React.useRef","composedRefs","useComposedRefs","heightRef","height","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","React.useEffect","rAF","useLayoutEffect","node","rect","Root","Trigger","Content","ACCORDION_NAME","ACCORDION_KEYS","Collection","useCollection","createCollectionScope","createCollection","createAccordionContext","createAccordionScope","useCollapsibleScope","Accordion","React","type","accordionProps","singleProps","multipleProps","AccordionImplMultiple","AccordionImplSingle","AccordionValueProvider","useAccordionValueContext","AccordionCollapsibleProvider","useAccordionCollapsibleContext","valueProp","defaultValue","onValueChange","collapsible","accordionSingleProps","value","setValue","AccordionImpl","accordionMultipleProps","handleItemOpen","itemValue","prevValue","handleItemClose","value2","AccordionImplProvider","useAccordionContext","__scopeAccordion","dir","orientation","accordionRef","getItems","isDirectionLTR","useDirection","handleKeyDown","event","target","triggerCollection","item","triggerIndex","triggerCount","nextIndex","homeIndex","endIndex","moveNext","movePrev","clampedIndex","ITEM_NAME","AccordionItemProvider","useAccordionItemContext","AccordionItem","accordionItemProps","accordionContext","valueContext","collapsibleScope","triggerId","CollapsiblePrimitive.Root","open2","HEADER_NAME","AccordionHeader","headerProps","itemContext","AccordionTrigger","collapsibleContext","CollapsiblePrimitive.Trigger","AccordionContent","CollapsiblePrimitive.Content","Root2","Item","Header","Trigger2","Content2","AccordionPrimitive.Root","className","AccordionPrimitive.Item","cn","AccordionPrimitive.Header","jsxs","AccordionPrimitive.Trigger","ChevronDown","AccordionPrimitive.Content","apiEndpoints","methodStyles","method","APIDocumentation","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","Input","endpoint","index","Badge","param","paramIndex","response","responseIndex","DashboardTabs","formTemplates","subscriptions","customers","customerSubscriptions","recentActivity","Tabs","TabsList","TabsTrigger","TabsContent","activity","Alert","AlertDescription"],"mappings":"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","x_google_ignoreList":[0,1]}