{"version":3,"file":"PDFAnnotatorIslandLoader.ZJHXR8u8.js","sources":["../../src/components/pdf/PDFHighlighterClient.tsx","../../src/components/pdf/PDFAnnotatorWrapper.tsx","../../src/components/pdf/PDFAnnotatorIslandLoader.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  PdfHighlighter,\r\n  Highlight,\r\n  AreaHighlight,\r\n  Tip,\r\n  PdfLoader,\r\n} from 'react-pdf-highlighter';\r\nimport type { IHighlight, NewHighlight, ScaledPosition } from 'react-pdf-highlighter';\r\nimport { Loader2 } from 'lucide-react';\r\n\r\n// Configure PDF.js worker\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\n\r\n// Set worker path for Cloudflare Workers environment\r\nif (typeof window !== 'undefined') {\r\n  pdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\r\n}\r\n\r\ninterface PDFHighlighterClientProps {\r\n  pdfUrl: string;\r\n  highlights: IHighlight[];\r\n  onAddHighlight: (highlight: IHighlight) => void;\r\n  onUpdateHighlight: (id: string, updates: Partial<IHighlight>) => void;\r\n  onDeleteHighlight: (id: string) => void;\r\n  selectedColor: { name: string; value: string; rgba: string };\r\n  scale: number;\r\n  currentPage: number;\r\n  onPageChange: (page: number) => void;\r\n  onTotalPagesChange: (total: number) => void;\r\n  readOnly?: boolean;\r\n}\r\n\r\nconst getNextId = () => `highlight-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n\r\nconst resetHash = () => {\r\n  document.location.hash = \"\";\r\n};\r\n\r\nconst parseIdFromHash = () =>\r\n  document.location.hash.slice(\"#highlight-\".length);\r\n\r\nconst HighlightPopup = ({\r\n  comment,\r\n}: {\r\n  comment: { text: string; emoji?: string };\r\n}) =>\r\n  comment.text ? (\r\n    <div className=\"highlight-popup bg-white shadow-lg rounded p-2 text-sm\">\r\n      {comment.emoji && <span className=\"mr-1\">{comment.emoji}</span>}\r\n      {comment.text}\r\n    </div>\r\n  ) : null;\r\n\r\nconst PDFHighlighterClient: React.FC<PDFHighlighterClientProps> = ({\r\n  pdfUrl,\r\n  highlights,\r\n  onAddHighlight,\r\n  onUpdateHighlight,\r\n  onDeleteHighlight,\r\n  selectedColor,\r\n  scale,\r\n  currentPage,\r\n  onPageChange,\r\n  onTotalPagesChange,\r\n  readOnly = false,\r\n}) => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const scrollViewerTo = useRef<(highlight: IHighlight) => void>(() => {});\r\n\r\n  useEffect(() => {\r\n    const highlightFromHash = parseIdFromHash();\r\n    const highlight = highlights.find(h => h.id === highlightFromHash);\r\n    if (highlight && scrollViewerTo.current) {\r\n      scrollViewerTo.current(highlight);\r\n    }\r\n  }, [highlights]);\r\n\r\n  const handleHighlightAdd = (highlight: NewHighlight) => {\r\n    if (readOnly) return;\r\n    \r\n    const newHighlight: IHighlight = {\r\n      ...highlight,\r\n      id: getNextId(),\r\n    };\r\n    \r\n    onAddHighlight(newHighlight);\r\n    resetHash();\r\n  };\r\n\r\n  const updateHash = (highlight: IHighlight) => {\r\n    document.location.hash = `highlight-${highlight.id}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"pdf-highlighter-container h-full\">\r\n      <PdfLoader \r\n        url={pdfUrl} \r\n        beforeLoad={\r\n          <div className=\"flex items-center justify-center h-full\">\r\n            <Loader2 className=\"w-8 h-8 animate-spin\" />\r\n          </div>\r\n        }\r\n        onError={(error) => {\r\n          console.error('PDF loading error:', error);\r\n          return (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <div className=\"text-red-500\">Failed to load PDF</div>\r\n            </div>\r\n          );\r\n        }}\r\n      >\r\n        {(pdfDocument) => (\r\n          <PdfHighlighter\r\n            pdfDocument={pdfDocument}\r\n            enableAreaSelection={(event) => !readOnly && event.altKey}\r\n            onScrollChange={resetHash}\r\n            scrollRef={(scrollTo) => {\r\n              scrollViewerTo.current = scrollTo;\r\n            }}\r\n            onSelectionFinished={(\r\n              position: ScaledPosition,\r\n              content: { text?: string; image?: string },\r\n              hideTipAndSelection: () => void,\r\n              transformSelection: () => void\r\n            ) =>\r\n              !readOnly ? (\r\n                <Tip\r\n                  onOpen={transformSelection}\r\n                  onConfirm={(comment: { text: string; emoji: string }) => {\r\n                    handleHighlightAdd({\r\n                      content,\r\n                      position,\r\n                      comment,\r\n                    });\r\n                    hideTipAndSelection();\r\n                  }}\r\n                />\r\n              ) : null\r\n            }\r\n            highlightTransform={(\r\n              highlight,\r\n              index,\r\n              setTip,\r\n              hideTip,\r\n              viewportToScaled,\r\n              screenshot,\r\n              isScrolledTo\r\n            ) => {\r\n              const isTextHighlight = !Boolean(\r\n                highlight.content && highlight.content.image\r\n              );\r\n\r\n              const component = isTextHighlight ? (\r\n                <Highlight\r\n                  isScrolledTo={isScrolledTo}\r\n                  position={highlight.position}\r\n                  comment={highlight.comment}\r\n                />\r\n              ) : (\r\n                <AreaHighlight\r\n                  isScrolledTo={isScrolledTo}\r\n                  highlight={highlight}\r\n                  onChange={(boundingRect) => {\r\n                    if (!readOnly) {\r\n                      onUpdateHighlight(highlight.id, {\r\n                        position: { ...highlight.position, boundingRect } as any,\r\n                      });\r\n                    }\r\n                  }}\r\n                />\r\n              );\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  onMouseEnter={() =>\r\n                    setTip(highlight, (highlight) => (\r\n                      <HighlightPopup comment={highlight.comment} />\r\n                    ))\r\n                  }\r\n                  onMouseLeave={hideTip}\r\n                  onClick={() => updateHash(highlight)}\r\n                  style={{\r\n                    background: selectedColor.rgba,\r\n                    position: 'relative',\r\n                  }}\r\n                >\r\n                  {component}\r\n                </div>\r\n              );\r\n            }}\r\n            highlights={highlights}\r\n          />\r\n        )}\r\n      </PdfLoader>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PDFHighlighterClient;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport PDFHighlighterClient from './PDFHighlighterClient';\r\nimport { Card } from '../ui/card';\r\nimport { Button } from '../ui/button';\r\nimport { ScrollArea } from '../ui/scroll-area';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../ui/tabs';\r\nimport { Badge } from '../ui/badge';\r\nimport { Progress } from '../ui/progress';\r\nimport { Alert, AlertDescription } from '../ui/alert';\r\nimport { \r\n  FileText, \r\n  Download, \r\n  Upload, \r\n  ZoomIn, \r\n  ZoomOut, \r\n  ChevronLeft, \r\n  ChevronRight,\r\n  Highlighter,\r\n  MessageSquare,\r\n  Trash2,\r\n  Save,\r\n  Loader2\r\n} from 'lucide-react';\r\n\r\n// Types for annotations\r\nexport interface PDFAnnotation {\r\n  id: string;\r\n  content: {\r\n    text?: string;\r\n    image?: string;\r\n  };\r\n  position: any;\r\n  comment?: {\r\n    text: string;\r\n    emoji?: string;\r\n  };\r\n  color?: string;\r\n  note?: string;\r\n  createdAt: string;\r\n  updatedAt?: string;\r\n  author?: string;\r\n}\r\n\r\ninterface PDFAnnotatorWrapperProps {\r\n  pdfUrl?: string;\r\n  pdfFile?: File;\r\n  initialAnnotations?: PDFAnnotation[];\r\n  onAnnotationsChange?: (annotations: PDFAnnotation[]) => void;\r\n  onSave?: (annotations: PDFAnnotation[]) => Promise<void>;\r\n  readOnly?: boolean;\r\n  showToolbar?: boolean;\r\n  height?: string;\r\n  className?: string;\r\n}\r\n\r\n// Color palette for highlights\r\nconst HIGHLIGHT_COLORS = [\r\n  { name: 'Yellow', value: '#ffeb3b', rgba: 'rgba(255, 235, 59, 0.4)' },\r\n  { name: 'Green', value: '#4caf50', rgba: 'rgba(76, 175, 80, 0.4)' },\r\n  { name: 'Blue', value: '#2196f3', rgba: 'rgba(33, 150, 243, 0.4)' },\r\n  { name: 'Pink', value: '#e91e63', rgba: 'rgba(233, 30, 99, 0.4)' },\r\n  { name: 'Purple', value: '#9c27b0', rgba: 'rgba(156, 39, 176, 0.4)' },\r\n];\r\n\r\nexport default function PDFAnnotatorWrapper({\r\n  pdfUrl,\r\n  pdfFile,\r\n  initialAnnotations = [],\r\n  onAnnotationsChange,\r\n  onSave,\r\n  readOnly = false,\r\n  showToolbar = true,\r\n  height = '800px',\r\n  className = ''\r\n}: PDFAnnotatorWrapperProps) {\r\n  const [highlights, setHighlights] = useState<PDFAnnotation[]>(initialAnnotations);\r\n  const [selectedColor, setSelectedColor] = useState(HIGHLIGHT_COLORS[0]);\r\n  const [scale, setScale] = useState(1.0);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [selectedHighlight, setSelectedHighlight] = useState<string | null>(null);\r\n  const [pdfBlobUrl, setPdfBlobUrl] = useState<string | null>(null);\r\n\r\n  // Handle file to blob URL conversion\r\n  useEffect(() => {\r\n    if (pdfFile) {\r\n      const url = URL.createObjectURL(pdfFile);\r\n      setPdfBlobUrl(url);\r\n      return () => URL.revokeObjectURL(url);\r\n    } else if (pdfUrl) {\r\n      setPdfBlobUrl(pdfUrl);\r\n    }\r\n  }, [pdfFile, pdfUrl]);\r\n\r\n  // Update parent when annotations change\r\n  useEffect(() => {\r\n    onAnnotationsChange?.(highlights);\r\n  }, [highlights, onAnnotationsChange]);\r\n\r\n  const handleHighlightAdd = useCallback((highlight: any) => {\r\n    if (readOnly) return;\r\n    \r\n    const newHighlight: PDFAnnotation = {\r\n      ...highlight,\r\n      color: selectedColor.value,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    \r\n    setHighlights(prev => [...prev, newHighlight]);\r\n  }, [readOnly, selectedColor]);\r\n\r\n  const handleHighlightUpdate = useCallback((highlightId: string, updates: Partial<PDFAnnotation>) => {\r\n    if (readOnly) return;\r\n\r\n    setHighlights(prev => \r\n      prev.map(h => \r\n        h.id === highlightId \r\n          ? { ...h, ...updates, updatedAt: new Date().toISOString() }\r\n          : h\r\n      )\r\n    );\r\n  }, [readOnly]);\r\n\r\n  const handleHighlightDelete = useCallback((highlightId: string) => {\r\n    if (readOnly) return;\r\n\r\n    setHighlights(prev => prev.filter(h => h.id !== highlightId));\r\n    setSelectedHighlight(null);\r\n  }, [readOnly]);\r\n\r\n  const handleSave = async () => {\r\n    if (!onSave) return;\r\n\r\n    setIsSaving(true);\r\n    try {\r\n      await onSave(highlights);\r\n    } catch (err) {\r\n      setError('Failed to save annotations');\r\n      console.error('Save error:', err);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const exportAnnotations = () => {\r\n    const dataStr = JSON.stringify(highlights, null, 2);\r\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n    \r\n    const exportFileDefaultName = `annotations-${Date.now()}.json`;\r\n    \r\n    const linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileDefaultName);\r\n    linkElement.click();\r\n  };\r\n\r\n  const importAnnotations = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      try {\r\n        const imported = JSON.parse(e.target?.result as string) as PDFAnnotation[];\r\n        setHighlights(imported);\r\n      } catch (err) {\r\n        setError('Failed to import annotations');\r\n        console.error('Import error:', err);\r\n      }\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handleZoomIn = () => setScale(prev => Math.min(prev + 0.25, 3));\r\n  const handleZoomOut = () => setScale(prev => Math.max(prev - 0.25, 0.5));\r\n\r\n  const scrollToHighlight = (highlight: PDFAnnotation) => {\r\n    setSelectedHighlight(highlight.id);\r\n    const el = document.getElementById(highlight.id);\r\n    if (el) {\r\n      el.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n    }\r\n  };\r\n\r\n  if (!pdfBlobUrl) {\r\n    return (\r\n      <Alert>\r\n        <AlertDescription>\r\n          No PDF file or URL provided. Please provide a PDF to annotate.\r\n        </AlertDescription>\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`pdf-annotator-wrapper ${className}`}>\r\n      {showToolbar && (\r\n        <Card className=\"mb-4 p-4\">\r\n          <div className=\"flex flex-wrap items-center justify-between gap-4\">\r\n            {/* Color Selector */}\r\n            {!readOnly && (\r\n              <div className=\"flex items-center gap-2\">\r\n                <Highlighter className=\"w-4 h-4\" />\r\n                <span className=\"text-sm font-medium\">Color:</span>\r\n                <div className=\"flex gap-1\">\r\n                  {HIGHLIGHT_COLORS.map(color => (\r\n                    <button\r\n                      key={color.value}\r\n                      onClick={() => setSelectedColor(color)}\r\n                      className={`w-6 h-6 rounded border-2 transition-all ${\r\n                        selectedColor.value === color.value \r\n                          ? 'border-gray-800 scale-110' \r\n                          : 'border-gray-300'\r\n                      }`}\r\n                      style={{ backgroundColor: color.value }}\r\n                      title={color.name}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Zoom Controls */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleZoomOut}\r\n                disabled={scale <= 0.5}\r\n              >\r\n                <ZoomOut className=\"w-4 h-4\" />\r\n              </Button>\r\n              <span className=\"text-sm font-medium min-w-[60px] text-center\">\r\n                {Math.round(scale * 100)}%\r\n              </span>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleZoomIn}\r\n                disabled={scale >= 3}\r\n              >\r\n                <ZoomIn className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Page Navigation */}\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\r\n                disabled={currentPage <= 1}\r\n              >\r\n                <ChevronLeft className=\"w-4 h-4\" />\r\n              </Button>\r\n              <span className=\"text-sm font-medium min-w-[80px] text-center\">\r\n                Page {currentPage} / {totalPages}\r\n              </span>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\r\n                disabled={currentPage >= totalPages}\r\n              >\r\n                <ChevronRight className=\"w-4 h-4\" />\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center gap-2\">\r\n              {onSave && !readOnly && (\r\n                <Button\r\n                  variant=\"default\"\r\n                  size=\"sm\"\r\n                  onClick={handleSave}\r\n                  disabled={isSaving}\r\n                >\r\n                  {isSaving ? (\r\n                    <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n                  ) : (\r\n                    <Save className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span className=\"ml-2\">Save</span>\r\n                </Button>\r\n              )}\r\n              \r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={exportAnnotations}\r\n                disabled={highlights.length === 0}\r\n              >\r\n                <Download className=\"w-4 h-4\" />\r\n                <span className=\"ml-2\">Export</span>\r\n              </Button>\r\n\r\n              {!readOnly && (\r\n                <>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".json\"\r\n                    onChange={importAnnotations}\r\n                    className=\"hidden\"\r\n                    id=\"import-annotations\"\r\n                  />\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    size=\"sm\"\r\n                    onClick={() => document.getElementById('import-annotations')?.click()}\r\n                  >\r\n                    <Upload className=\"w-4 h-4\" />\r\n                    <span className=\"ml-2\">Import</span>\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert className=\"mb-4\" variant=\"destructive\">\r\n          <AlertDescription>{error}</AlertDescription>\r\n        </Alert>\r\n      )}\r\n\r\n      <div className=\"flex gap-4\" style={{ height }}>\r\n        {/* PDF Viewer */}\r\n        <Card className=\"flex-1 overflow-hidden\">\r\n          <PDFHighlighterClient\r\n            pdfUrl={pdfBlobUrl}\r\n            highlights={highlights as any}\r\n            onAddHighlight={handleHighlightAdd}\r\n            onUpdateHighlight={handleHighlightUpdate}\r\n            onDeleteHighlight={handleHighlightDelete}\r\n            selectedColor={selectedColor}\r\n            scale={scale}\r\n            currentPage={currentPage}\r\n            onPageChange={setCurrentPage}\r\n            onTotalPagesChange={setTotalPages}\r\n            readOnly={readOnly}\r\n          />\r\n        </Card>\r\n\r\n        {/* Annotations Sidebar */}\r\n        <Card className=\"w-80\">\r\n          <Tabs defaultValue=\"annotations\" className=\"h-full flex flex-col\">\r\n            <TabsList className=\"grid w-full grid-cols-2\">\r\n              <TabsTrigger value=\"annotations\">\r\n                <MessageSquare className=\"w-4 h-4 mr-2\" />\r\n                Annotations\r\n              </TabsTrigger>\r\n              <TabsTrigger value=\"details\">\r\n                <FileText className=\"w-4 h-4 mr-2\" />\r\n                Details\r\n              </TabsTrigger>\r\n            </TabsList>\r\n\r\n            <TabsContent value=\"annotations\" className=\"flex-1 overflow-hidden\">\r\n              <ScrollArea className=\"h-full p-4\">\r\n                {highlights.length === 0 ? (\r\n                  <div className=\"text-center text-gray-500 py-8\">\r\n                    <MessageSquare className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n                    <p className=\"text-sm\">No annotations yet</p>\r\n                    {!readOnly && (\r\n                      <p className=\"text-xs mt-2\">\r\n                        Select text to add highlights\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-3\">\r\n                    {highlights.map((highlight) => (\r\n                      <div\r\n                        key={highlight.id}\r\n                        className={`p-3 rounded-lg border cursor-pointer transition-all ${\r\n                          selectedHighlight === highlight.id\r\n                            ? 'border-blue-500 bg-blue-50'\r\n                            : 'border-gray-200 hover:border-gray-300'\r\n                        }`}\r\n                        onClick={() => scrollToHighlight(highlight)}\r\n                      >\r\n                        <div className=\"flex items-start justify-between mb-2\">\r\n                          <div \r\n                            className=\"w-4 h-4 rounded\"\r\n                            style={{ \r\n                              backgroundColor: highlight.color || HIGHLIGHT_COLORS[0].value \r\n                            }}\r\n                          />\r\n                          {!readOnly && (\r\n                            <Button\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                handleHighlightDelete(highlight.id);\r\n                              }}\r\n                            >\r\n                              <Trash2 className=\"w-3 h-3\" />\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {highlight.content.text && (\r\n                          <p className=\"text-sm text-gray-700 mb-2 line-clamp-3\">\r\n                            \"{highlight.content.text}\"\r\n                          </p>\r\n                        )}\r\n                        \r\n                        {highlight.comment && (\r\n                          <div className=\"bg-gray-50 rounded p-2\">\r\n                            <p className=\"text-xs text-gray-600\">\r\n                              {highlight.comment.text}\r\n                            </p>\r\n                          </div>\r\n                        )}\r\n                        \r\n                        <div className=\"mt-2 text-xs text-gray-500\">\r\n                          {new Date(highlight.createdAt).toLocaleString()}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </ScrollArea>\r\n            </TabsContent>\r\n\r\n            <TabsContent value=\"details\" className=\"flex-1 p-4\">\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium mb-2\">Statistics</h3>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Total Annotations</span>\r\n                      <Badge>{highlights.length}</Badge>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600\">Pages</span>\r\n                      <Badge>{totalPages}</Badge>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium mb-2\">Color Distribution</h3>\r\n                  <div className=\"space-y-2\">\r\n                    {HIGHLIGHT_COLORS.map(color => {\r\n                      const count = highlights.filter(h => h.color === color.value).length;\r\n                      const percentage = highlights.length > 0 \r\n                        ? (count / highlights.length) * 100 \r\n                        : 0;\r\n                      \r\n                      return (\r\n                        <div key={color.value} className=\"space-y-1\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <div \r\n                                className=\"w-3 h-3 rounded\"\r\n                                style={{ backgroundColor: color.value }}\r\n                              />\r\n                              <span className=\"text-gray-600\">{color.name}</span>\r\n                            </div>\r\n                            <span>{count}</span>\r\n                          </div>\r\n                          <Progress value={percentage} className=\"h-1\" />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </TabsContent>\r\n          </Tabs>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport PDFAnnotatorWrapper from './PDFAnnotatorWrapper';\r\n\r\nexport default function loadPDFAnnotator(container: HTMLElement, props: any) {\r\n  const root = ReactDOM.createRoot(container);\r\n  \r\n  // Clear loading message\r\n  container.innerHTML = '';\r\n  \r\n  root.render(\r\n    <React.StrictMode>\r\n      <PDFAnnotatorWrapper\r\n        pdfUrl={props.pdfUrl}\r\n        initialAnnotations={props.initialAnnotations}\r\n        readOnly={props.readOnly}\r\n        showToolbar={props.showToolbar}\r\n        height={props.height}\r\n        onAnnotationsChange={(annotations) => {\r\n          // Dispatch custom event for parent components to listen to\r\n          const event = new CustomEvent('pdf-annotations-change', {\r\n            detail: { annotations },\r\n            bubbles: true\r\n          });\r\n          container.dispatchEvent(event);\r\n        }}\r\n        onSave={async (annotations) => {\r\n          // Dispatch custom event for saving\r\n          const event = new CustomEvent('pdf-annotations-save', {\r\n            detail: { annotations },\r\n            bubbles: true\r\n          });\r\n          container.dispatchEvent(event);\r\n          \r\n          // You can also make an API call here\r\n          try {\r\n            const response = await fetch('/api/pdf-annotations', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({ annotations }),\r\n            });\r\n            \r\n            if (!response.ok) {\r\n              throw new Error('Failed to save annotations');\r\n            }\r\n            \r\n            return await response.json();\r\n          } catch (error) {\r\n            console.error('Error saving annotations:', error);\r\n            throw error;\r\n          }\r\n        }}\r\n      />\r\n    </React.StrictMode>\r\n  );\r\n}"],"names":["pdfjsLib.GlobalWorkerOptions","pdfjsLib.version","getNextId","resetHash","parseIdFromHash","HighlightPopup","comment","jsxs","jsx","PDFHighlighterClient","pdfUrl","highlights","onAddHighlight","onUpdateHighlight","onDeleteHighlight","selectedColor","scale","currentPage","onPageChange","onTotalPagesChange","readOnly","isLoading","setIsLoading","useState","scrollViewerTo","useRef","useEffect","highlightFromHash","highlight","h","handleHighlightAdd","newHighlight","updateHash","PdfLoader","Loader2","error","pdfDocument","PdfHighlighter","event","scrollTo","position","content","hideTipAndSelection","transformSelection","Tip","index","setTip","hideTip","viewportToScaled","screenshot","isScrolledTo","component","Highlight","AreaHighlight","boundingRect","HIGHLIGHT_COLORS","PDFAnnotatorWrapper","pdfFile","initialAnnotations","onAnnotationsChange","onSave","showToolbar","height","className","setHighlights","setSelectedColor","setScale","setCurrentPage","totalPages","setTotalPages","setError","isSaving","setIsSaving","selectedHighlight","setSelectedHighlight","pdfBlobUrl","setPdfBlobUrl","url","useCallback","prev","handleHighlightUpdate","highlightId","updates","handleHighlightDelete","handleSave","err","exportAnnotations","dataStr","dataUri","exportFileDefaultName","linkElement","importAnnotations","file","reader","e","imported","handleZoomIn","handleZoomOut","scrollToHighlight","el","Card","Highlighter","color","Button","ZoomOut","ZoomIn","ChevronLeft","ChevronRight","Save","Download","Fragment","Upload","Alert","AlertDescription","Tabs","TabsList","TabsTrigger","MessageSquare","FileText","TabsContent","ScrollArea","Trash2","Badge","count","percentage","Progress","loadPDFAnnotator","container","props","root","ReactDOM","React","annotations","response"],"mappings":"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"}