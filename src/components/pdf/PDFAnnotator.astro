---
export interface Props {
  pdfUrl?: string;
  initialAnnotations?: any[];
  readOnly?: boolean;
  showToolbar?: boolean;
  height?: string;
  className?: string;
}

const { 
  pdfUrl = '', 
  initialAnnotations = [], 
  readOnly = false,
  showToolbar = true,
  height = '800px',
  className = ''
} = Astro.props;
---

<div 
  id="pdf-annotator-root" 
  class={`pdf-annotator-container ${className}`}
  data-pdf-url={pdfUrl}
  data-initial-annotations={JSON.stringify(initialAnnotations)}
  data-read-only={readOnly}
  data-show-toolbar={showToolbar}
  data-height={height}
>
  <div class="flex items-center justify-center h-full">
    <div class="text-gray-500">Loading PDF Annotator...</div>
  </div>
</div>

<script>
  // Only run on client side
  if (typeof window !== 'undefined') {
    import('./PDFAnnotatorIslandLoader').then(({ default: loadPDFAnnotator }) => {
      const container = document.getElementById('pdf-annotator-root');
      if (container) {
        const props = {
          pdfUrl: container.dataset.pdfUrl || '',
          initialAnnotations: JSON.parse(container.dataset.initialAnnotations || '[]'),
          readOnly: container.dataset.readOnly === 'true',
          showToolbar: container.dataset.showToolbar === 'true',
          height: container.dataset.height || '800px',
        };
        
        loadPDFAnnotator(container, props);
      }
    });
  }
</script>

<style>
  /* PDF Highlighter Styles */
  :global(.PdfHighlighter) {
    height: 100%;
  }
  
  :global(.pdfViewer) {
    padding: 1rem;
  }
  
  :global(.page) {
    margin-bottom: 1rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  :global(.highlight-layer) {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
  }
  
  :global(.Highlight__part) {
    cursor: pointer;
    pointer-events: auto;
    transition: background 0.3s;
  }
  
  :global(.Highlight__part:hover) {
    filter: brightness(0.9);
  }
  
  :global(.AreaHighlight) {
    border: 2px solid;
    cursor: pointer;
    pointer-events: auto;
  }
  
  :global(.AreaHighlight:hover) {
    filter: brightness(0.9);
  }
  
  :global(.Tip) {
    background-color: white;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    padding: 0.5rem;
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }
  
  :global(.Tip__compact) {
    display: flex;
    gap: 0.5rem;
  }
  
  :global(.Tip__card) {
    padding: 0.75rem;
  }
  
  :global(.Tip__card input),
  :global(.Tip__card textarea) {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #e5e7eb;
    border-radius: 0.25rem;
    margin-top: 0.5rem;
  }
  
  :global(.Tip__card button) {
    margin-top: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: #3b82f6;
    color: white;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    cursor: pointer;
  }
  
  :global(.Tip__card button:hover) {
    background-color: #2563eb;
  }
</style>