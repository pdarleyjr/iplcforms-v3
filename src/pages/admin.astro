---
import Layout from '@/layouts/Layout.astro';
import { APIDocumentation } from '@/components/admin/api-documentation';

import { CustomerService } from '@/lib/services/customer';
import { SubscriptionService } from '@/lib/services/subscription';
import { CustomerSubscriptionService } from '@/lib/services/customer_subscription';
import { FormTemplateService } from '@/lib/services/form_template';

const { DB } = Astro.locals.runtime.env;

const customerService = new CustomerService(DB);
const subscriptionService = new SubscriptionService(DB);
const customerSubscriptionService = new CustomerSubscriptionService(DB);
const formTemplateService = new FormTemplateService(DB);

// Initialize with fallback empty arrays in case of database errors
let customers = [];
let subscriptions = [];
let customerSubscriptions = [];
let formTemplates = [];

try {
  customers = await customerService.getAll();
  subscriptions = await subscriptionService.getAll();
  customerSubscriptions = await customerSubscriptionService.getAll();
  formTemplates = await formTemplateService.getAll();
} catch (error) {
  console.error('Database error in admin page:', error);
  // Fallback data will be empty arrays initialized above
}

const data = [
  {
    name: 'Customers',
    value: customers.length,
    href: '/admin/customers'
  },
  {
    name: 'Subscriptions',
    value: subscriptions.length,
    href: '/admin/subscriptions'
  },
  {
    name: 'Forms',
    value: formTemplates.length,
    href: '/forms'
  },
  {
    name: 'Customer Subscriptions',
    value: customerSubscriptions.length
  }
]
---

<Layout title="Admin">
  <div class="space-y-8">
    <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3 mt-4">
      {data.map((item) => (
        item.href ? (
          <div class="rounded-xl border bg-card text-card-foreground hover:bg-muted shadow transition-colors">
            <a href={item.href}>
              <div class="p-6">
                <div class="flex flex-row items-center justify-between space-y-0 pb-2">
                  <div class="tracking-tight text-sm font-medium">{item.name}</div>
                </div>
                <div class="pt-0">
                  <div class="text-2xl font-bold">{item.value}</div>
                </div>
              </div>
            </a>
          </div>
        ) : (
          <div class="rounded-xl border bg-card text-card-foreground shadow">
            <div class="p-6">
              <div class="flex flex-row items-center justify-between space-y-0 pb-2">
                <div class="tracking-tight text-sm font-medium">{item.name}</div>
              </div>
              <div class="pt-0">
                <div class="text-2xl font-bold">{item.value}</div>
              </div>
            </div>
          </div>
        )
      ))}
    </div>

    <section class="space-y-4">
      <h2 class="text-3xl font-bold tracking-tight">API</h2>
      <div>
        <APIDocumentation client:only="react" />
      </div>
    </section>
  </div>
</Layout>
